__NUXT_JSONP__("/posts/leetcode-108", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au,av,aw,ax,ay,az,aA,aB,aC,aD,aE,aF,aG,aH,aI,aJ,aK,aL,aM,aN,aO,aP,aQ,aR,aS,aT,aU,aV,aW){ag.slug="leetcode-108";ag.description="Convert Sorted Array to Binary Search Tree";ag.title="LeetCode 108번 문제";ag.tags="algorithm, leetcode, python, tree, bst";ag.toc=[{id:ah,depth:G,text:ai},{id:aj,depth:G,text:ak},{id:al,depth:G,text:am},{id:an,depth:3,text:ao},{id:H,depth:G,text:H}];ag.body={type:"root",children:[{type:b,tag:I,props:{id:ah},children:[{type:b,tag:s,props:{href:"#%EB%AC%B8%EC%A0%9C-%EB%A7%81%ED%81%AC",ariaHidden:z,tabIndex:A},children:[{type:b,tag:c,props:{className:[B,C]},children:[]}]},{type:a,value:ai}]},{type:a,value:g},{type:b,tag:"p",props:{},children:[{type:b,tag:s,props:{href:ap,rel:[_,$,aa],target:ab},children:[{type:a,value:ap}]}]},{type:a,value:g},{type:b,tag:I,props:{id:aj},children:[{type:b,tag:s,props:{href:"#%EB%82%98%EC%9D%98-%ED%92%80%EC%9D%B4",ariaHidden:z,tabIndex:A},children:[{type:b,tag:c,props:{className:[B,C]},children:[]}]},{type:a,value:ak}]},{type:a,value:g},{type:b,tag:J,props:{},children:[{type:a,value:g},{type:b,tag:D,props:{},children:[{type:a,value:"이진 탐색 트리(BST)를 응용하여 재귀 호출하면서 해결하였다."}]},{type:a,value:g}]},{type:a,value:g},{type:b,tag:aq,props:{},children:[{type:a,value:g},{type:b,tag:ar,props:{},children:[{type:a,value:as}]},{type:a,value:g},{type:b,tag:K,props:{markdown:E},children:[{type:a,value:g},{type:b,tag:K,props:{className:[at]},children:[{type:b,tag:au,props:{className:[av,aw]},children:[{type:b,tag:F,props:{},children:[{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:ax}]},{type:a,value:ay},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:az}]},{type:a,value:L},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:aA},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:M}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,N]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:P},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:Q}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,R]},children:[{type:a,value:aB}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:aC},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:T}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:aD},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:aE},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:aF},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:aG},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:aH},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:U},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:aI},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:V},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:aJ},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:M}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,N]},children:[{type:a,value:"MySolution1"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:P},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:Q}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,R]},children:[{type:a,value:y}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:W},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:L},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,X]},children:[{type:a,value:aK}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:ac}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:aL}]},{type:a,value:aM},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:O},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:aN}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:aO}]},{type:a,value:W},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:aP},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:Y}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:x}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,ad]},children:[{type:a,value:"# 인덱스 설정"}]},{type:a,value:"\n        start"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:" end "},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:T}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,X]},children:[{type:a,value:aQ}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:ac}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:E}]},{type:a,value:aR},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:"start "},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:ae}]},{type:a,value:" end"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:aS}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:aT}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,ad]},children:[{type:a,value:"# 현재 노드와 양쪽 자식 노드 구성"}]},{type:a,value:"\n        root "},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:aU},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:aV},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:U},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:Z},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:T}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:aV},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:V},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:Z},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:ae}]},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:E}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:Y}]},{type:a,value:" root\n"}]}]}]},{type:a,value:g}]},{type:a,value:g}]},{type:a,value:g},{type:b,tag:I,props:{id:al},children:[{type:b,tag:s,props:{href:"#%EB%AC%B8%EC%A0%9C-%ED%92%80%EC%9D%B4",ariaHidden:z,tabIndex:A},children:[{type:b,tag:c,props:{className:[B,C]},children:[]}]},{type:a,value:am}]},{type:a,value:g},{type:b,tag:"h3",props:{id:an},children:[{type:b,tag:s,props:{href:"#1-%EC%9D%B4%EC%A7%84-%EA%B2%80%EC%83%89-%EA%B2%B0%EA%B3%BC%EB%A1%9C-%ED%8A%B8%EB%A6%AC-%EA%B5%AC%EC%84%B1",ariaHidden:z,tabIndex:A},children:[{type:b,tag:c,props:{className:[B,C]},children:[]}]},{type:a,value:ao}]},{type:a,value:g},{type:b,tag:J,props:{},children:[{type:a,value:g},{type:b,tag:D,props:{},children:[{type:a,value:"로직은 같지만, 위의 방법처럼 굳이 "},{type:b,tag:F,props:{},children:[{type:a,value:"start"}]},{type:a,value:"와 "},{type:b,tag:F,props:{},children:[{type:a,value:"end"}]},{type:a,value:" 변수를 생성할 필요 없이 "},{type:b,tag:F,props:{},children:[{type:a,value:v}]},{type:a,value:" 하나로 슬라이싱을 수행하는 방법이다."}]},{type:a,value:g}]},{type:a,value:g},{type:b,tag:aq,props:{},children:[{type:a,value:g},{type:b,tag:ar,props:{},children:[{type:a,value:as}]},{type:a,value:g},{type:b,tag:K,props:{markdown:E},children:[{type:a,value:g},{type:b,tag:K,props:{className:[at]},children:[{type:b,tag:au,props:{className:[av,aw]},children:[{type:b,tag:F,props:{},children:[{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:ax}]},{type:a,value:ay},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:az}]},{type:a,value:L},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:aA},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:M}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,N]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:P},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:Q}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,R]},children:[{type:a,value:aB}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:aC},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:T}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:aD},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:aE},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:aF},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:aG},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:aH},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:U},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:aI},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:V},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:aJ},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:M}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,N]},children:[{type:a,value:"Solution1"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:P},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:Q}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,R]},children:[{type:a,value:y}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:W},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:L},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,X]},children:[{type:a,value:aK}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:ac}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:aL}]},{type:a,value:aM},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:O},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:aN}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:aO}]},{type:a,value:W},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:aP},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:Y}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:x}]},{type:a,value:aR},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,X]},children:[{type:a,value:aQ}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:aS}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:aT}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,ad]},children:[{type:a,value:"# 분할 정복으로 이진 검색 결과 트리 구성"}]},{type:a,value:"\n        node "},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:aU},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:aW},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:U},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:Z},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:aW},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:V},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:Z},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:ae}]},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:E}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:Y}]},{type:a,value:" node\n"}]}]}]},{type:a,value:g}]},{type:a,value:g}]},{type:a,value:g},{type:b,tag:I,props:{id:H},children:[{type:b,tag:s,props:{href:"#%EC%B6%9C%EC%B2%98",ariaHidden:z,tabIndex:A},children:[{type:b,tag:c,props:{className:[B,C]},children:[]}]},{type:a,value:H}]},{type:a,value:g},{type:b,tag:J,props:{},children:[{type:a,value:g},{type:b,tag:D,props:{},children:[{type:a,value:"박상길, 『파이썬 알고리즘 인터뷰』, 책만(2020), p425-427.\n"},{type:b,tag:J,props:{},children:[{type:a,value:g},{type:b,tag:D,props:{},children:[{type:b,tag:s,props:{href:"https:\u002F\u002Fwww.onlybook.co.kr\u002Fentry\u002Falgorithm-interview",rel:[_,$,aa],target:ab},children:[{type:a,value:"도서 정보"}]}]},{type:a,value:g},{type:b,tag:D,props:{},children:[{type:b,tag:s,props:{href:"https:\u002F\u002Fgithub.com\u002Fonlybooks\u002Falgorithm-interview",rel:[_,$,aa],target:ab},children:[{type:a,value:"GitHub"}]}]},{type:a,value:g}]},{type:a,value:g}]},{type:a,value:g}]}]};ag.text="\n## 문제 링크\n\nhttps:\u002F\u002Fleetcode.com\u002Fproblems\u002Fconvert-sorted-array-to-binary-search-tree\u002F\n\n## 나의 풀이\n\n- 이진 탐색 트리(BST)를 응용하여 재귀 호출하면서 해결하였다.\n\n\u003Cdetails\u003E\n\u003Csummary\u003E소스 코드\u003C\u002Fsummary\u003E\n\u003Cdiv markdown=\"1\"\u003E\n\n```python\nfrom typing import List, Optional\nclass TreeNode:\n    def __init__(self, val=0, left=None, right=None):\n        self.val = val\n        self.left = left\n        self.right = right\nclass MySolution1:\n    def sortedArrayToBST(self, nums: List[int]) -\u003E Optional[TreeNode]:\n        if not nums:\n            return None\n        # 인덱스 설정\n        start, end = 0, len(nums) - 1\n        mid = (start + end) \u002F\u002F 2\n        # 현재 노드와 양쪽 자식 노드 구성\n        root = TreeNode(nums[mid])\n        root.left = self.sortedArrayToBST(nums[0:mid])\n        root.right = self.sortedArrayToBST(nums[mid+1:])\n        return root\n```\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdetails\u003E\n\n## 문제 풀이\n\n### 1. 이진 검색 결과로 트리 구성\n\n- 로직은 같지만, 위의 방법처럼 굳이 `start`와 `end` 변수를 생성할 필요 없이 `mid` 하나로 슬라이싱을 수행하는 방법이다.\n\n\u003Cdetails\u003E\n\u003Csummary\u003E소스 코드\u003C\u002Fsummary\u003E\n\u003Cdiv markdown=\"1\"\u003E\n\n```python\nfrom typing import List, Optional\nclass TreeNode:\n    def __init__(self, val=0, left=None, right=None):\n        self.val = val\n        self.left = left\n        self.right = right\nclass Solution1:\n    def sortedArrayToBST(self, nums: List[int]) -\u003E Optional[TreeNode]:\n        if not nums:\n            return None\n        mid = len(nums) \u002F\u002F 2\n        # 분할 정복으로 이진 검색 결과 트리 구성\n        node = TreeNode(nums[mid])\n        node.left = self.sortedArrayToBST(nums[:mid])\n        node.right = self.sortedArrayToBST(nums[mid+1:])\n        return node\n```\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdetails\u003E\n\n## 출처\n\n- 박상길, 『파이썬 알고리즘 인터뷰』, 책만(2020), p425-427.\n  - [도서 정보](https:\u002F\u002Fwww.onlybook.co.kr\u002Fentry\u002Falgorithm-interview)\n  - [GitHub](https:\u002F\u002Fgithub.com\u002Fonlybooks\u002Falgorithm-interview)\n";ag.dir="\u002Fposts\u002F2021\u002F08\u002F23";ag.path="\u002Fposts\u002F2021\u002F08\u002F23\u002Fleetcode-108";ag.extension=".md";ag.createdAt=af;ag.updatedAt="2022-06-26T10:01:49.000Z";return {data:[{post:ag,prev:{slug:"leetcode-938",title:"LeetCode 938번 문제",createdAt:af},next:{slug:"leetcode-1038",title:"LeetCode 1038번 문제",createdAt:af}}],fetch:{},mutations:[["SET_POST",ag],["CLEAR_HEADER_IMAGE",void 0],["SET_HEADER_IMAGE_STATE",true],["SET_SCROLL_STATE",false]]}}("text","element","span","token","punctuation","operator","\n"," ","=","keyword",":",".","(",")",",","[","]","number","a","nums","\n        ","mid","boolean","None","sortedArrayToBST","true",-1,"icon","icon-link","li","1","code",2,"출처","h2","ul","div"," List","class","class-name","TreeNode","\n    ","def","function","self","0","left ","right "," nums","builtin","return"," self","nofollow","noopener","noreferrer","_blank","-","comment","+","2021-08-23T12:50:49.000Z",{},"문제-링크","문제 링크","나의-풀이","나의 풀이","문제-풀이","문제 풀이","1-이진-검색-결과로-트리-구성","1. 이진 검색 결과로 트리 구성","https:\u002F\u002Fleetcode.com\u002Fproblems\u002Fconvert-sorted-array-to-binary-search-tree\u002F","details","summary","소스 코드","nuxt-content-highlight","pre","language-python","line-numbers","from"," typing ","import"," Optional\n","__init__"," val"," left"," right","\n        self","val "," val\n        self"," left\n        self"," right\n","int","\u003E"," Optional","if","not","\n            ","len","\n        mid ","\u002F\u002F","2"," TreeNode","\n        root","\n        node")));