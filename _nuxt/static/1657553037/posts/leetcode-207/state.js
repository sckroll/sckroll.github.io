window.__NUXT__=(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au,av,aw,ax,ay,az,aA,aB,aC,aD,aE,aF,aG,aH,aI,aJ,aK,aL,aM,aN,aO,aP,aQ,aR,aS,aT,aU,aV,aW,aX,aY,aZ,a_,a$,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,bA,bB,bC,bD,bE,bF,bG,bH,bI,bJ,bK,bL){return {staticAssetsBase:"\u002F_nuxt\u002Fstatic\u002F1657553037",layout:"default",error:aW,state:{post:{slug:"leetcode-207",description:"Course Schedule",title:"LeetCode 207번 문제",tags:"algorithm, leetcode, python, dfs, graph",toc:[{id:aX,depth:ad,text:aY},{id:aZ,depth:ad,text:a_},{id:a$,depth:ad,text:ba},{id:bb,depth:aj,text:bc},{id:bd,depth:aj,text:be},{id:bf,depth:ad,text:bg},{id:bh,depth:aj,text:"defaultdict 순회 문제"},{id:bi,depth:aj,text:bj},{id:ak,depth:ad,text:ak}],body:{type:"root",children:[{type:b,tag:ae,props:{id:aX},children:[{type:b,tag:r,props:{href:"#%EB%AC%B8%EC%A0%9C-%EB%A7%81%ED%81%AC",ariaHidden:D,tabIndex:E},children:[{type:b,tag:c,props:{className:[F,G]},children:[]}]},{type:a,value:aY}]},{type:a,value:f},{type:b,tag:"p",props:{},children:[{type:b,tag:r,props:{href:bk,rel:[L,M,N],target:O},children:[{type:a,value:bk}]}]},{type:a,value:f},{type:b,tag:ae,props:{id:aZ},children:[{type:b,tag:r,props:{href:"#%EB%82%98%EC%9D%98-%ED%92%80%EC%9D%B4-%ED%92%80%EC%9D%B4-%EC%8B%A4%ED%8C%A8",ariaHidden:D,tabIndex:E},children:[{type:b,tag:c,props:{className:[F,G]},children:[]}]},{type:a,value:a_}]},{type:a,value:f},{type:b,tag:x,props:{},children:[{type:a,value:f},{type:b,tag:l,props:{},children:[{type:a,value:"나름대로 제한 시간을 두고 풀어보려 했으나... 어쩔 수 없었다. 우선 킵해놓고 나중에 다시 풀어봐야겠다."}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:av,props:{},children:[{type:a,value:f},{type:b,tag:aw,props:{},children:[{type:a,value:ax}]},{type:a,value:f},{type:b,tag:H,props:{markdown:ay},children:[]},{type:a,value:f},{type:b,tag:H,props:{className:[T]},children:[{type:b,tag:U,props:{className:[V,af]},children:[{type:b,tag:o,props:{},children:[{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:az}]},{type:a,value:aA},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:W}]},{type:a,value:aB},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:W}]},{type:a,value:aC},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:aD}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,aE]},children:[{type:a,value:"MySolution1"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:aF},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:X}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,Y]},children:[{type:a,value:"findItinerary"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aG},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:" tickets"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:al},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:aH},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:bl}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:aI}]},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:aJ}]},{type:a,value:al},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:bl}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:"\n        result "},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:P}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:"\n        all_routes "},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:P}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:"\n        itinerary "},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:P}]},{type:a,value:aK},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:u}]},{type:a,value:am},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:Z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:A}]},{type:a,value:" i"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:aL},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:ag},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:w}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:"enumerate"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:"tickets"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:"\n            itinerary"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:aL},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:u}]},{type:a,value:_},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aM},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:"\n            all_routes"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:u}]},{type:a,value:_},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aL},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:ag},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:X}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,Y]},children:[{type:a,value:aN}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:ah},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:" path"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:aO},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:C},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:z}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:"len"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:"routes"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:"=="}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,"number"]},children:[{type:a,value:an}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:"\n                result"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:u}]},{type:a,value:_},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:"path"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:J},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:v}]},{type:a,value:R},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:A}]},{type:a,value:" arrival "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:w}]},{type:a,value:" itinerary"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:ah},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:J},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:z}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:ah},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:ag},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:w}]},{type:a,value:aO},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:bm},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:u}]},{type:a,value:aP},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:ah},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:ag},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:"\n                    dfs"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aM},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:" path "},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:"+"}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:aM},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:aO},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:bm},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:u}]},{type:a,value:_},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:ah},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:ag},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:"\n\n        dfs"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,bn]},children:[{type:a,value:bo}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,bn]},children:[{type:a,value:bo}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:" all_routes"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:v}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:"min"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:"result"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f}]}]}]},{type:a,value:"\n\n"}]},{type:a,value:f},{type:b,tag:ae,props:{id:a$},children:[{type:b,tag:r,props:{href:"#%EB%AC%B8%EC%A0%9C-%ED%92%80%EC%9D%B4",ariaHidden:D,tabIndex:E},children:[{type:b,tag:c,props:{className:[F,G]},children:[]}]},{type:a,value:ba}]},{type:a,value:f},{type:b,tag:ao,props:{id:bb},children:[{type:b,tag:r,props:{href:"#1-dfs%EB%A1%9C-%EC%88%9C%ED%99%98-%EA%B5%AC%EC%A1%B0-%ED%8C%90%EB%B3%84-%EC%8B%9C%EA%B0%84-%EC%B4%88%EA%B3%BC",ariaHidden:D,tabIndex:E},children:[{type:b,tag:c,props:{className:[F,G]},children:[]}]},{type:a,value:bc}]},{type:a,value:f},{type:b,tag:x,props:{},children:[{type:a,value:f},{type:b,tag:l,props:{},children:[{type:a,value:"모든 코스를 완료할 수 있는지 판별하기 위해서는 모든 코스가 순환 구조를 이루고 있는지 확인해야 한다."}]},{type:a,value:f},{type:b,tag:l,props:{},children:[{type:a,value:"하지만 해당 풀이법을 사용하면 시간 초과로 인해 오답 처리가 되었다. 아마 리트코드 테스트 케이스가 추가된 듯 싶다."}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:av,props:{},children:[{type:a,value:f},{type:b,tag:aw,props:{},children:[{type:a,value:ax}]},{type:a,value:f},{type:b,tag:H,props:{markdown:ay},children:[{type:a,value:f},{type:b,tag:H,props:{className:[T]},children:[{type:b,tag:U,props:{className:[V,af]},children:[{type:b,tag:o,props:{},children:[{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:az}]},{type:a,value:aA},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:W}]},{type:a,value:aB},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:W}]},{type:a,value:aC},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:aD}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,aE]},children:[{type:a,value:"Solution1"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:aF},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:X}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,Y]},children:[{type:a,value:bp}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aG},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:bq},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:ap}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:aq},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:al},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:aH},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:ap}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:aI}]},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:aJ}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:br}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:bs},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:P}]},{type:a,value:aK},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:u}]},{type:a,value:am},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:Z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:"# x를 완료하기 위해 y를 끝내야 하므로 x -\u003E y 연결"}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:A}]},{type:a,value:bt},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:ar},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:w}]},{type:a,value:aq},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:bu},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:$},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:u}]},{type:a,value:_},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:as},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:bv}]},{type:a,value:bw},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:P}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:aQ}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:X}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,Y]},children:[{type:a,value:aN}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:K},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:C},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:bx}]},{type:a,value:C},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:z}]},{type:a,value:aR},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:w}]},{type:a,value:by},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:J},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:v}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,y]},children:[{type:a,value:Q}]},{type:a,value:bz},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:u}]},{type:a,value:aS},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:K},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:C},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:A}]},{type:a,value:ar},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:w}]},{type:a,value:aT},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:K},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:J},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:z}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:aa}]},{type:a,value:ab},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:as},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:bA},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:v}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,y]},children:[{type:a,value:Q}]},{type:a,value:R},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:bB}]},{type:a,value:bC},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:u}]},{type:a,value:aP},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:K},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:R},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:v}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,y]},children:[{type:a,value:ac}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:at}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:"# graph를 list() 함수로 묶어서 graph의 키로만 이루어진 리스트 사용"}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:"# 이렇게 사용한 이유는 아래에 설명"}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:A}]},{type:a,value:au},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:w}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:Z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:ai},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:C},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:z}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:aa}]},{type:a,value:ab},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:$},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:J},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:v}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,y]},children:[{type:a,value:Q}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:v}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,y]},children:[{type:a,value:ac}]},{type:a,value:f}]}]}]},{type:a,value:f}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:ao,props:{id:bd},children:[{type:b,tag:r,props:{href:"#2-%EA%B0%80%EC%A7%80%EC%B9%98%EA%B8%B0%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%9C-%EC%B5%9C%EC%A0%81%ED%99%94",ariaHidden:D,tabIndex:E},children:[{type:b,tag:c,props:{className:[F,G]},children:[]}]},{type:a,value:be}]},{type:a,value:f},{type:b,tag:x,props:{},children:[{type:a,value:f},{type:b,tag:l,props:{},children:[{type:a,value:"DFS는 순환이 발견될 때까지 모든 자식 노드를 탐색하기 때문에 불필요하게 동일한 그래프를 여러 번 탐색할 수도 있다."}]},{type:a,value:f},{type:b,tag:l,props:{},children:[{type:a,value:"따라서 한 번 방문한 그래프는 무조건 "},{type:b,tag:o,props:{},children:[{type:a,value:ac}]},{type:a,value:"로 리턴하도록 하여 가지치기를 구현한다."}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:av,props:{},children:[{type:a,value:f},{type:b,tag:aw,props:{},children:[{type:a,value:ax}]},{type:a,value:f},{type:b,tag:H,props:{markdown:ay},children:[{type:a,value:f},{type:b,tag:H,props:{className:[T]},children:[{type:b,tag:U,props:{className:[V,af]},children:[{type:b,tag:o,props:{},children:[{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:az}]},{type:a,value:aA},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:W}]},{type:a,value:aB},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:W}]},{type:a,value:aC},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:aD}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,aE]},children:[{type:a,value:"Solution2"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:aF},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:X}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,Y]},children:[{type:a,value:bp}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aG},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:bq},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:ap}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:aq},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:al},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:aH},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:ap}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:aI}]},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:aJ}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:br}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:bs},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:P}]},{type:a,value:aK},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:u}]},{type:a,value:am},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:Z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:A}]},{type:a,value:bt},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:ar},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:w}]},{type:a,value:aq},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:bu},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:$},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:u}]},{type:a,value:_},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:as},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:bv}]},{type:a,value:bw},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:P}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:aQ}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:"# 방문 여부를 저장하는 변수"}]},{type:a,value:"\n        visited "},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:P}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:aQ}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:X}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,Y]},children:[{type:a,value:aN}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:K},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:C},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:bx}]},{type:a,value:C},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:z}]},{type:a,value:aR},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:w}]},{type:a,value:by},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:J},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:v}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,y]},children:[{type:a,value:Q}]},{type:a,value:R},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:"# 방문 여부 확인"}]},{type:a,value:C},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:z}]},{type:a,value:aR},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:w}]},{type:a,value:" visited"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:J},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:v}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,y]},children:[{type:a,value:ac}]},{type:a,value:bz},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:u}]},{type:a,value:aS},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:K},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:C},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:A}]},{type:a,value:ar},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:w}]},{type:a,value:aT},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:K},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:J},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:z}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:aa}]},{type:a,value:ab},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:as},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:bA},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:v}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,y]},children:[{type:a,value:Q}]},{type:a,value:R},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:bB}]},{type:a,value:bC},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:u}]},{type:a,value:aP},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:K},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:R},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:"# 탐색 종료 후 방문 노드 추가"}]},{type:a,value:"\n            visited"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:u}]},{type:a,value:aS},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:K},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:R},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:v}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,y]},children:[{type:a,value:ac}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:at}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:A}]},{type:a,value:au},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:w}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:Z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:ai},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:C},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:z}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:aa}]},{type:a,value:ab},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:$},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:J},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:v}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,y]},children:[{type:a,value:Q}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:v}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,y]},children:[{type:a,value:ac}]},{type:a,value:f}]}]}]},{type:a,value:f}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:ae,props:{id:bf},children:[{type:b,tag:r,props:{href:"#%EB%B0%B0%EC%9A%B4-%EC%A0%90",ariaHidden:D,tabIndex:E},children:[{type:b,tag:c,props:{className:[F,G]},children:[]}]},{type:a,value:bg}]},{type:a,value:f},{type:b,tag:ao,props:{id:bh},children:[{type:b,tag:r,props:{href:"#defaultdict-%EC%88%9C%ED%9A%8C-%EB%AC%B8%EC%A0%9C",ariaHidden:D,tabIndex:E},children:[{type:b,tag:c,props:{className:[F,G]},children:[]}]},{type:b,tag:o,props:{},children:[{type:a,value:am}]},{type:a,value:" 순회 문제"}]},{type:a,value:f},{type:b,tag:x,props:{},children:[{type:a,value:f},{type:b,tag:l,props:{},children:[{type:a,value:"풀이 1과 풀이 2에서 순환 구조를 판별할 때 아래 코드를 사용했다."}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:H,props:{className:[T]},children:[{type:b,tag:U,props:{className:[V,af]},children:[{type:b,tag:o,props:{},children:[{type:a,value:bD},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:at}]},{type:a,value:bE},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:A}]},{type:a,value:au},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:w}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:Z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:ai},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:bF},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:z}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:aa}]},{type:a,value:ab},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:$},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:bG},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:v}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,y]},children:[{type:a,value:Q}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:x,props:{},children:[{type:a,value:f},{type:b,tag:l,props:{},children:[{type:a,value:"만약 "},{type:b,tag:o,props:{},children:[{type:a,value:aU}]},{type:a,value:"를 사용하지 않는다면 다음과 같은 에러가 뜬다."}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:H,props:{className:[T]},children:[{type:b,tag:U,props:{className:[V,af]},children:[{type:b,tag:o,props:{},children:[{type:a,value:bD},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:at}]},{type:a,value:bE},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:A}]},{type:a,value:au},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:w}]},{type:a,value:aT},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:bF},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:z}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:aa}]},{type:a,value:ab},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:$},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:bG},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:v}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,y]},children:[{type:a,value:Q}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:H,props:{className:[T]},children:[{type:b,tag:U,props:{className:[V,"language-text"]},children:[{type:b,tag:o,props:{},children:[{type:a,value:"RuntimeError: dictionary changed size during iteration\n"}]}]}]},{type:a,value:f},{type:b,tag:x,props:{},children:[{type:a,value:f},{type:b,tag:l,props:{},children:[{type:a,value:"이는 "},{type:b,tag:o,props:{},children:[{type:a,value:"collections.defaultdict()"}]},{type:a,value:"를 사용하면 빈 값 조회 시 오류가 발생하지 않도록 처리하기 때문에 반복문에서 "},{type:b,tag:o,props:{},children:[{type:a,value:ai}]},{type:a,value:"의 값이 변경된다는 오류가 발생하는 것이다. "},{type:b,tag:r,props:{href:"https:\u002F\u002Fstackoverflow.com\u002Fquestions\u002F11941817\u002Fhow-to-avoid-runtimeerror-dictionary-changed-size-during-iteration-error",rel:[L,M,N],target:O},children:[{type:a,value:"스택 오버플로우"}]},{type:a,value:"의 답변을 참고하면 해당 변수를 "},{type:b,tag:o,props:{},children:[{type:a,value:aU}]},{type:a,value:"로 묶으면 된다. (파이썬 3 기준) "},{type:b,tag:o,props:{},children:[{type:a,value:aU}]},{type:a,value:"로 묶으면 새로운 복사본을 만들어서 "},{type:b,tag:o,props:{},children:[{type:a,value:ai}]},{type:a,value:" 변수를 "},{type:b,tag:o,props:{},children:[{type:a,value:"defaultdict()"}]},{type:a,value:"로부터 분리 & 고정시킬 수 있다."}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:ao,props:{id:bi},children:[{type:b,tag:r,props:{href:"#%EC%9C%84%EC%83%81-%EC%A0%95%EB%A0%AC-topological-sort",ariaHidden:D,tabIndex:E},children:[{type:b,tag:c,props:{className:[F,G]},children:[]}]},{type:a,value:bj}]},{type:a,value:f},{type:b,tag:x,props:{},children:[{type:a,value:f},{type:b,tag:l,props:{},children:[{type:a,value:"유향(방향이 있는) 그래프의 꼭짓점들을 변의 방향을 거스르지 않도록 나열하는 정렬 알고리즘\n"},{type:b,tag:x,props:{},children:[{type:a,value:f},{type:b,tag:l,props:{},children:[{type:a,value:"어떤 일을 하는 순서를 찾는 알고리즘"}]},{type:a,value:f},{type:b,tag:l,props:{},children:[{type:a,value:"ex: 대학의 선수과목 구조"}]},{type:a,value:f}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:l,props:{},children:[{type:a,value:"하나의 방향 그래프는 여러 위상 정렬이 가능하며, 위상 정렬의 과정에서 선택되는 정점의 순서를 위상 순서(Topological Order)라고 한다."}]},{type:a,value:f},{type:b,tag:l,props:{},children:[{type:a,value:"위상 정렬이 성립하기 위해서는 "},{type:b,tag:"strong",props:{},children:[{type:a,value:"그래프의 순환이 존재하지 않아야 한다."}]},{type:a,value:f},{type:b,tag:x,props:{},children:[{type:a,value:f},{type:b,tag:l,props:{},children:[{type:a,value:"즉, 진입 차수(노드로 들어오는 간선)가 "},{type:b,tag:o,props:{},children:[{type:a,value:an}]},{type:a,value:"인 시작점이 존재해야 한다."}]},{type:a,value:f}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:l,props:{},children:[{type:a,value:"위상 정렬 순서 (큐를 사용하는 방법)\n"},{type:b,tag:"ol",props:{},children:[{type:a,value:f},{type:b,tag:l,props:{},children:[{type:a,value:"각 노드들의 진입 차수 계산"}]},{type:a,value:f},{type:b,tag:l,props:{},children:[{type:a,value:"진입 차수가 "},{type:b,tag:o,props:{},children:[{type:a,value:an}]},{type:a,value:"인 노드들을 큐에 삽입\n"},{type:b,tag:x,props:{},children:[{type:a,value:f},{type:b,tag:l,props:{},children:[{type:a,value:"여러 개일 경우 삽입 순서는 상관 없다."}]},{type:a,value:f}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:l,props:{},children:[{type:a,value:"큐에서 노드를 꺼내 연결된 간선을 제거"}]},{type:a,value:f},{type:b,tag:l,props:{},children:[{type:a,value:"제거로 인해 진입 차수가 "},{type:b,tag:o,props:{},children:[{type:a,value:an}]},{type:a,value:"이 된 노드를 큐에 삽입"}]},{type:a,value:f},{type:b,tag:l,props:{},children:[{type:a,value:"3번과 4번을 반복하며 큐가 비었으면 종료\n"},{type:b,tag:x,props:{},children:[{type:a,value:f},{type:b,tag:l,props:{},children:[{type:a,value:"모든 원소를 방문하기 전에 큐가 빈다면 그래프의 순환이 존재한다는 뜻이므로 위상 정렬이 불가능하다."}]},{type:a,value:f}]},{type:a,value:f}]},{type:a,value:f}]},{type:a,value:f}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:ae,props:{id:ak},children:[{type:b,tag:r,props:{href:"#%EC%B6%9C%EC%B2%98",ariaHidden:D,tabIndex:E},children:[{type:b,tag:c,props:{className:[F,G]},children:[]}]},{type:a,value:ak}]},{type:a,value:f},{type:b,tag:x,props:{},children:[{type:a,value:f},{type:b,tag:l,props:{},children:[{type:a,value:"박상길, 『파이썬 알고리즘 인터뷰』, 책만(2020), p364-370.\n"},{type:b,tag:x,props:{},children:[{type:a,value:f},{type:b,tag:l,props:{},children:[{type:b,tag:r,props:{href:"https:\u002F\u002Fwww.onlybook.co.kr\u002Fentry\u002Falgorithm-interview",rel:[L,M,N],target:O},children:[{type:a,value:"도서 정보"}]}]},{type:a,value:f},{type:b,tag:l,props:{},children:[{type:b,tag:r,props:{href:"https:\u002F\u002Fgithub.com\u002Fonlybooks\u002Falgorithm-interview",rel:[L,M,N],target:O},children:[{type:a,value:"GitHub"}]}]},{type:a,value:f}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:l,props:{},children:[{type:b,tag:r,props:{href:bH,rel:[L,M,N],target:O},children:[{type:a,value:bH}]}]},{type:a,value:f},{type:b,tag:l,props:{},children:[{type:b,tag:r,props:{href:bI,rel:[L,M,N],target:O},children:[{type:a,value:bI}]}]},{type:a,value:f},{type:b,tag:l,props:{},children:[{type:b,tag:r,props:{href:bJ,rel:[L,M,N],target:O},children:[{type:a,value:bJ}]}]},{type:a,value:f},{type:b,tag:l,props:{},children:[{type:b,tag:r,props:{href:bK,rel:[L,M,N],target:O},children:[{type:a,value:bK}]}]},{type:a,value:f}]}]},text:"\n## 문제 링크\n\nhttps:\u002F\u002Fleetcode.com\u002Fproblems\u002Fcourse-schedule\u002F\n\n## 나의 풀이 (풀이 실패)\n\n- 나름대로 제한 시간을 두고 풀어보려 했으나... 어쩔 수 없었다. 우선 킵해놓고 나중에 다시 풀어봐야겠다.\n\n\u003Cdetails\u003E\n\u003Csummary\u003E소스 코드\u003C\u002Fsummary\u003E\n\u003Cdiv markdown=\"1\"\u003E\u003C\u002Fdiv\u003E\n\n```python\nfrom typing import List\nimport collections\n\n\nclass MySolution1:\n    def findItinerary(self, tickets: List[List[str]]) -\u003E List[str]:\n        result = []\n        all_routes = []\n        itinerary = collections.defaultdict(list)\n        for i, [departure, arrival] in enumerate(tickets):\n            itinerary[departure].append(arrival)\n            all_routes.append((departure, arrival))\n\n        def dfs(dep, path, routes):\n            if len(routes) == 0:\n                result.append(path)\n                return\n\n            for arrival in itinerary[dep]:\n                if (dep, arrival) in routes:\n                    routes.remove((dep, arrival))\n                    dfs(arrival, path + [arrival], routes)\n                    routes.append((dep, arrival))\n\n        dfs('JFK', ['JFK'], all_routes)\n        return min(result)\n```\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdetails\u003E\n\n## 문제 풀이\n\n### 1. DFS로 순환 구조 판별 (시간 초과)\n\n- 모든 코스를 완료할 수 있는지 판별하기 위해서는 모든 코스가 순환 구조를 이루고 있는지 확인해야 한다.\n- 하지만 해당 풀이법을 사용하면 시간 초과로 인해 오답 처리가 되었다. 아마 리트코드 테스트 케이스가 추가된 듯 싶다.\n\n\u003Cdetails\u003E\n\u003Csummary\u003E소스 코드\u003C\u002Fsummary\u003E\n\u003Cdiv markdown=\"1\"\u003E\n\n```python\nfrom typing import List\nimport collections\n\n\nclass Solution1:\n    def canFinish(self, numCourses: int, prerequisites: List[List[int]]) -\u003E bool:\n        graph = collections.defaultdict(list)\n        # x를 완료하기 위해 y를 끝내야 하므로 x -\u003E y 연결\n        for x, y in prerequisites:\n            graph[x].append(y)\n\n        # 이미 방문했던 노드를 중복 없이 저장\n        traced = set()\n\n        def dfs(i):\n            # 순환 구조이면 False\n            if i in traced:\n                return False\n\n            traced.add(i)\n            for y in graph[i]:\n                if not dfs(y):\n                    return False\n\n            # 탐색 종료 후 순환 노드 삭제\n            traced.remove(i)\n\n            return True\n\n        # 순환 구조 판별\n        # graph를 list() 함수로 묶어서 graph의 키로만 이루어진 리스트 사용\n        # 이렇게 사용한 이유는 아래에 설명\n        for x in list(graph):\n            if not dfs(x):\n                return False\n\n        return True\n```\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdetails\u003E\n\n### 2. 가지치기를 이용한 최적화\n\n- DFS는 순환이 발견될 때까지 모든 자식 노드를 탐색하기 때문에 불필요하게 동일한 그래프를 여러 번 탐색할 수도 있다.\n- 따라서 한 번 방문한 그래프는 무조건 `True`로 리턴하도록 하여 가지치기를 구현한다.\n\n\u003Cdetails\u003E\n\u003Csummary\u003E소스 코드\u003C\u002Fsummary\u003E\n\u003Cdiv markdown=\"1\"\u003E\n\n```python\nfrom typing import List\nimport collections\n\n\nclass Solution2:\n    def canFinish(self, numCourses: int, prerequisites: List[List[int]]) -\u003E bool:\n        graph = collections.defaultdict(list)\n        for x, y in prerequisites:\n            graph[x].append(y)\n\n        # 이미 방문했던 노드를 중복 없이 저장\n        traced = set()\n\n        # 방문 여부를 저장하는 변수\n        visited = set()\n\n        def dfs(i):\n            # 순환 구조이면 False\n            if i in traced:\n                return False\n\n            # 방문 여부 확인\n            if i in visited:\n                return True\n\n            traced.add(i)\n            for y in graph[i]:\n                if not dfs(y):\n                    return False\n\n            # 탐색 종료 후 순환 노드 삭제\n            traced.remove(i)\n\n            # 탐색 종료 후 방문 노드 추가\n            visited.add(i)\n\n            return True\n\n        # 순환 구조 판별\n        for x in list(graph):\n            if not dfs(x):\n                return False\n\n        return True\n```\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdetails\u003E\n\n## 배운 점\n\n### `defaultdict` 순회 문제\n\n- 풀이 1과 풀이 2에서 순환 구조를 판별할 때 아래 코드를 사용했다.\n```python\n  # 순환 구조 판별\n  for x in list(graph):\n      if not dfs(x):\n          return False\n  ```\n- 만약 `list()`를 사용하지 않는다면 다음과 같은 에러가 뜬다.\n```python\n  # 순환 구조 판별\n  for x in graph:\n      if not dfs(x):\n          return False\n  ```\n  ```\n  RuntimeError: dictionary changed size during iteration\n  ```\n- 이는 `collections.defaultdict()`를 사용하면 빈 값 조회 시 오류가 발생하지 않도록 처리하기 때문에 반복문에서 `graph`의 값이 변경된다는 오류가 발생하는 것이다. [스택 오버플로우](https:\u002F\u002Fstackoverflow.com\u002Fquestions\u002F11941817\u002Fhow-to-avoid-runtimeerror-dictionary-changed-size-during-iteration-error)의 답변을 참고하면 해당 변수를 `list()`로 묶으면 된다. (파이썬 3 기준) `list()`로 묶으면 새로운 복사본을 만들어서 `graph` 변수를 `defaultdict()`로부터 분리 & 고정시킬 수 있다.\n\n### 위상 정렬 (Topological Sort)\n\n- 유향(방향이 있는) 그래프의 꼭짓점들을 변의 방향을 거스르지 않도록 나열하는 정렬 알고리즘\n  - 어떤 일을 하는 순서를 찾는 알고리즘\n  - ex: 대학의 선수과목 구조\n- 하나의 방향 그래프는 여러 위상 정렬이 가능하며, 위상 정렬의 과정에서 선택되는 정점의 순서를 위상 순서(Topological Order)라고 한다.\n- 위상 정렬이 성립하기 위해서는 **그래프의 순환이 존재하지 않아야 한다.**\n  - 즉, 진입 차수(노드로 들어오는 간선)가 `0`인 시작점이 존재해야 한다.\n- 위상 정렬 순서 (큐를 사용하는 방법)\n   1. 각 노드들의 진입 차수 계산\n   2. 진입 차수가 `0`인 노드들을 큐에 삽입\n      - 여러 개일 경우 삽입 순서는 상관 없다.\n   3. 큐에서 노드를 꺼내 연결된 간선을 제거\n   4. 제거로 인해 진입 차수가 `0`이 된 노드를 큐에 삽입\n   5. 3번과 4번을 반복하며 큐가 비었으면 종료\n      - 모든 원소를 방문하기 전에 큐가 빈다면 그래프의 순환이 존재한다는 뜻이므로 위상 정렬이 불가능하다.\n\n## 출처\n\n- 박상길, 『파이썬 알고리즘 인터뷰』, 책만(2020), p364-370.\n  - [도서 정보](https:\u002F\u002Fwww.onlybook.co.kr\u002Fentry\u002Falgorithm-interview)\n  - [GitHub](https:\u002F\u002Fgithub.com\u002Fonlybooks\u002Falgorithm-interview)\n- https:\u002F\u002Fko.wikipedia.org\u002Fwiki\u002F%EC%9C%84%EC%83%81%EC%A0%95%EB%A0%AC\n- https:\u002F\u002Fgmlwjd9405.github.io\u002F2018\u002F08\u002F27\u002Falgorithm-topological-sort.html\n- https:\u002F\u002Fssungkang.tistory.com\u002Fentry\u002FAlgorithm-%EC%9C%84%EC%83%81%EC%A0%95%EB%A0%AC\n- https:\u002F\u002Fvelog.io\u002F@max9106\u002FAlgorithm-%EC%9C%84%EC%83%81-%EC%A0%95%EB%A0%ACTopology-Sort\n",dir:"\u002Fposts\u002F2021\u002F06\u002F01",path:"\u002Fposts\u002F2021\u002F06\u002F01\u002Fleetcode-207",extension:".md",createdAt:"2021-06-01T14:55:06.000Z",updatedAt:"2022-06-26T10:01:49.000Z"},isErrorPage:S,isDarkMode:S,isScrolled:S,isMobile:S,isTablet:S,hasHeaderImage:aV,isMobileMenuOpened:S,headerImage:"",perPage:10},serverRendered:aV,routePath:"\u002Fposts\u002Fleetcode-207",config:{_app:{basePath:"\u002F",assetsPath:"\u002F_nuxt\u002F",cdnURL:aW},content:{dbHash:"922083d8"}},colorMode:{preference:bL,value:bL,unknown:aV,forced:S}}}("text","element","span","token","punctuation","\n","keyword"," ","(",")",":","li","builtin",",","code","[","]","a","operator","comment",".","return","in","ul","boolean","if","for","\n\n        ","\n            ","true",-1,"icon","icon-link","div","\n        ","\n                ","i","nofollow","noopener","noreferrer","_blank","=","False","\n\n            ",false,"nuxt-content-highlight","pre","line-numbers","import","def","function","list","append","x","not"," dfs","True",2,"h2","language-python"," arrival","dep","graph",3,"출처"," List","defaultdict","0","h3","int"," prerequisites"," y ","y","# 순환 구조 판별"," x ","details","summary","소스 코드","1","from"," typing "," List\n"," collections\n\n\n","class","class-name","\n    ","self","List","-","\u003E"," collections","departure","arrival","dfs"," routes","remove","set"," i ","add"," graph","list()",true,null,"문제-링크","문제 링크","나의-풀이-풀이-실패","나의 풀이 (풀이 실패)","문제-풀이","문제 풀이","1-dfs로-순환-구조-판별-시간-초과","1. DFS로 순환 구조 판별 (시간 초과)","2-가지치기를-이용한-최적화","2. 가지치기를 이용한 최적화","배운-점","배운 점","defaultdict-순회-문제","위상-정렬-topological-sort","위상 정렬 (Topological Sort)","https:\u002F\u002Fleetcode.com\u002Fproblems\u002Fcourse-schedule\u002F","str","\n                    routes","string","'JFK'","canFinish"," numCourses","bool","\n        graph "," x","\n            graph","# 이미 방문했던 노드를 중복 없이 저장","\n        traced ","# 순환 구조이면 False"," traced","\n\n            traced","\n                    ","# 탐색 종료 후 순환 노드 삭제","\n            traced","  ","\n  ","\n      ","\n          ","https:\u002F\u002Fko.wikipedia.org\u002Fwiki\u002F%EC%9C%84%EC%83%81%EC%A0%95%EB%A0%AC","https:\u002F\u002Fgmlwjd9405.github.io\u002F2018\u002F08\u002F27\u002Falgorithm-topological-sort.html","https:\u002F\u002Fssungkang.tistory.com\u002Fentry\u002FAlgorithm-%EC%9C%84%EC%83%81%EC%A0%95%EB%A0%AC","https:\u002F\u002Fvelog.io\u002F@max9106\u002FAlgorithm-%EC%9C%84%EC%83%81-%EC%A0%95%EB%A0%ACTopology-Sort","system"));