__NUXT_JSONP__("/posts/leetcode-104", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au,av,aw,ax,ay,az,aA,aB,aC,aD,aE,aF,aG,aH,aI,aJ,aK,aL,aM,aN,aO,aP,aQ,aR){aa.slug="leetcode-104";aa.description="Maximum Depth of Binary Tree";aa.title="LeetCode 104번 문제";aa.tags="algorithm, leetcode, python, tree";aa.toc=[{id:ab,depth:E,text:ac},{id:ad,depth:E,text:ae},{id:af,depth:E,text:ag},{id:ah,depth:3,text:ai},{id:F,depth:E,text:F}];aa.body={type:Q,children:[{type:b,tag:G,props:{id:ab},children:[{type:b,tag:q,props:{href:"#%EB%AC%B8%EC%A0%9C-%EB%A7%81%ED%81%AC",ariaHidden:v,tabIndex:w},children:[{type:b,tag:c,props:{className:[x,y]},children:[]}]},{type:a,value:ac}]},{type:a,value:f},{type:b,tag:"p",props:{},children:[{type:b,tag:q,props:{href:aj,rel:[R,S,T],target:U},children:[{type:a,value:aj}]}]},{type:a,value:f},{type:b,tag:G,props:{id:ad},children:[{type:b,tag:q,props:{href:"#%EB%82%98%EC%9D%98-%ED%92%80%EC%9D%B4",ariaHidden:v,tabIndex:w},children:[{type:b,tag:c,props:{className:[x,y]},children:[]}]},{type:a,value:ae}]},{type:a,value:f},{type:b,tag:H,props:{},children:[{type:a,value:f},{type:b,tag:z,props:{},children:[{type:a,value:"DFS 재귀 호출을 사용하여 좌, 우 자식 노드 중 더 깊은 방향을 리턴한다."}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:ak,props:{},children:[{type:a,value:f},{type:b,tag:al,props:{},children:[{type:a,value:am}]},{type:a,value:f},{type:b,tag:I,props:{markdown:r},children:[{type:a,value:f},{type:b,tag:I,props:{className:[an]},children:[{type:b,tag:ao,props:{className:[ap,aq]},children:[{type:b,tag:ar,props:{},children:[{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:J}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,K]},children:[{type:a,value:as}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:L},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:A}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,B]},children:[{type:a,value:at}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:au},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:av},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:aw},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:ax},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:ay},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:m}]},{type:a,value:az},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:aA},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:m}]},{type:a,value:aB},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:aC},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:m}]},{type:a,value:aD},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:J}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,K]},children:[{type:a,value:"MySolution1"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:L},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:A}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,B]},children:[{type:a,value:aE}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:aF},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:aG},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:V}]},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:aH}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,C]},children:[{type:a,value:aI}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:O},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:A}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,B]},children:[{type:a,value:aJ}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:W},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:" depth"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:P}]},{type:a,value:" node "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:aK}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:D}]},{type:a,value:Y},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:V}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:r}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:D}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,C]},children:[{type:a,value:"max"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:aJ},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:W},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:Z},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:Y},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:aL}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:r}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:aM},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:W},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:_},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:Y},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:aL}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:r}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:O},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:D}]},{type:a,value:aM},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:r}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:f}]}]}]},{type:a,value:f}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:G,props:{id:af},children:[{type:b,tag:q,props:{href:"#%EB%AC%B8%EC%A0%9C-%ED%92%80%EC%9D%B4",ariaHidden:v,tabIndex:w},children:[{type:b,tag:c,props:{className:[x,y]},children:[]}]},{type:a,value:ag}]},{type:a,value:f},{type:b,tag:"h3",props:{id:ah},children:[{type:b,tag:q,props:{href:"#1-%EB%B0%98%EB%B3%B5-%EA%B5%AC%EC%A1%B0%EB%A1%9C-bfs-%ED%92%80%EC%9D%B4",ariaHidden:v,tabIndex:w},children:[{type:b,tag:c,props:{className:[x,y]},children:[]}]},{type:a,value:ai}]},{type:a,value:f},{type:b,tag:H,props:{},children:[{type:a,value:f},{type:b,tag:z,props:{},children:[{type:a,value:"DFS 구조보다 BFS로 푸는 것이 조금 더 빠르다."}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:ak,props:{},children:[{type:a,value:f},{type:b,tag:al,props:{},children:[{type:a,value:am}]},{type:a,value:f},{type:b,tag:I,props:{markdown:r},children:[{type:a,value:f},{type:b,tag:I,props:{className:[an]},children:[{type:b,tag:ao,props:{className:[ap,aq]},children:[{type:b,tag:ar,props:{},children:[{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:"import"}]},{type:a,value:" collections\n\n\n"},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:J}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,K]},children:[{type:a,value:as}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:L},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:A}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,B]},children:[{type:a,value:at}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:au},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:av},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:aw},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:ax},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:ay},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:m}]},{type:a,value:az},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:aA},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:m}]},{type:a,value:aB},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:aC},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:m}]},{type:a,value:aD},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:J}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,K]},children:[{type:a,value:"Solution1"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:L},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:A}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,B]},children:[{type:a,value:aE}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:aF},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:aG},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:V}]},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:aH}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,C]},children:[{type:a,value:aI}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:O},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:P}]},{type:a,value:" root "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:aK}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:D}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:N}]},{type:a,value:"\n        queue "},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:m}]},{type:a,value:" collections"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:"deque"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:"["}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:"]"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:"\n        depth "},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:m}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:N}]},{type:a,value:"\n        \n        "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:"while"}]},{type:a,value:aN},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:"\n            depth "},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:"+="}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:r}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,$]},children:[{type:a,value:"# 큐 연산 추출 노드의 자식 노드 삽입"}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,$]},children:[{type:a,value:"# len(queue)만큼 반복하므로 자식 노드가 추출될 일은 없음"}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:"for"}]},{type:a,value:" _ "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:"in"}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,C]},children:[{type:a,value:"range"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,C]},children:[{type:a,value:"len"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:"queue"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:"\n                cur_root "},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:m}]},{type:a,value:aN},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:"popleft"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:P}]},{type:a,value:aO},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:Z},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:aP},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:aQ},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:aR},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:Z},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:P}]},{type:a,value:aO},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:_},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:aP},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:aQ},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:aR},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:_},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:"\n                    \n        "},{type:b,tag:c,props:{className:[d,$]},children:[{type:a,value:"# BFS 반복 횟수 == 깊이"}]},{type:a,value:O},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:D}]},{type:a,value:" depth\n"}]}]}]},{type:a,value:f}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:G,props:{id:F},children:[{type:b,tag:q,props:{href:"#%EC%B6%9C%EC%B2%98",ariaHidden:v,tabIndex:w},children:[{type:b,tag:c,props:{className:[x,y]},children:[]}]},{type:a,value:F}]},{type:a,value:f},{type:b,tag:H,props:{},children:[{type:a,value:f},{type:b,tag:z,props:{},children:[{type:a,value:"박상길, 『파이썬 알고리즘 인터뷰』, 책만(2020), p387-389.\n"},{type:b,tag:H,props:{},children:[{type:a,value:f},{type:b,tag:z,props:{},children:[{type:b,tag:q,props:{href:"https:\u002F\u002Fwww.onlybook.co.kr\u002Fentry\u002Falgorithm-interview",rel:[R,S,T],target:U},children:[{type:a,value:"도서 정보"}]}]},{type:a,value:f},{type:b,tag:z,props:{},children:[{type:b,tag:q,props:{href:"https:\u002F\u002Fgithub.com\u002Fonlybooks\u002Falgorithm-interview",rel:[R,S,T],target:U},children:[{type:a,value:"GitHub"}]}]},{type:a,value:f}]},{type:a,value:f}]},{type:a,value:f}]}]};aa.text="\n## 문제 링크\n\nhttps:\u002F\u002Fleetcode.com\u002Fproblems\u002Fmaximum-depth-of-binary-tree\u002F\n\n## 나의 풀이\n\n- DFS 재귀 호출을 사용하여 좌, 우 자식 노드 중 더 깊은 방향을 리턴한다.\n\n\u003Cdetails\u003E\n\u003Csummary\u003E소스 코드\u003C\u002Fsummary\u003E\n\u003Cdiv markdown=\"1\"\u003E\n\n```python\nclass TreeNode:\n    def __init__(self, val=0, left=None, right=None):\n        self.val = val\n        self.left = left\n        self.right = right\n\n\nclass MySolution1:\n    def maxDepth(self, root: TreeNode) -\u003E int:\n        def dfs(node, depth):\n            if node is None:\n                return depth - 1\n            return max(dfs(node.left, depth + 1), dfs(node.right, depth + 1))\n        return dfs(root, 1)\n```\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdetails\u003E\n\n## 문제 풀이\n\n### 1. 반복 구조로 BFS 풀이\n\n- DFS 구조보다 BFS로 푸는 것이 조금 더 빠르다.\n\n\u003Cdetails\u003E\n\u003Csummary\u003E소스 코드\u003C\u002Fsummary\u003E\n\u003Cdiv markdown=\"1\"\u003E\n\n```python\nimport collections\n\n\nclass TreeNode:\n    def __init__(self, val=0, left=None, right=None):\n        self.val = val\n        self.left = left\n        self.right = right\n\n\nclass Solution1:\n    def maxDepth(self, root: TreeNode) -\u003E int:\n        if root is None:\n            return 0\n        queue = collections.deque([root])\n        depth = 0\n        \n        while queue:\n            depth += 1\n            # 큐 연산 추출 노드의 자식 노드 삽입\n            # len(queue)만큼 반복하므로 자식 노드가 추출될 일은 없음\n            for _ in range(len(queue)):\n                cur_root = queue.popleft()\n                if cur_root.left:\n                    queue.append(cur_root.left)\n                if cur_root.right:\n                    queue.append(cur_root.right)\n                    \n        # BFS 반복 횟수 == 깊이\n        return depth\n```\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdetails\u003E\n\n## 출처\n\n- 박상길, 『파이썬 알고리즘 인터뷰』, 책만(2020), p387-389.\n  - [도서 정보](https:\u002F\u002Fwww.onlybook.co.kr\u002Fentry\u002Falgorithm-interview)\n  - [GitHub](https:\u002F\u002Fgithub.com\u002Fonlybooks\u002Falgorithm-interview)\n";aa.dir="\u002Fposts\u002F2021\u002F06\u002F09";aa.path="\u002Fposts\u002F2021\u002F06\u002F09\u002Fleetcode-104";aa.extension=".md";aa.createdAt="2021-06-09T08:25:42.000Z";aa.updatedAt="2022-06-26T10:01:49.000Z";return {data:[{post:aa,prev:{slug:"leetcode-787",title:"LeetCode 787번 문제",createdAt:"2021-06-09T06:05:59.000Z"},next:{slug:"leetcode-543",title:"LeetCode 543번 문제",createdAt:"2021-06-15T10:03:46.000Z"}}],fetch:{},mutations:[["SET_POST",aa],["SET_HEADER_IMAGE_STATE",true],["SET_SCROLL_STATE",false]]}}("text","element","span","token","punctuation","\n","keyword"," ","operator",":",".","(","=",")",",","number","a","1","boolean","None","\n            ","true",-1,"icon","icon-link","li","def","function","builtin","return",2,"출처","h2","ul","div","class","class-name","\n    ","self","0","\n        ","if","root","nofollow","noopener","noreferrer","_blank","-","node","\n                "," depth ","left","right","comment",{},"문제-링크","문제 링크","나의-풀이","나의 풀이","문제-풀이","문제 풀이","1-반복-구조로-bfs-풀이","1. 반복 구조로 BFS 풀이","https:\u002F\u002Fleetcode.com\u002Fproblems\u002Fmaximum-depth-of-binary-tree\u002F","details","summary","소스 코드","nuxt-content-highlight","pre","language-python","line-numbers","code","TreeNode","__init__"," val"," left"," right","\n        self","val "," val\n        self","left "," left\n        self","right "," right\n\n\n","maxDepth"," root"," TreeNode","\u003E","int","dfs","is","+"," dfs"," queue"," cur_root","\n                    queue","append","cur_root")));