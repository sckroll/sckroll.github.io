window.__NUXT__=(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au,av,aw,ax,ay,az,aA,aB,aC,aD,aE,aF,aG,aH,aI,aJ,aK,aL,aM,aN,aO,aP,aQ,aR,aS,aT,aU,aV,aW,aX,aY,aZ,a_,a$,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,bA,bB,bC,bD,bE,bF,bG,bH,bI,bJ,bK,bL,bM,bN,bO,bP,bQ,bR,bS,bT,bU,bV,bW){return {staticAssetsBase:"\u002F_nuxt\u002Fstatic\u002F1660834228",layout:"default",error:aH,state:{post:{slug:"swea-1233",description:"SWEA 1233",title:"SWEA 1233번 문제: 사칙연산 유효성 검사",tags:"algorithm, swea, java, sw_expert_academy, tree",toc:[{id:aI,depth:aJ,text:aK},{id:$,depth:aJ,text:$},{id:aL,depth:aM,text:aN},{id:aO,depth:aM,text:aP}],body:{type:"root",children:[{type:b,tag:aQ,props:{id:aI},children:[{type:b,tag:X,props:{href:"#%EB%AC%B8%EC%A0%9C-%EB%A7%81%ED%81%AC",ariaHidden:aa,tabIndex:ab},children:[{type:b,tag:c,props:{className:[ac,ad]},children:[]}]},{type:a,value:aK}]},{type:a,value:m},{type:b,tag:"p",props:{},children:[{type:b,tag:X,props:{href:aR,rel:["nofollow","noopener","noreferrer"],target:"_blank"},children:[{type:a,value:aR}]}]},{type:a,value:m},{type:b,tag:aQ,props:{id:$},children:[{type:b,tag:X,props:{href:"#%ED%92%80%EC%9D%B4",ariaHidden:aa,tabIndex:ab},children:[{type:b,tag:c,props:{className:[ac,ad]},children:[]}]},{type:a,value:$}]},{type:a,value:m},{type:b,tag:aS,props:{id:aL},children:[{type:b,tag:X,props:{href:"#%EC%B2%AB-%EB%B2%88%EC%A7%B8-%EB%B0%A9%EB%B2%95",ariaHidden:aa,tabIndex:ab},children:[{type:b,tag:c,props:{className:[ac,ad]},children:[]}]},{type:a,value:aN}]},{type:a,value:m},{type:b,tag:az,props:{},children:[{type:a,value:m},{type:b,tag:E,props:{},children:[{type:a,value:"이 문제에서 사칙연산이 유효하지 않는 경우는 다음과 같다.\n"},{type:b,tag:"ol",props:{},children:[{type:a,value:m},{type:b,tag:E,props:{},children:[{type:a,value:"피연산자 노드가 자식 노드를 가지고 있는 경우"}]},{type:a,value:m},{type:b,tag:E,props:{},children:[{type:a,value:"연산자 노드가 리프 노드인 경우"}]},{type:a,value:m},{type:b,tag:E,props:{},children:[{type:a,value:"연산자 노드가 자식 노드를 가지고 있어도, 왼쪽 자식이 숫자이고, 오른쪽 자식이 연산자일 경우\n"},{type:b,tag:az,props:{},children:[{type:a,value:m},{type:b,tag:E,props:{},children:[{type:a,value:"왼쪽부터 노드가 추가되어 빈 자리가 없는 완전 이진 트리의 특성 때문이다. 만약 왼쪽 자식이 피연산자이고 오른쪽 자식이 연산자일 경우, 연산자는 자식 노드를 가져야 하는데, 이렇게 되면 완전 이진 트리가 아니게 되므로 모순이다."}]},{type:a,value:m}]},{type:a,value:m}]},{type:a,value:m}]},{type:a,value:m}]},{type:a,value:m},{type:b,tag:E,props:{},children:[{type:a,value:"사칙연산이 유효하지 않는 조건을 따로 분기하고, 해당되는 경우 "},{type:b,tag:F,props:{},children:[{type:a,value:"result"}]},{type:a,value:" 값을 "},{type:b,tag:F,props:{},children:[{type:a,value:u}]},{type:a,value:"으로 설정 후 이후에 읽어오는 모든 라인을 "},{type:b,tag:F,props:{},children:[{type:a,value:L}]},{type:a,value:"로 패스한다. 초기화를 진행한 후에 로직을 수행하는 것이 아니라, 초기화를 진행하면서 로직을 수행하기 때문이다."}]},{type:a,value:m}]},{type:a,value:m},{type:b,tag:aT,props:{},children:[{type:a,value:m},{type:b,tag:aU,props:{},children:[{type:a,value:aV}]},{type:a,value:m},{type:b,tag:ae,props:{markdown:C},children:[{type:a,value:m},{type:b,tag:ae,props:{className:[aW]},children:[{type:b,tag:aX,props:{className:[aY,aZ]},children:[{type:b,tag:F,props:{},children:[{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:p}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p]},children:[{type:b,tag:c,props:{className:[d,v]},children:[{type:a,value:w},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:N}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:p}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p]},children:[{type:b,tag:c,props:{className:[d,v]},children:[{type:a,value:w},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:af}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:p}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p]},children:[{type:b,tag:c,props:{className:[d,v]},children:[{type:a,value:w},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:ag}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:p}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p]},children:[{type:b,tag:c,props:{className:[d,v]},children:[{type:a,value:w},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:G},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:ah}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:p}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p]},children:[{type:b,tag:c,props:{className:[d,v]},children:[{type:a,value:w},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:G},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:ai}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:p}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p]},children:[{type:b,tag:c,props:{className:[d,v]},children:[{type:a,value:w},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:G},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:aj}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:p}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p]},children:[{type:b,tag:c,props:{className:[d,v]},children:[{type:a,value:w},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:G},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:O}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:a_},{type:b,tag:c,props:{className:[d,a$,A]},children:[{type:a,value:ba}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:ak}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:bb}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:"Solution"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:al},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:ak}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:bc}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:bd}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:be}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:bf}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:bg}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:bh}]},{type:a,value:bi},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:bj}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:af}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:H},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:N}]},{type:a,value:bk},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:q}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:I}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:I}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:ag}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:am}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:bl},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:H},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:O}]},{type:a,value:P},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:bm},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:B}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:an}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:q}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:bn}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:H},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:aj}]},{type:b,tag:c,props:{className:[d,ao]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ap}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:bo}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:Y}]}]},{type:a,value:bp},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:q}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:I}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:ai}]},{type:b,tag:c,props:{className:[d,ao]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ap}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:Y}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:ah}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:bq}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,z]},children:[{type:a,value:br}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:Q}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,z]},children:[{type:a,value:bs}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:Q}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,z]},children:[{type:a,value:bt}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:Q}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,z]},children:[{type:a,value:bu}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:bv},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:aq}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:B}]},{type:a,value:R},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:q}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:R},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:Z}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:an}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:bw},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:ar}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:B}]},{type:a,value:bx},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:q}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:by}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:bz}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:as},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:T}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:B}]},{type:a,value:at},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:q}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aA},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:aq}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:B}]},{type:a,value:U},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:q}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:U},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:Z}]},{type:a,value:aB},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:bA},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:ar}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:bB}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:D}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:bC},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:aC}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:u}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:bD},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:T}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:L}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:t}]},{type:a,value:bE},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:q}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:I}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:as},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:T}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:bF},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:V}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:z}]},{type:a,value:bG},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:q}]},{type:a,value:P},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:V}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:au}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:u}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aD},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:D}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:bH},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:bI}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:"\u002F\u002F 서브 트리의 루트 노드가 피연산자일 경우 0"}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:D}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:av}]},{type:a,value:_},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:W}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:aw},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:ax},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:q}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:u}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aE},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:L}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:t}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:z}]},{type:a,value:" left "},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:q}]},{type:a,value:P},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:V}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:au}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:u}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:bJ},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:"\u002F\u002F 자식 노드가 하나만 있는 경우 0"}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:D}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:av}]},{type:a,value:bH},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:bI}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:ax},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:q}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:u}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aE},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:L}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:t}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:z}]},{type:a,value:" right "},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:q}]},{type:a,value:P},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:V}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:au}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:u}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:bJ},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:"\u002F\u002F 왼쪽 자식 노드가 숫자이고, 오른쪽 자식 노드가 연산자이면 0"}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:D}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:av}]},{type:a,value:_},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:W}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:"left"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:aF}]},{type:a,value:" operand"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:W}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:"right"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:ax},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:q}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:u}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:t}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:t}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:bK}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:"\u002F\u002F 리프 노드가 연산자일 경우 0"}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:D}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:_},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:W}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:aw},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:ax},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:q}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:u}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aE},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:L}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:t}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:t}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:t}]},{type:a,value:"\n          \n            "},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:am}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:bL},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:bM}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,ay]},children:[{type:a,value:bN}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:J}]},{type:a,value:R},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:J}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,ay]},children:[{type:a,value:bO}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:J}]},{type:a,value:bP},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:H},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:t}]},{type:a,value:bQ},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:bR}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:al},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:t}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:t}]},{type:a,value:m}]}]}]},{type:a,value:m}]},{type:a,value:m}]},{type:a,value:m},{type:b,tag:aS,props:{id:aO},children:[{type:b,tag:X,props:{href:"#%EB%91%90-%EB%B2%88%EC%A7%B8-%EB%B0%A9%EB%B2%95",ariaHidden:aa,tabIndex:ab},children:[{type:b,tag:c,props:{className:[ac,ad]},children:[]}]},{type:a,value:aP}]},{type:a,value:m},{type:b,tag:az,props:{},children:[{type:a,value:m},{type:b,tag:E,props:{},children:[{type:a,value:"완전 이진 트리 조건에 의해 첫 번째 노드부터 "},{type:b,tag:F,props:{},children:[{type:a,value:"n\u002F2"}]},{type:a,value:" 노드까지는 연산자이고, 그 이후 노드는 피연산자라는 공식을 사용해서 풀 수도 있다."}]},{type:a,value:m},{type:b,tag:E,props:{},children:[{type:a,value:"단, "},{type:b,tag:F,props:{},children:[{type:a,value:bS}]},{type:a,value:"이 짝수이면 마지막 노드의 자식 노드가 홀수이므로 "},{type:b,tag:F,props:{},children:[{type:a,value:"n\u002F2 + 1"}]},{type:a,value:" 번째 노드까지 연산자로 취급하도록 한다."}]},{type:a,value:m}]},{type:a,value:m},{type:b,tag:aT,props:{},children:[{type:a,value:m},{type:b,tag:aU,props:{},children:[{type:a,value:aV}]},{type:a,value:m},{type:b,tag:ae,props:{markdown:C},children:[{type:a,value:m},{type:b,tag:ae,props:{className:[aW]},children:[{type:b,tag:aX,props:{className:[aY,aZ]},children:[{type:b,tag:F,props:{},children:[{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:p}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p]},children:[{type:b,tag:c,props:{className:[d,v]},children:[{type:a,value:w},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:N}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:p}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p]},children:[{type:b,tag:c,props:{className:[d,v]},children:[{type:a,value:w},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:af}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:p}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p]},children:[{type:b,tag:c,props:{className:[d,v]},children:[{type:a,value:w},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:ag}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:p}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p]},children:[{type:b,tag:c,props:{className:[d,v]},children:[{type:a,value:w},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:G},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:ah}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:p}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p]},children:[{type:b,tag:c,props:{className:[d,v]},children:[{type:a,value:w},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:G},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:ai}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:p}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p]},children:[{type:b,tag:c,props:{className:[d,v]},children:[{type:a,value:w},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:G},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:aj}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:p}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p]},children:[{type:b,tag:c,props:{className:[d,v]},children:[{type:a,value:w},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:G},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:O}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:a_},{type:b,tag:c,props:{className:[d,a$,A]},children:[{type:a,value:ba}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:ak}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:bb}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:"Solution2"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:al},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:ak}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:bc}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:bd}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:be}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:bf}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:bg}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:bh}]},{type:a,value:bi},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:bj}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:af}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:H},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:N}]},{type:a,value:bk},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:q}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:I}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:I}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:ag}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:am}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:bl},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:H},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:O}]},{type:a,value:P},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:bm},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:B}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:an}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:q}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:bn}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:H},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:aj}]},{type:b,tag:c,props:{className:[d,ao]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ap}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:bo}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:Y}]}]},{type:a,value:bp},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:q}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:I}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:ai}]},{type:b,tag:c,props:{className:[d,ao]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ap}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:Y}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:ah}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:bq}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,z]},children:[{type:a,value:br}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:Q}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,z]},children:[{type:a,value:bs}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:Q}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,z]},children:[{type:a,value:bt}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:Q}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,z]},children:[{type:a,value:bu}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:bv},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:aq}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:B}]},{type:a,value:R},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:q}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:R},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:Z}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:an}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:bw},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:ar}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:B}]},{type:a,value:bx},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:q}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:by}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:bz}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:as},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:T}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:B}]},{type:a,value:at},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:q}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aA},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:aq}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:B}]},{type:a,value:U},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:q}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:U},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:Z}]},{type:a,value:aB},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:bA},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:ar}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:bB}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:D}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:bC},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:aC}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:u}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:bD},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:T}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:L}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:t}]},{type:a,value:bE},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:q}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:I}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:as},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:T}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:bF},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:V}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:z}]},{type:a,value:bG},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:q}]},{type:a,value:P},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:V}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:au}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:u}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aD},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:"\u002F\u002F n이 짝수이면 마지막 노드의 자식 노드가 홀수이므로"}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:"\u002F\u002F n의 짝수 여부에 따라 연산자 개수에 +1 할지 정해야 함"}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:B}]},{type:a,value:" opCnt "},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:q}]},{type:a,value:aB},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:bT}]},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:bU}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:J}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:bS},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:"%"}]},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:bU}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:aC}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:u}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:"?"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:C}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:":"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:u}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aD},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:"\u002F\u002F 노드 번호가 n\u002F2 이하면 연산자, 그 이후면 피연산자"}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:D}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:_},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:W}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:aw},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:aF}]},{type:a,value:U},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:Y}]},{type:a,value:bV},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:at},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:q}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:u}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:bK}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:D}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:av}]},{type:a,value:_},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:W}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:aw},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:aF}]},{type:a,value:U},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:Z}]},{type:a,value:bV},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:at},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:q}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:u}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:t}]},{type:a,value:aA},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:am}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:bL},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:bM}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,ay]},children:[{type:a,value:bN}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:J}]},{type:a,value:R},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:J}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,ay]},children:[{type:a,value:bO}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:J}]},{type:a,value:bP},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:H},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:t}]},{type:a,value:bQ},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:bR}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:al},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:t}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:t}]},{type:a,value:m}]}]}]},{type:a,value:m}]},{type:a,value:m}]}]},text:"\n## 문제 링크\n\nhttps:\u002F\u002Fswexpertacademy.com\u002Fmain\u002Fcode\u002Fproblem\u002FproblemDetail.do?contestProbId=AV141176AIwCFAYD&\n\n## 풀이\n\n### 첫 번째 방법\n\n- 이 문제에서 사칙연산이 유효하지 않는 경우는 다음과 같다.\n   1. 피연산자 노드가 자식 노드를 가지고 있는 경우\n   2. 연산자 노드가 리프 노드인 경우\n   3. 연산자 노드가 자식 노드를 가지고 있어도, 왼쪽 자식이 숫자이고, 오른쪽 자식이 연산자일 경우\n      - 왼쪽부터 노드가 추가되어 빈 자리가 없는 완전 이진 트리의 특성 때문이다. 만약 왼쪽 자식이 피연산자이고 오른쪽 자식이 연산자일 경우, 연산자는 자식 노드를 가져야 하는데, 이렇게 되면 완전 이진 트리가 아니게 되므로 모순이다.\n- 사칙연산이 유효하지 않는 조건을 따로 분기하고, 해당되는 경우 `result` 값을 `0`으로 설정 후 이후에 읽어오는 모든 라인을 `continue`로 패스한다. 초기화를 진행한 후에 로직을 수행하는 것이 아니라, 초기화를 진행하면서 로직을 수행하기 때문이다.\n\n\u003Cdetails\u003E\n\u003Csummary\u003E소스 코드\u003C\u002Fsummary\u003E\n\u003Cdiv markdown=\"1\"\u003E\n\n```java\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\nimport java.util.HashSet;\nimport java.util.Set;\nimport java.util.StringTokenizer;\n\n\u002F**\n * SW Expert Academy 1233번 문제: 사칙연산 유효성 검사\n *\u002F\npublic class Solution {\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        StringTokenizer st;\n        \n        int T = 10;\n        Set\u003CCharacter\u003E operand = new HashSet\u003C\u003E(Arrays.asList('+', '-', '*', '\u002F'));\n      \n        for (int tc = 1; tc \u003C= T; tc++) {\n            int n = Integer.parseInt(br.readLine());\n            int result = 1;\n            \n            for (int i = 1; i \u003C= n; i++) {\n                \u002F\u002F 이미 계산이 불가능하다고 판단된 경우 루프가 끝날 때까지 라인 읽기만 수행\n                if (result == 0) {\n                    br.readLine();\n                    continue;\n                }\n                \n                st = new StringTokenizer(br.readLine());\n                st.nextToken();\n                char op = st.nextToken().charAt(0);\n                \n                if (st.hasMoreTokens()) {\n                    \u002F\u002F 서브 트리의 루트 노드가 피연산자일 경우 0\n                    if (!operand.contains(op)) {\n                        result = 0;\n                        continue;\n                    }\n                    char left = st.nextToken().charAt(0);\n                    \n                    \u002F\u002F 자식 노드가 하나만 있는 경우 0\n                    if (!st.hasMoreTokens()) {\n                        result = 0;\n                        continue;\n                    }\n                    char right = st.nextToken().charAt(0);\n                    \n                    \u002F\u002F 왼쪽 자식 노드가 숫자이고, 오른쪽 자식 노드가 연산자이면 0\n                    if (!operand.contains(left) && operand.contains(right)) {\n                        result = 0;\n                    }\n                } else {\n                    \u002F\u002F 리프 노드가 연산자일 경우 0\n                    if (operand.contains(op)) {\n                        result = 0;\n                        continue;\n                    }\n                }\n            }\n          \n            System.out.println(\"#\" + tc + \" \" + result);\n        }\n      \n        br.close();\n    }\n}\n```\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdetails\u003E\n\n### 두 번째 방법\n\n- 완전 이진 트리 조건에 의해 첫 번째 노드부터 `n\u002F2` 노드까지는 연산자이고, 그 이후 노드는 피연산자라는 공식을 사용해서 풀 수도 있다.\n- 단, `n`이 짝수이면 마지막 노드의 자식 노드가 홀수이므로 `n\u002F2 + 1` 번째 노드까지 연산자로 취급하도록 한다.\n\n\u003Cdetails\u003E\n\u003Csummary\u003E소스 코드\u003C\u002Fsummary\u003E\n\u003Cdiv markdown=\"1\"\u003E\n\n```java\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\nimport java.util.HashSet;\nimport java.util.Set;\nimport java.util.StringTokenizer;\n\n\u002F**\n * SW Expert Academy 1233번 문제: 사칙연산 유효성 검사\n *\u002F\npublic class Solution2 {\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        StringTokenizer st;\n        \n        int T = 10;\n        Set\u003CCharacter\u003E operand = new HashSet\u003C\u003E(Arrays.asList('+', '-', '*', '\u002F'));\n      \n        for (int tc = 1; tc \u003C= T; tc++) {\n            int n = Integer.parseInt(br.readLine());\n            int result = 1;\n            \n            for (int i = 1; i \u003C= n; i++) {\n                \u002F\u002F 이미 계산이 불가능하다고 판단된 경우 루프가 끝날 때까지 라인 읽기만 수행\n                if (result == 0) {\n                    br.readLine();\n                    continue;\n                }\n                \n                st = new StringTokenizer(br.readLine());\n                st.nextToken();\n                char op = st.nextToken().charAt(0);\n                \n                \u002F\u002F n이 짝수이면 마지막 노드의 자식 노드가 홀수이므로\n                \u002F\u002F n의 짝수 여부에 따라 연산자 개수에 +1 할지 정해야 함\n                int opCnt = n\u002F2 + (n%2 == 0 ? 1 : 0);\n                \n                \u002F\u002F 노드 번호가 n\u002F2 이하면 연산자, 그 이후면 피연산자\n                if (operand.contains(op) && i \u003E opCnt) result = 0;\n                else if (!operand.contains(op) && i \u003C= opCnt) result = 0;\n            }\n            \n            System.out.println(\"#\" + tc + \" \" + result);\n        }\n      \n        br.close();\n    }\n}\n```\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdetails\u003E\n",dir:"\u002Fposts\u002F2022\u002F02\u002F14",path:"\u002Fposts\u002F2022\u002F02\u002F14\u002Fswea-1233",extension:".md",createdAt:"2022-02-14T14:47:24.000Z",updatedAt:"2022-06-26T10:01:49.000Z"},isErrorPage:K,isDarkMode:K,isScrolled:K,isMobile:K,isTablet:K,hasHeaderImage:aG,isMobileMenuOpened:K,headerImage:"",perPage:10},serverRendered:aG,routePath:"\u002Fposts\u002Fswea-1233",config:{_app:{basePath:bT,assetsPath:"\u002F_nuxt\u002F",cdnURL:aH},content:{dbHash:"a24fa2a6"}},colorMode:{preference:bW,value:bW,unknown:aG,forced:K}}}("text","element","span","token","punctuation"," ","keyword",".",";","operator","(",")","\n","class-name","function","import","=","number","{","}","0","namespace","java","\n                ","\n                    ","char","comment","int","1","if","li","code","util","\n        ","new","+",false,"continue","io","BufferedReader","StringTokenizer"," st",","," tc ","\n            ","readLine"," i ","nextToken","contains","a","\u003E","\u003C=","operand","풀이","true",-1,"icon","icon-link","div","IOException","InputStreamReader","Arrays","HashSet","Set","public","\n    ","System","T","generics","\u003C","for","++","br"," result ","charAt","!","op","\n                        result ","string","ul","\n            \n            "," n","==","\n                \n                ","\n                        ","&&",true,null,"문제-링크",2,"문제 링크","첫-번째-방법",3,"첫 번째 방법","두-번째-방법","두 번째 방법","h2","https:\u002F\u002Fswexpertacademy.com\u002Fmain\u002Fcode\u002Fproblem\u002FproblemDetail.do?contestProbId=AV141176AIwCFAYD&","h3","details","summary","소스 코드","nuxt-content-highlight","pre","language-java","line-numbers","\n\n","doc-comment","\u002F**\n * SW Expert Academy 1233번 문제: 사칙연산 유효성 검사\n *\u002F","class","static","void","main","String","[","]"," args","throws"," br ","in","\n        \n        ","10","Character"," operand ","asList","'+'","'-'","'*'","'\u002F'","\n      \n        "," tc"," n ","Integer","parseInt"," i","\u002F\u002F 이미 계산이 불가능하다고 판단된 경우 루프가 끝날 때까지 라인 읽기만 수행","result ","\n                    br","\n                \n                st ","\n                st"," op ","st","hasMoreTokens","\n                    \n                    ","else","out","println","\"#\"","\" \""," result","\n      \n        br","close","n","\u002F","2"," opCnt","system"));