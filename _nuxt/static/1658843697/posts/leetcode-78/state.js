window.__NUXT__=(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au,av,aw,ax,ay,az,aA,aB,aC,aD,aE,aF,aG,aH,aI,aJ,aK,aL,aM,aN,aO,aP){return {staticAssetsBase:"\u002F_nuxt\u002Fstatic\u002F1658843697",layout:"default",error:T,state:{post:{slug:"leetcode-78",description:"Subsets",title:"LeetCode 78번 문제",tags:"algorithm, leetcode, python, dfs, backtracking",toc:[{id:U,depth:z,text:V},{id:W,depth:z,text:X},{id:Y,depth:z,text:Z},{id:_,depth:3,text:$},{id:A,depth:z,text:A}],body:{type:"root",children:[{type:b,tag:B,props:{id:U},children:[{type:b,tag:p,props:{href:"#%EB%AC%B8%EC%A0%9C-%EB%A7%81%ED%81%AC",ariaHidden:t,tabIndex:u},children:[{type:b,tag:c,props:{className:[v,w]},children:[]}]},{type:a,value:V}]},{type:a,value:f},{type:b,tag:"p",props:{},children:[{type:b,tag:p,props:{href:aa,rel:[M,N,O],target:P},children:[{type:a,value:aa}]}]},{type:a,value:f},{type:b,tag:B,props:{id:W},children:[{type:b,tag:p,props:{href:"#%EB%82%98%EC%9D%98-%ED%92%80%EC%9D%B4",ariaHidden:t,tabIndex:u},children:[{type:b,tag:c,props:{className:[v,w]},children:[]}]},{type:a,value:X}]},{type:a,value:f},{type:b,tag:C,props:{},children:[{type:a,value:f},{type:b,tag:r,props:{},children:[{type:a,value:"부분 집합은 모든 탐색의 경로가 정답이 된다."}]},{type:a,value:f},{type:b,tag:r,props:{},children:[{type:a,value:"별도의 종료 조건 없이 탐색이 끝나면 저절로 함수가 종료되게 설정하였다."}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:ab,props:{},children:[{type:a,value:f},{type:b,tag:ac,props:{},children:[{type:a,value:ad}]},{type:a,value:f},{type:b,tag:D,props:{markdown:E},children:[{type:a,value:f},{type:b,tag:D,props:{className:[ae]},children:[{type:b,tag:af,props:{className:[ag,ah]},children:[{type:b,tag:x,props:{},children:[{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ai}]},{type:a,value:aj},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ak}]},{type:a,value:al},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:am}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,an]},children:[{type:a,value:"MySolution1"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:ao},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:F}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:ap}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:aq},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:ar},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:H},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:I}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:as}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:at}]},{type:a,value:H},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:au},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:I}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:F}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:av}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:aw},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:ax},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:J}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:ay},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:az}]},{type:a,value:aA},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:aB},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:R},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aC}]},{type:a,value:aD},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aE}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:aF}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:aw},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:aG}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:"\n                new_set "},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:J}]},{type:a,value:ax},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:aH},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:aI},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:K}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,L]},children:[{type:a,value:E}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:" new_set "},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:K}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aJ},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:"\n\n        result "},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:J}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:"\n        dfs"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,L]},children:[{type:a,value:aK}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aL}]},{type:a,value:aM}]}]}]},{type:a,value:f}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:B,props:{id:Y},children:[{type:b,tag:p,props:{href:"#%EB%AC%B8%EC%A0%9C-%ED%92%80%EC%9D%B4",ariaHidden:t,tabIndex:u},children:[{type:b,tag:c,props:{className:[v,w]},children:[]}]},{type:a,value:Z}]},{type:a,value:f},{type:b,tag:"h3",props:{id:_},children:[{type:b,tag:p,props:{href:"#1-%ED%8A%B8%EB%A6%AC%EC%9D%98-%EB%AA%A8%EB%93%A0-dfs-%EA%B2%B0%EA%B3%BC",ariaHidden:t,tabIndex:u},children:[{type:b,tag:c,props:{className:[v,w]},children:[]}]},{type:a,value:$}]},{type:a,value:f},{type:b,tag:C,props:{},children:[{type:a,value:f},{type:b,tag:r,props:{},children:[{type:a,value:"풀이를 보면서 깨달은 사실인데, 부분 집합을 구하는 과정에서 별도의 리스트를 생성하고 변형하는 과정 없이 "},{type:b,tag:x,props:{},children:[{type:a,value:y}]},{type:a,value:" 리스트의 값을 순회하면서 기존 "},{type:b,tag:x,props:{},children:[{type:a,value:aB}]},{type:a,value:"에 요소를 추가만 하여 재귀를 호출해도 큰 문제는 되지 않는다. 따라서 굳이 얕은 복사("},{type:b,tag:x,props:{},children:[{type:a,value:"[:]"}]},{type:a,value:")를 수행하지 않아도 된다."}]},{type:a,value:f},{type:b,tag:r,props:{},children:[{type:a,value:"그 외에는 내가 푼 방법과 큰 차이가 없다."}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:ab,props:{},children:[{type:a,value:f},{type:b,tag:ac,props:{},children:[{type:a,value:ad}]},{type:a,value:f},{type:b,tag:D,props:{markdown:E},children:[{type:a,value:f},{type:b,tag:D,props:{className:[ae]},children:[{type:b,tag:af,props:{className:[ag,ah]},children:[{type:b,tag:x,props:{},children:[{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ai}]},{type:a,value:aj},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ak}]},{type:a,value:al},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:am}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,an]},children:[{type:a,value:"Solution1"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:ao},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:F}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:ap}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:aq},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:ar},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:H},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:I}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:as}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:at}]},{type:a,value:H},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:au},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:I}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:"\n        result "},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:J}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:"\n\n        "},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:F}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:av}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:aN},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:" path"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:R},{type:b,tag:c,props:{className:[d,aO]},children:[{type:a,value:"# 매번 결과 추가"}]},{type:a,value:ay},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:az}]},{type:a,value:aA},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:"path"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:"\n\n            "},{type:b,tag:c,props:{className:[d,aO]},children:[{type:a,value:"# 경로를 만들면서 DFS"}]},{type:a,value:R},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aC}]},{type:a,value:aD},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aE}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:aF}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:aN},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:aG}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:aH},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:aI},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:K}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,L]},children:[{type:a,value:E}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:" path "},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:K}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aJ},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:"\n\n        dfs"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,L]},children:[{type:a,value:aK}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aL}]},{type:a,value:aM}]}]}]},{type:a,value:f}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:B,props:{id:A},children:[{type:b,tag:p,props:{href:"#%EC%B6%9C%EC%B2%98",ariaHidden:t,tabIndex:u},children:[{type:b,tag:c,props:{className:[v,w]},children:[]}]},{type:a,value:A}]},{type:a,value:f},{type:b,tag:C,props:{},children:[{type:a,value:f},{type:b,tag:r,props:{},children:[{type:a,value:"박상길, 『파이썬 알고리즘 인터뷰』, 책만(2020), p355-356.\n"},{type:b,tag:C,props:{},children:[{type:a,value:f},{type:b,tag:r,props:{},children:[{type:b,tag:p,props:{href:"https:\u002F\u002Fwww.onlybook.co.kr\u002Fentry\u002Falgorithm-interview",rel:[M,N,O],target:P},children:[{type:a,value:"도서 정보"}]}]},{type:a,value:f},{type:b,tag:r,props:{},children:[{type:b,tag:p,props:{href:"https:\u002F\u002Fgithub.com\u002Fonlybooks\u002Falgorithm-interview",rel:[M,N,O],target:P},children:[{type:a,value:"GitHub"}]}]},{type:a,value:f}]},{type:a,value:f}]},{type:a,value:f}]}]},text:"\n## 문제 링크\n\nhttps:\u002F\u002Fleetcode.com\u002Fproblems\u002Fsubsets\u002F\n\n## 나의 풀이\n\n- 부분 집합은 모든 탐색의 경로가 정답이 된다.\n- 별도의 종료 조건 없이 탐색이 끝나면 저절로 함수가 종료되게 설정하였다.\n\n\u003Cdetails\u003E\n\u003Csummary\u003E소스 코드\u003C\u002Fsummary\u003E\n\u003Cdiv markdown=\"1\"\u003E\n\n```python\nfrom typing import List\n\n\nclass MySolution1:\n    def subsets(self, nums: List[int]) -\u003E List[List[int]]:\n        def dfs(idx, curr_set=[]):\n            result.append(curr_set)\n            for i in range(idx, len(nums)):\n                new_set = curr_set[:]\n                dfs(i + 1, new_set + [nums[i]])\n\n        result = []\n        dfs(0)\n        return result\n```\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdetails\u003E\n\n## 문제 풀이\n\n### 1. 트리의 모든 DFS 결과\n\n- 풀이를 보면서 깨달은 사실인데, 부분 집합을 구하는 과정에서 별도의 리스트를 생성하고 변형하는 과정 없이 `nums` 리스트의 값을 순회하면서 기존 `curr_set`에 요소를 추가만 하여 재귀를 호출해도 큰 문제는 되지 않는다. 따라서 굳이 얕은 복사(`[:]`)를 수행하지 않아도 된다.\n- 그 외에는 내가 푼 방법과 큰 차이가 없다.\n\n\u003Cdetails\u003E\n\u003Csummary\u003E소스 코드\u003C\u002Fsummary\u003E\n\u003Cdiv markdown=\"1\"\u003E\n\n```python\nfrom typing import List\n\n\nclass Solution1:\n    def subsets(self, nums: List[int]) -\u003E List[List[int]]:\n        result = []\n\n        def dfs(index, path):\n            # 매번 결과 추가\n            result.append(path)\n\n            # 경로를 만들면서 DFS\n            for i in range(index, len(nums)):\n                dfs(i + 1, path + [nums[i]])\n\n        dfs(0, [])\n        return result\n```\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdetails\u003E\n\n## 출처\n\n- 박상길, 『파이썬 알고리즘 인터뷰』, 책만(2020), p355-356.\n  - [도서 정보](https:\u002F\u002Fwww.onlybook.co.kr\u002Fentry\u002Falgorithm-interview)\n  - [GitHub](https:\u002F\u002Fgithub.com\u002Fonlybooks\u002Falgorithm-interview)\n",dir:"\u002Fposts\u002F2021\u002F05\u002F30",path:"\u002Fposts\u002F2021\u002F05\u002F30\u002Fleetcode-78",extension:".md",createdAt:"2021-05-30T09:49:14.000Z",updatedAt:"2022-06-26T10:01:49.000Z"},isErrorPage:s,isDarkMode:s,isScrolled:s,isMobile:s,isTablet:s,hasHeaderImage:S,isMobileMenuOpened:s,headerImage:"",perPage:10},serverRendered:S,routePath:"\u002Fposts\u002Fleetcode-78",config:{_app:{basePath:"\u002F",assetsPath:"\u002F_nuxt\u002F",cdnURL:T},content:{dbHash:"b4dd6950"}},colorMode:{preference:aP,value:aP,unknown:S,forced:s}}}("text","element","span","token","punctuation","\n"," ","keyword","[","]","(",")","operator",":",",","a","builtin","li",false,"true",-1,"icon","icon-link","code","nums",2,"출처","h2","ul","div","1","def","function"," List","int","=","+","number","nofollow","noopener","noreferrer","_blank","\n        ","\n            ",true,null,"문제-링크","문제 링크","나의-풀이","나의 풀이","문제-풀이","문제 풀이","1-트리의-모든-dfs-결과","1. 트리의 모든 DFS 결과","https:\u002F\u002Fleetcode.com\u002Fproblems\u002Fsubsets\u002F","details","summary","소스 코드","nuxt-content-highlight","pre","language-python","line-numbers","from"," typing ","import"," List\n\n\n","class","class-name","\n    ","subsets","self"," nums","-","\u003E","List","dfs","idx"," curr_set","\n            result",".","append","curr_set","for"," i ","in","range","len","\n                dfs","i ","i","0","return"," result\n","index","comment","system"));