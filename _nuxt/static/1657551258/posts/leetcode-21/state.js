window.__NUXT__=(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au,av,aw,ax,ay,az,aA,aB,aC,aD,aE,aF,aG,aH,aI,aJ,aK,aL,aM,aN,aO,aP,aQ,aR,aS,aT,aU,aV,aW,aX,aY,aZ,a_,a$,ba,bb,bc,bd,be){return {staticAssetsBase:"\u002F_nuxt\u002Fstatic\u002F1657551258",layout:"default",error:aq,state:{post:{slug:"leetcode-21",description:"Merge Two Sorted Lists",title:"LeetCode 21번 문제",tags:"algorithm, leetcode, python, linked_list",toc:[{id:ar,depth:N,text:as},{id:at,depth:N,text:au},{id:av,depth:N,text:aw},{id:ax,depth:ay,text:az},{id:aA,depth:N,text:aB},{id:aC,depth:ay,text:aD},{id:R,depth:N,text:R}],body:{type:"root",children:[{type:b,tag:O,props:{id:ar},children:[{type:b,tag:x,props:{href:"#%EB%AC%B8%EC%A0%9C-%EB%A7%81%ED%81%AC",ariaHidden:A,tabIndex:B},children:[{type:b,tag:c,props:{className:[C,D]},children:[]}]},{type:a,value:as}]},{type:a,value:j},{type:b,tag:"p",props:{},children:[{type:b,tag:x,props:{href:aE,rel:[af,ag,ah],target:ai},children:[{type:a,value:aE}]}]},{type:a,value:j},{type:b,tag:O,props:{id:at},children:[{type:b,tag:x,props:{href:"#%EB%82%98%EC%9D%98-%ED%92%80%EC%9D%B4",ariaHidden:A,tabIndex:B},children:[{type:b,tag:c,props:{className:[C,D]},children:[]}]},{type:a,value:au}]},{type:a,value:j},{type:b,tag:aF,props:{},children:[{type:a,value:j},{type:b,tag:aG,props:{},children:[{type:a,value:aH}]},{type:a,value:j},{type:b,tag:I,props:{markdown:aI},children:[{type:a,value:j},{type:b,tag:I,props:{className:[S]},children:[{type:b,tag:T,props:{className:[U,V]},children:[{type:b,tag:s,props:{},children:[{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:W}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,X]},children:[{type:a,value:aJ}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:Y},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:Z}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,_]},children:[{type:a,value:aK}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:$},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:a,value:aL},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,aM]},children:[{type:a,value:aN}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,aa]},children:[{type:a,value:ab}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:aO},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:J},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:l}]},{type:a,value:aP},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:n}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:l}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:n}]},{type:a,value:aQ},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:W}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,X]},children:[{type:a,value:aR}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:Y},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:Z}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,_]},children:[{type:a,value:"my_solution"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:$},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aS}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:K}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:w},{type:b,tag:c,props:{className:[d,E]},children:[{type:a,value:"# 빈 연결 리스트의 경우"}]},{type:a,value:w},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:r}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:y}]},{type:a,value:aj},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:F}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:y}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:G},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:P}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,aa]},children:[{type:a,value:ab}]},{type:a,value:w},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:r}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:y}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:G},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:P}]},{type:a,value:" l2\n        "},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:r}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:y}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:G},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:P}]},{type:a,value:" l1\n\n        "},{type:b,tag:c,props:{className:[d,E]},children:[{type:a,value:"# 연결 리스트의 머리와 현재 위치를 초기화"}]},{type:a,value:"\n        merged_node "},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:l}]},{type:a,value:ak},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:l}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,aa]},children:[{type:a,value:ab}]},{type:a,value:al},{type:b,tag:c,props:{className:[d,E]},children:[{type:a,value:"# 두 리스트 병합 수행"}]},{type:a,value:w},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:am}]},{type:a,value:aj},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:F}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:G},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:r}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:J},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:"\u003E="}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:z},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:ac},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:r}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:y}]},{type:a,value:L},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:aT},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:l}]},{type:a,value:ak},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:l}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:an},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:z},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:ac},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:ad}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:aU},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:n}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:l}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:an},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:z},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:aV},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:l}]},{type:a,value:L},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:n}]},{type:a,value:aW},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:l}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:n}]},{type:a,value:G},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:ad}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:ac},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:r}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:y}]},{type:a,value:L},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:aT},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:l}]},{type:a,value:ak},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:l}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:z},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:ac},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:ad}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:aU},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:n}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:l}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:z},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:aV},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:l}]},{type:a,value:L},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:n}]},{type:a,value:aX},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:l}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:n}]},{type:a,value:al},{type:b,tag:c,props:{className:[d,E]},children:[{type:a,value:"# 연결 리스트에 요소가 남았다면 남은 요소를 모조리 연결"}]},{type:a,value:w},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:r}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:y}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:G},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:am}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:aY},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:n}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:l}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:an},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:z},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:aZ},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:l}]},{type:a,value:L},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:n}]},{type:a,value:aW},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:l}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:n}]},{type:a,value:w},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:ad}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:G},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:am}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:aY},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:n}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:l}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:z},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:aZ},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:l}]},{type:a,value:L},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:n}]},{type:a,value:aX},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:l}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:n}]},{type:a,value:al},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:P}]},{type:a,value:" merged_node\n"}]}]}]},{type:a,value:j}]},{type:a,value:j}]},{type:a,value:j},{type:b,tag:O,props:{id:av},children:[{type:b,tag:x,props:{href:"#%EB%AC%B8%EC%A0%9C-%ED%92%80%EC%9D%B4",ariaHidden:A,tabIndex:B},children:[{type:b,tag:c,props:{className:[C,D]},children:[]}]},{type:a,value:aw}]},{type:a,value:j},{type:b,tag:a_,props:{id:ax},children:[{type:b,tag:x,props:{href:"#%EC%9E%AC%EA%B7%80-%EA%B5%AC%EC%A1%B0%EB%A1%9C-%EC%97%B0%EA%B2%B0",ariaHidden:A,tabIndex:B},children:[{type:b,tag:c,props:{className:[C,D]},children:[]}]},{type:a,value:az}]},{type:a,value:j},{type:b,tag:aF,props:{},children:[{type:a,value:j},{type:b,tag:aG,props:{},children:[{type:a,value:aH}]},{type:a,value:j},{type:b,tag:I,props:{markdown:aI},children:[{type:a,value:j},{type:b,tag:I,props:{className:[S]},children:[{type:b,tag:T,props:{className:[U,V]},children:[{type:b,tag:s,props:{},children:[{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:W}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,X]},children:[{type:a,value:aJ}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:Y},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:Z}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,_]},children:[{type:a,value:aK}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:$},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:a,value:aL},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,aM]},children:[{type:a,value:aN}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,aa]},children:[{type:a,value:ab}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:aO},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:J},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:l}]},{type:a,value:aP},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:n}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:l}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:n}]},{type:a,value:aQ},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:W}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,X]},children:[{type:a,value:aR}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:Y},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:Z}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,_]},children:[{type:a,value:a$}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:$},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aS}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:K}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:w},{type:b,tag:c,props:{className:[d,E]},children:[{type:a,value:"# l1과 l2 값을 비교, 작은 값을 왼쪽(l1)으로 스왑"}]},{type:a,value:w},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:r}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:y}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:Q}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:ba},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:F}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:J},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:K}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:z},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:bb},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:a,value:bc},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:l}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:a,value:" l1\n            \n        "},{type:b,tag:c,props:{className:[d,E]},children:[{type:a,value:"# l1의 next를 재귀 호출"}]},{type:a,value:w},{type:b,tag:c,props:{className:[d,E]},children:[{type:a,value:"# 최종적으로 모두 백트래킹으로 엮이면서 하나의 연결 리스트로 병합"}]},{type:a,value:w},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:r}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:bb},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:n}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:l}]},{type:a,value:" self"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:a$},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:w},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:P}]},{type:a,value:" l1\n"}]}]}]},{type:a,value:j}]},{type:a,value:j}]},{type:a,value:j},{type:b,tag:O,props:{id:aA},children:[{type:b,tag:x,props:{href:"#%EB%B0%B0%EC%9A%B4-%EC%A0%90",ariaHidden:A,tabIndex:B},children:[{type:b,tag:c,props:{className:[C,D]},children:[]}]},{type:a,value:aB}]},{type:a,value:j},{type:b,tag:a_,props:{id:aC},children:[{type:b,tag:x,props:{href:"#%EC%97%B0%EC%82%B0%EC%9E%90-%EC%9A%B0%EC%84%A0%EC%88%9C%EC%9C%84",ariaHidden:A,tabIndex:B},children:[{type:b,tag:c,props:{className:[C,D]},children:[]}]},{type:a,value:aD}]},{type:a,value:j},{type:b,tag:ao,props:{},children:[{type:a,value:j},{type:b,tag:ae,props:{},children:[{type:a,value:"풀이 1번에 사용된 다음 "},{type:b,tag:s,props:{},children:[{type:a,value:r}]},{type:a,value:" 구문은 괄호를 모두 생략할 수 있다.\n"},{type:b,tag:I,props:{className:[S]},children:[{type:b,tag:T,props:{className:[U,V]},children:[{type:b,tag:s,props:{},children:[{type:a,value:bd},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:r}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:y}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:Q}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:ba},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:F}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:J},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:K}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:z},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:j}]}]}]},{type:a,value:j},{type:b,tag:I,props:{className:[S]},children:[{type:b,tag:T,props:{className:[U,V]},children:[{type:b,tag:s,props:{},children:[{type:a,value:bd},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:r}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:y}]},{type:a,value:aj},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:Q}]},{type:a,value:bc},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:F}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:J},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:K}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:z},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:j}]}]}]},{type:a,value:"\n위의 "},{type:b,tag:s,props:{},children:[{type:a,value:r}]},{type:a,value:" 구문에서 가장 우선순위가 높은 연산자는 "},{type:b,tag:s,props:{},children:[{type:a,value:K}]},{type:a,value:"이며, 그 다음은 "},{type:b,tag:s,props:{},children:[{type:a,value:"not l1"}]},{type:a,value:"이다. 그리고 "},{type:b,tag:s,props:{},children:[{type:a,value:F}]},{type:a,value:", "},{type:b,tag:s,props:{},children:[{type:a,value:Q}]},{type:a,value:" 순이다."},{type:b,tag:"br",props:{},children:[]},{type:a,value:"\n하지만 "},{type:b,tag:s,props:{},children:[{type:a,value:F}]},{type:a,value:"가 "},{type:b,tag:s,props:{},children:[{type:a,value:Q}]},{type:a,value:"보다 먼저 실행되는 점을 포함하여 연산자의 우선순위를 모르고 있다면 괄호를 사용하는 편이 더 좋아 보인다. 괄호는 파이썬의 모든 연산자 중에서 가장 우선순위가 높기 때문이다. 실제로 본인도 헷갈리는 부분이고, 가독성을 위해서라도 괄호를 쓰는 편이 더 좋다고 생각한다."}]},{type:a,value:j}]},{type:a,value:j},{type:b,tag:O,props:{id:R},children:[{type:b,tag:x,props:{href:"#%EC%B6%9C%EC%B2%98",ariaHidden:A,tabIndex:B},children:[{type:b,tag:c,props:{className:[C,D]},children:[]}]},{type:a,value:R}]},{type:a,value:j},{type:b,tag:ao,props:{},children:[{type:a,value:j},{type:b,tag:ae,props:{},children:[{type:a,value:"박상길, 『파이썬 알고리즘 인터뷰』, 책만(2020), p213-218.\n"},{type:b,tag:ao,props:{},children:[{type:a,value:j},{type:b,tag:ae,props:{},children:[{type:b,tag:x,props:{href:"https:\u002F\u002Fwww.onlybook.co.kr\u002Fentry\u002Falgorithm-interview",rel:[af,ag,ah],target:ai},children:[{type:a,value:"도서 정보"}]}]},{type:a,value:j},{type:b,tag:ae,props:{},children:[{type:b,tag:x,props:{href:"https:\u002F\u002Fgithub.com\u002Fonlybooks\u002Falgorithm-interview",rel:[af,ag,ah],target:ai},children:[{type:a,value:"GitHub"}]}]},{type:a,value:j}]},{type:a,value:j}]},{type:a,value:j}]}]},text:"\n## 문제 링크\n\nhttps:\u002F\u002Fleetcode.com\u002Fproblems\u002Fmerge-two-sorted-lists\u002F\n\n## 나의 풀이\n\n\u003Cdetails\u003E\n\u003Csummary\u003E소스 코드\u003C\u002Fsummary\u003E\n\u003Cdiv markdown=\"1\"\u003E\n\n```python\nclass ListNode:\n    def __init__(self, val=0, next=None):\n        self.val = val\n        self.next = next\n\n\nclass Solution:\n    def my_solution(self, l1: ListNode, l2: ListNode) -\u003E ListNode:\n        # 빈 연결 리스트의 경우\n        if not l1 and not l2:\n            return None\n        if not l1:\n            return l2\n        if not l2:\n            return l1\n\n        # 연결 리스트의 머리와 현재 위치를 초기화\n        merged_node = curr_node = None\n\n        # 두 리스트 병합 수행\n        while l1 and l2:\n            if l1.val \u003E= l2.val:\n                if not curr_node:\n                    merged_node = curr_node = ListNode(l2.val)\n                else:\n                    curr_node.next = ListNode(l2.val)\n                    curr_node = curr_node.next\n                l2 = l2.next\n            else:\n                if not curr_node:\n                    merged_node = curr_node = ListNode(l1.val)\n                else:\n                    curr_node.next = ListNode(l1.val)\n                    curr_node = curr_node.next\n                l1 = l1.next\n\n        # 연결 리스트에 요소가 남았다면 남은 요소를 모조리 연결\n        if not l1:\n            while l2:\n                curr_node.next = ListNode(l2.val)\n                curr_node = curr_node.next\n                l2 = l2.next\n        else:\n            while l1:\n                curr_node.next = ListNode(l1.val)\n                curr_node = curr_node.next\n                l1 = l1.next\n\n        return merged_node\n```\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdetails\u003E\n\n## 문제 풀이\n\n### 재귀 구조로 연결\n\n\u003Cdetails\u003E\n\u003Csummary\u003E소스 코드\u003C\u002Fsummary\u003E\n\u003Cdiv markdown=\"1\"\u003E\n\n```python\nclass ListNode:\n    def __init__(self, val=0, next=None):\n        self.val = val\n        self.next = next\n\n\nclass Solution:\n    def solution1(self, l1: ListNode, l2: ListNode) -\u003E ListNode:\n        # l1과 l2 값을 비교, 작은 값을 왼쪽(l1)으로 스왑\n        if (not l1) or (l2 and (l1.val \u003E l2.val)):\n            l1, l2 = l2, l1\n            \n        # l1의 next를 재귀 호출\n        # 최종적으로 모두 백트래킹으로 엮이면서 하나의 연결 리스트로 병합\n        if l1:\n            l1.next = self.solution1(l1.next, l2)\n        return l1\n```\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdetails\u003E\n\n## 배운 점\n\n### 연산자 우선순위\n\n- 풀이 1번에 사용된 다음 `if` 구문은 괄호를 모두 생략할 수 있다.\n  ```python\n    if (not l1) or (l2 and (l1.val \u003E l2.val)):\n  ```\n  ```python\n    if not l1 or l2 and l1.val \u003E l2.val:\n  ```\n  위의 `if` 구문에서 가장 우선순위가 높은 연산자는 `\u003E`이며, 그 다음은 `not l1`이다. 그리고 `and`, `or` 순이다.  \n  하지만 `and`가 `or`보다 먼저 실행되는 점을 포함하여 연산자의 우선순위를 모르고 있다면 괄호를 사용하는 편이 더 좋아 보인다. 괄호는 파이썬의 모든 연산자 중에서 가장 우선순위가 높기 때문이다. 실제로 본인도 헷갈리는 부분이고, 가독성을 위해서라도 괄호를 쓰는 편이 더 좋다고 생각한다.\n\n## 출처\n\n- 박상길, 『파이썬 알고리즘 인터뷰』, 책만(2020), p213-218.\n  - [도서 정보](https:\u002F\u002Fwww.onlybook.co.kr\u002Fentry\u002Falgorithm-interview)\n  - [GitHub](https:\u002F\u002Fgithub.com\u002Fonlybooks\u002Falgorithm-interview)\n",dir:"\u002Fposts\u002F2021\u002F05\u002F05",path:"\u002Fposts\u002F2021\u002F05\u002F05\u002Fleetcode-21",extension:".md",createdAt:"2021-05-04T18:59:03.000Z",updatedAt:"2022-06-26T10:01:49.000Z"},isErrorPage:H,isDarkMode:H,isScrolled:H,isMobile:H,isTablet:H,hasHeaderImage:ap,isMobileMenuOpened:H,headerImage:"",perPage:10},serverRendered:ap,routePath:"\u002Fposts\u002Fleetcode-21",config:{_app:{basePath:"\u002F",assetsPath:"\u002F_nuxt\u002F",cdnURL:aq},content:{dbHash:"15acd77e"}},colorMode:{preference:be,value:be,unknown:ap,forced:H}}}("text","element","span","token","punctuation","keyword"," ","operator",".","\n",":","=","builtin","next","(",")"," l2","if","code"," l1"," ListNode",",","\n        ","a","not","val","true",-1,"icon","icon-link","comment","and","\n            ",false,"div","val ","\u003E"," curr_node","l1",2,"h2","return","or","출처","nuxt-content-highlight","pre","language-python","line-numbers","class","class-name","\n    ","def","function","self","boolean","None","\n                ","else","li","nofollow","noopener","noreferrer","_blank"," l1 "," curr_node ","\n\n        ","while","l2","ul",true,null,"문제-링크","문제 링크","나의-풀이","나의 풀이","문제-풀이","문제 풀이","재귀-구조로-연결",3,"재귀 구조로 연결","배운-점","배운 점","연산자-우선순위","연산자 우선순위","https:\u002F\u002Fleetcode.com\u002Fproblems\u002Fmerge-two-sorted-lists\u002F","details","summary","소스 코드","1","ListNode","__init__"," val","number","0","\n        self"," val\n        self","\n\n\n","Solution","-","\n                    merged_node ","\n                    curr_node","\n                    curr_node ","\n                l2 ","\n                l1 ","\n                curr_node","\n                curr_node ","h3","solution1","l2 ","\n            l1"," l2 ","  ","system"));