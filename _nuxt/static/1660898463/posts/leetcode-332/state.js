window.__NUXT__=(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au,av,aw,ax,ay,az,aA,aB,aC,aD,aE,aF,aG,aH,aI,aJ,aK,aL,aM,aN,aO,aP,aQ,aR,aS,aT,aU,aV,aW,aX,aY,aZ,a_,a$,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs){return {staticAssetsBase:"\u002F_nuxt\u002Fstatic\u002F1660898463",layout:"default",error:aW,state:{post:{slug:"leetcode-332",description:"Reconstruct Itinerary",title:"LeetCode 332번 문제",tags:"algorithm, leetcode, python, dfs, graph, stack",toc:[{id:aX,depth:W,text:aY},{id:aZ,depth:W,text:a_},{id:a$,depth:W,text:ba},{id:bb,depth:aw,text:bc},{id:bd,depth:aw,text:be},{id:bf,depth:aw,text:bg},{id:X,depth:W,text:X}],body:{type:"root",children:[{type:b,tag:Y,props:{id:aX},children:[{type:b,tag:p,props:{href:"#%EB%AC%B8%EC%A0%9C-%EB%A7%81%ED%81%AC",ariaHidden:G,tabIndex:H},children:[{type:b,tag:c,props:{className:[I,J]},children:[]}]},{type:a,value:aY}]},{type:a,value:f},{type:b,tag:"p",props:{},children:[{type:b,tag:p,props:{href:bh,rel:[ax,ay,az],target:aA},children:[{type:a,value:bh}]}]},{type:a,value:f},{type:b,tag:Y,props:{id:aZ},children:[{type:b,tag:p,props:{href:"#%EB%82%98%EC%9D%98-%ED%92%80%EC%9D%B4-%EC%8B%9C%EA%B0%84-%EC%B4%88%EA%B3%BC",ariaHidden:G,tabIndex:H},children:[{type:b,tag:c,props:{className:[I,J]},children:[]}]},{type:a,value:a_}]},{type:a,value:f},{type:b,tag:O,props:{},children:[{type:a,value:f},{type:b,tag:y,props:{},children:[{type:a,value:"인접 리스트("},{type:b,tag:t,props:{},children:[{type:a,value:"itinerary"}]},{type:a,value:")를 딕셔너리로 만들고 모든 경로("},{type:b,tag:t,props:{},children:[{type:a,value:bi}]},{type:a,value:")를 세트에 저장한 후 해당하는 경로를 하나씩 빼면서 DFS를 구현하려 했으나 출발 항공과 도착 항공이 중복되는 경우가 있었다."}]},{type:a,value:f},{type:b,tag:y,props:{},children:[{type:a,value:"그래서 세트가 아닌 그냥 리스트로 구현했지만 시간 초과로 인한 오답 처리가 되었다.\n"},{type:b,tag:O,props:{},children:[{type:a,value:f},{type:b,tag:y,props:{},children:[{type:a,value:"아마 DFS 도중 현재 경로가 "},{type:b,tag:t,props:{},children:[{type:a,value:bi}]},{type:a,value:"(DFS에서는 "},{type:b,tag:t,props:{},children:[{type:a,value:bj}]},{type:a,value:")에 존재하는지 확인하는 과정에서 시간 복잡도가 늘어난 것으로 보인다."}]},{type:a,value:f}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:y,props:{},children:[{type:a,value:"참고로 "},{type:b,tag:t,props:{},children:[{type:a,value:aB}]},{type:a,value:"를 "},{type:b,tag:t,props:{},children:[{type:a,value:bk}]},{type:a,value:" 함수로 감싸서 리턴한 이유는 "},{type:b,tag:t,props:{},children:[{type:a,value:aB}]},{type:a,value:" 리스트에는 DFS를 호출하면서 얻은 모든 경로가 저장되는데, "},{type:b,tag:t,props:{},children:[{type:a,value:bk}]},{type:a,value:"을 호출함으로써 사전 순서가 가장 빠른 경로를 리턴할 수 있기 때문이다."}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:Z,props:{},children:[{type:a,value:f},{type:b,tag:_,props:{},children:[{type:a,value:$}]},{type:a,value:f},{type:b,tag:B,props:{markdown:z},children:[{type:a,value:f},{type:b,tag:B,props:{className:[aa]},children:[{type:b,tag:ab,props:{className:[ac,ad]},children:[{type:b,tag:t,props:{},children:[{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:ae}]},{type:a,value:af},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:C}]},{type:a,value:ag},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:C}]},{type:a,value:ah},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:ai}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,aj]},children:[{type:a,value:"MySolution1"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:ak},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:K}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,L]},children:[{type:a,value:al}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:am},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:an},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:D},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:ao},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:E}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:A}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:ap}]},{type:a,value:D},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:E}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:"\n        result "},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:x}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:"\n        all_routes "},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:x}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:"\n        itinerary "},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:x}]},{type:a,value:aq},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:ar},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:as}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:Q}]},{type:a,value:" i"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:aC},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:R},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:P}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:"enumerate"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:at},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:"\n            itinerary"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:aC},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:aD},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:"\n            all_routes"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:aC},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:R},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:K}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,L]},children:[{type:a,value:aE}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:" path"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:aF},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:w},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:bl}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:"len"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:bj},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:"=="}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,F]},children:[{type:a,value:aG}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:"\n                result"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:"path"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:bm},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:T}]},{type:a,value:bn},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:Q}]},{type:a,value:" arrival "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:P}]},{type:a,value:" itinerary"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:bm},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:bl}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:R},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:P}]},{type:a,value:aF},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:bo},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:"remove"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:R},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:"\n                    dfs"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:aD},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:" path "},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:"+"}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:aD},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:aF},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:bo},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:R},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aH},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,U]},children:[{type:a,value:V}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,U]},children:[{type:a,value:V}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:" all_routes"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:T}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:"min"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:aB},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:f}]}]}]},{type:a,value:f}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:Y,props:{id:a$},children:[{type:b,tag:p,props:{href:"#%EB%AC%B8%EC%A0%9C-%ED%92%80%EC%9D%B4",ariaHidden:G,tabIndex:H},children:[{type:b,tag:c,props:{className:[I,J]},children:[]}]},{type:a,value:ba}]},{type:a,value:f},{type:b,tag:aI,props:{id:bb},children:[{type:b,tag:p,props:{href:"#1-dfs%EB%A1%9C-%EC%9D%BC%EC%A0%95-%EA%B7%B8%EB%9E%98%ED%94%84-%EA%B5%AC%EC%84%B1",ariaHidden:G,tabIndex:H},children:[{type:b,tag:c,props:{className:[I,J]},children:[]}]},{type:a,value:bc}]},{type:a,value:f},{type:b,tag:Z,props:{},children:[{type:a,value:f},{type:b,tag:_,props:{},children:[{type:a,value:$}]},{type:a,value:f},{type:b,tag:B,props:{markdown:z},children:[{type:a,value:f},{type:b,tag:B,props:{className:[aa]},children:[{type:b,tag:ab,props:{className:[ac,ad]},children:[{type:b,tag:t,props:{},children:[{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:ae}]},{type:a,value:af},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:C}]},{type:a,value:ag},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:C}]},{type:a,value:ah},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:ai}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,aj]},children:[{type:a,value:"Solution1"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:ak},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:K}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,L]},children:[{type:a,value:al}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:am},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:an},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:D},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:ao},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:E}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:A}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:ap}]},{type:a,value:D},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:E}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:aJ},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:x}]},{type:a,value:aq},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:ar},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:as}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:bp}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:"# 사전 어휘 순으로 정렬 (굳이 매번 sort()를 호출할 필요 없음)"}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:Q}]},{type:a,value:aK},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:aL},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:P}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:aM}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:at},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:aN},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:p},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:aO},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:bq},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:x}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:K}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,L]},children:[{type:a,value:aE}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:p},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:w},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:"# 첫 번째 값을 읽어 어휘 순 방문"}]},{type:a,value:w},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:"# pop()으로 꺼내므로 그래프에서 해당 경로는 사라짐"}]},{type:a,value:w},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:"# 어휘 순으로 방문해야 하기 때문에"}]},{type:a,value:w},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:"# 정렬된 리스트 중 맨 앞의 값을 추출 (큐 연산)"}]},{type:a,value:w},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:au}]},{type:a,value:aP},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:p},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:br},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:aQ},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:p},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:av},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,F]},children:[{type:a,value:aG}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:bn},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:"# route에 쌓이는 건 역순"}]},{type:a,value:aR},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:p},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aH},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,U]},children:[{type:a,value:V}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:aS}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:T}]},{type:a,value:aT},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:A}]},{type:b,tag:c,props:{className:[d,F]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:f}]}]}]},{type:a,value:f}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:aI,props:{id:bd},children:[{type:b,tag:p,props:{href:"#2-%EC%8A%A4%ED%83%9D-%EC%97%B0%EC%82%B0%EC%9C%BC%EB%A1%9C-%ED%81%90-%EC%97%B0%EC%82%B0-%EC%B5%9C%EC%A0%81%ED%99%94-%EC%8B%9C%EB%8F%84",ariaHidden:G,tabIndex:H},children:[{type:b,tag:c,props:{className:[I,J]},children:[]}]},{type:a,value:be}]},{type:a,value:f},{type:b,tag:O,props:{},children:[{type:a,value:f},{type:b,tag:y,props:{},children:[{type:a,value:"풀이 1의 큐 연산("},{type:b,tag:t,props:{},children:[{type:a,value:"pop(0)"}]},{type:a,value:")은 시간 복잡도가 O(n)이기 때문에 O(1)으로 최적화시킬 필요가 있다."}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:Z,props:{},children:[{type:a,value:f},{type:b,tag:_,props:{},children:[{type:a,value:$}]},{type:a,value:f},{type:b,tag:B,props:{markdown:z},children:[{type:a,value:f},{type:b,tag:B,props:{className:[aa]},children:[{type:b,tag:ab,props:{className:[ac,ad]},children:[{type:b,tag:t,props:{},children:[{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:ae}]},{type:a,value:af},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:C}]},{type:a,value:ag},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:C}]},{type:a,value:ah},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:ai}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,aj]},children:[{type:a,value:"Solution2"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:ak},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:K}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,L]},children:[{type:a,value:al}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:am},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:an},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:D},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:ao},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:E}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:A}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:ap}]},{type:a,value:D},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:E}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:aJ},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:x}]},{type:a,value:aq},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:ar},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:as}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:"# 그래프를 뒤집어서 구성 (reverse=True)"}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:Q}]},{type:a,value:aK},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:aL},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:P}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:aM}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:at},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:" reverse"},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,"boolean"]},children:[{type:a,value:"True"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:aN},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:p},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:aO},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:bq},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:x}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:K}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,L]},children:[{type:a,value:aE}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:p},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:w},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:"# 마지막 값을 읽어 어휘 순 방문"}]},{type:a,value:w},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:au}]},{type:a,value:aP},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:p},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:br},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:aQ},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:p},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:av},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aR},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:p},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aH},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,U]},children:[{type:a,value:V}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:aS}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:T}]},{type:a,value:aT},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:A}]},{type:b,tag:c,props:{className:[d,F]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:f}]}]}]},{type:a,value:f}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:aI,props:{id:bf},children:[{type:b,tag:p,props:{href:"#3-%EC%9D%BC%EC%A0%95-%EA%B7%B8%EB%9E%98%ED%94%84-%EB%B0%98%EB%B3%B5",ariaHidden:G,tabIndex:H},children:[{type:b,tag:c,props:{className:[I,J]},children:[]}]},{type:a,value:bg}]},{type:a,value:f},{type:b,tag:O,props:{},children:[{type:a,value:f},{type:b,tag:y,props:{},children:[{type:a,value:"재귀 대신 반복으로 풀이하는 방법이다."}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:Z,props:{},children:[{type:a,value:f},{type:b,tag:_,props:{},children:[{type:a,value:$}]},{type:a,value:f},{type:b,tag:B,props:{markdown:z},children:[{type:a,value:f},{type:b,tag:B,props:{className:[aa]},children:[{type:b,tag:ab,props:{className:[ac,ad]},children:[{type:b,tag:t,props:{},children:[{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:ae}]},{type:a,value:af},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:C}]},{type:a,value:ag},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:C}]},{type:a,value:ah},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:ai}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,aj]},children:[{type:a,value:"Solution3"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:ak},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:K}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,L]},children:[{type:a,value:al}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:am},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:an},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:D},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:ao},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:E}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:A}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:ap}]},{type:a,value:D},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:E}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:aJ},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:x}]},{type:a,value:aq},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:ar},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:as}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:bp}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:Q}]},{type:a,value:aK},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:aL},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:P}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:aM}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:at},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:aN},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:p},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:aO},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:"\n\n        route"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:" stack "},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:x}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,U]},children:[{type:a,value:V}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:au}]},{type:a,value:" stack"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:w},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:"# 반복으로 스택을 구성하되 막히는 부분에서 풀어내는 처리"}]},{type:a,value:w},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:"# 즉, stack[-1]의 인접 노드가 없으면 while 문을 건너뛰고 스택에서 pop"}]},{type:a,value:w},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:au}]},{type:a,value:aP},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:aU},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:A}]},{type:b,tag:c,props:{className:[d,F]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:"\n                stack"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:aQ},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:aU},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:A}]},{type:b,tag:c,props:{className:[d,F]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:av},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,F]},children:[{type:a,value:aG}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aR},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:aU},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:av},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:aS}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:T}]},{type:a,value:aT},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:A}]},{type:b,tag:c,props:{className:[d,F]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:f}]}]}]},{type:a,value:f}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:Y,props:{id:X},children:[{type:b,tag:p,props:{href:"#%EC%B6%9C%EC%B2%98",ariaHidden:G,tabIndex:H},children:[{type:b,tag:c,props:{className:[I,J]},children:[]}]},{type:a,value:X}]},{type:a,value:f},{type:b,tag:O,props:{},children:[{type:a,value:f},{type:b,tag:y,props:{},children:[{type:a,value:"박상길, 『파이썬 알고리즘 인터뷰』, 책만(2020), p357-363.\n"},{type:b,tag:O,props:{},children:[{type:a,value:f},{type:b,tag:y,props:{},children:[{type:b,tag:p,props:{href:"https:\u002F\u002Fwww.onlybook.co.kr\u002Fentry\u002Falgorithm-interview",rel:[ax,ay,az],target:aA},children:[{type:a,value:"도서 정보"}]}]},{type:a,value:f},{type:b,tag:y,props:{},children:[{type:b,tag:p,props:{href:"https:\u002F\u002Fgithub.com\u002Fonlybooks\u002Falgorithm-interview",rel:[ax,ay,az],target:aA},children:[{type:a,value:"GitHub"}]}]},{type:a,value:f}]},{type:a,value:f}]},{type:a,value:f}]}]},text:"\n## 문제 링크\n\nhttps:\u002F\u002Fleetcode.com\u002Fproblems\u002Freconstruct-itinerary\u002F\n\n## 나의 풀이 (시간 초과)\n\n- 인접 리스트(`itinerary`)를 딕셔너리로 만들고 모든 경로(`all_routes`)를 세트에 저장한 후 해당하는 경로를 하나씩 빼면서 DFS를 구현하려 했으나 출발 항공과 도착 항공이 중복되는 경우가 있었다.\n- 그래서 세트가 아닌 그냥 리스트로 구현했지만 시간 초과로 인한 오답 처리가 되었다.\n  - 아마 DFS 도중 현재 경로가 `all_routes`(DFS에서는 `routes`)에 존재하는지 확인하는 과정에서 시간 복잡도가 늘어난 것으로 보인다.\n- 참고로 `result`를 `min()` 함수로 감싸서 리턴한 이유는 `result` 리스트에는 DFS를 호출하면서 얻은 모든 경로가 저장되는데, `min()`을 호출함으로써 사전 순서가 가장 빠른 경로를 리턴할 수 있기 때문이다.\n\n\u003Cdetails\u003E\n\u003Csummary\u003E소스 코드\u003C\u002Fsummary\u003E\n\u003Cdiv markdown=\"1\"\u003E\n\n```python\nfrom typing import List\nimport collections\n\n\nclass MySolution1:\n    def findItinerary(self, tickets: List[List[str]]) -\u003E List[str]:\n        result = []\n        all_routes = []\n        itinerary = collections.defaultdict(list)\n        for i, [departure, arrival] in enumerate(tickets):\n            itinerary[departure].append(arrival)\n            all_routes.append((departure, arrival))\n\n        def dfs(dep, path, routes):\n            if len(routes) == 0:\n                result.append(path)\n                return\n\n            for arrival in itinerary[dep]:\n                if (dep, arrival) in routes:\n                    routes.remove((dep, arrival))\n                    dfs(arrival, path + [arrival], routes)\n                    routes.append((dep, arrival))\n\n        dfs('JFK', ['JFK'], all_routes)\n        return min(result)\n```\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdetails\u003E\n\n## 문제 풀이\n\n### 1. DFS로 일정 그래프 구성\n\n\u003Cdetails\u003E\n\u003Csummary\u003E소스 코드\u003C\u002Fsummary\u003E\n\u003Cdiv markdown=\"1\"\u003E\n\n```python\nfrom typing import List\nimport collections\n\n\nclass Solution1:\n    def findItinerary(self, tickets: List[List[str]]) -\u003E List[str]:\n        graph = collections.defaultdict(list)\n\n        # 그래프 순서대로 구성\n        # 사전 어휘 순으로 정렬 (굳이 매번 sort()를 호출할 필요 없음)\n        for a, b in sorted(tickets):\n            graph[a].append(b)\n\n        route = []\n\n        def dfs(a):\n            # 첫 번째 값을 읽어 어휘 순 방문\n            # pop()으로 꺼내므로 그래프에서 해당 경로는 사라짐\n            # 어휘 순으로 방문해야 하기 때문에\n            # 정렬된 리스트 중 맨 앞의 값을 추출 (큐 연산)\n            while graph[a]:\n                dfs(graph[a].pop(0))\n\n            # route에 쌓이는 건 역순\n            route.append(a)\n\n        dfs('JFK')\n        # 다시 뒤집어 어휘 순 결과로\n        return route[::-1]\n```\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdetails\u003E\n\n### 2. 스택 연산으로 큐 연산 최적화 시도\n\n- 풀이 1의 큐 연산(`pop(0)`)은 시간 복잡도가 O(n)이기 때문에 O(1)으로 최적화시킬 필요가 있다.\n\n\u003Cdetails\u003E\n\u003Csummary\u003E소스 코드\u003C\u002Fsummary\u003E\n\u003Cdiv markdown=\"1\"\u003E\n\n```python\nfrom typing import List\nimport collections\n\n\nclass Solution2:\n    def findItinerary(self, tickets: List[List[str]]) -\u003E List[str]:\n        graph = collections.defaultdict(list)\n\n        # 그래프를 뒤집어서 구성 (reverse=True)\n        for a, b in sorted(tickets, reverse=True):\n            graph[a].append(b)\n\n        route = []\n\n        def dfs(a):\n            # 마지막 값을 읽어 어휘 순 방문\n            while graph[a]:\n                dfs(graph[a].pop())\n            route.append(a)\n\n        dfs('JFK')\n        # 다시 뒤집어 어휘 순 결과로\n        return route[::-1]\n```\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdetails\u003E\n\n### 3. 일정 그래프 반복\n\n- 재귀 대신 반복으로 풀이하는 방법이다.\n\n\u003Cdetails\u003E\n\u003Csummary\u003E소스 코드\u003C\u002Fsummary\u003E\n\u003Cdiv markdown=\"1\"\u003E\n\n```python\nfrom typing import List\nimport collections\n\n\nclass Solution3:\n    def findItinerary(self, tickets: List[List[str]]) -\u003E List[str]:\n        graph = collections.defaultdict(list)\n\n        # 그래프 순서대로 구성\n        for a, b in sorted(tickets):\n            graph[a].append(b)\n\n        route, stack = [], ['JFK']\n        while stack:\n            # 반복으로 스택을 구성하되 막히는 부분에서 풀어내는 처리\n            # 즉, stack[-1]의 인접 노드가 없으면 while 문을 건너뛰고 스택에서 pop\n            while graph[stack[-1]]:\n                stack.append(graph[stack[-1]].pop(0))\n            route.append(stack.pop())\n\n        # 다시 뒤집어 어휘 순 결과로\n        return route[::-1]\n```\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdetails\u003E\n\n## 출처\n\n- 박상길, 『파이썬 알고리즘 인터뷰』, 책만(2020), p357-363.\n  - [도서 정보](https:\u002F\u002Fwww.onlybook.co.kr\u002Fentry\u002Falgorithm-interview)\n  - [GitHub](https:\u002F\u002Fgithub.com\u002Fonlybooks\u002Falgorithm-interview)\n",dir:"\u002Fposts\u002F2021\u002F06\u002F01",path:"\u002Fposts\u002F2021\u002F06\u002F01\u002Fleetcode-332",extension:".md",createdAt:"2021-06-01T03:54:23.000Z",updatedAt:"2022-06-26T10:01:49.000Z"},isErrorPage:N,isDarkMode:N,isScrolled:N,isMobile:N,isTablet:N,hasHeaderImage:aV,isMobileMenuOpened:N,headerImage:"",perPage:10},serverRendered:aV,routePath:"\u002Fposts\u002Fleetcode-332",config:{_app:{basePath:"\u002F",assetsPath:"\u002F_nuxt\u002F",cdnURL:aW},content:{dbHash:"2eae1d88"}},colorMode:{preference:bs,value:bs,unknown:aV,forced:N}}}("text","element","span","token","punctuation","\n","keyword","(",")","[","]"," ",":","operator",",","a",".","builtin","comment","code","\n        ","append","\n            ","=","li","1","-","div","import"," List","str","number","true",-1,"icon","icon-link","def","function","\n\n        ",false,"ul","in","for"," arrival","dep","return","string","'JFK'",2,"출처","h2","details","summary","소스 코드","nuxt-content-highlight","pre","language-python","line-numbers","from"," typing "," List\n"," collections\n\n\n","class","class-name","\n    ","findItinerary","self"," tickets","List","\u003E"," collections","defaultdict","list","tickets","while","pop",3,"nofollow","noopener","noreferrer","_blank","result","departure","arrival","dfs"," routes","0","\n\n        dfs","h3","\n        graph "," a"," b ","sorted","\n            graph","b"," graph","graph","\n            route","# 다시 뒤집어 어휘 순 결과로"," route","stack",true,null,"문제-링크","문제 링크","나의-풀이-시간-초과","나의 풀이 (시간 초과)","문제-풀이","문제 풀이","1-dfs로-일정-그래프-구성","1. DFS로 일정 그래프 구성","2-스택-연산으로-큐-연산-최적화-시도","2. 스택 연산으로 큐 연산 최적화 시도","3-일정-그래프-반복","3. 일정 그래프 반복","https:\u002F\u002Fleetcode.com\u002Fproblems\u002Freconstruct-itinerary\u002F","all_routes","routes","min()","if","\n                ","\n\n            ","\n                    routes","# 그래프 순서대로 구성","\n\n        route ","\n                dfs","system"));