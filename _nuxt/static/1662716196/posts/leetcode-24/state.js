window.__NUXT__=(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au,av,aw,ax,ay,az,aA,aB,aC,aD,aE,aF,aG,aH,aI,aJ,aK,aL,aM,aN,aO,aP,aQ,aR,aS,aT,aU,aV,aW,aX,aY,aZ){return {staticAssetsBase:"\u002F_nuxt\u002Fstatic\u002F1662716196",layout:"default",error:az,state:{post:{slug:"leetcode-24",description:"Swap Nodes in Pairs",title:"LeetCode 24번 문제",tags:"algorithm, leetcode, python, linked_list",toc:[{id:aA,depth:P,text:aB},{id:aC,depth:P,text:aD},{id:aE,depth:P,text:aF},{id:aG,depth:ao,text:aH},{id:aI,depth:ao,text:aJ},{id:aK,depth:ao,text:aL},{id:Q,depth:P,text:Q}],body:{type:"root",children:[{type:b,tag:R,props:{id:aA},children:[{type:b,tag:p,props:{href:"#%EB%AC%B8%EC%A0%9C-%EB%A7%81%ED%81%AC",ariaHidden:C,tabIndex:D},children:[{type:b,tag:c,props:{className:[E,F]},children:[]}]},{type:a,value:aB}]},{type:a,value:f},{type:b,tag:aM,props:{},children:[{type:b,tag:p,props:{href:aN,rel:[ap,aq,ar],target:as},children:[{type:a,value:aN}]}]},{type:a,value:f},{type:b,tag:R,props:{id:aC},children:[{type:b,tag:p,props:{href:"#%EB%82%98%EC%9D%98-%ED%92%80%EC%9D%B4",ariaHidden:C,tabIndex:D},children:[{type:b,tag:c,props:{className:[E,F]},children:[]}]},{type:a,value:aD}]},{type:a,value:f},{type:b,tag:S,props:{},children:[{type:a,value:f},{type:b,tag:T,props:{},children:[{type:a,value:U}]},{type:a,value:f},{type:b,tag:v,props:{markdown:V},children:[{type:a,value:f},{type:b,tag:v,props:{className:[W]},children:[{type:b,tag:X,props:{className:[Y,Z]},children:[{type:b,tag:_,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:w}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:$}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:z}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:aa}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:ab},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,ac]},children:[{type:a,value:ad}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:H}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:ae},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:K},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:a,value:af},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:k}]},{type:a,value:ag},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:w}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:ah}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:z}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:"my_solution"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:ai}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:aj}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:ak},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:"# 루트 노드, 현재 페어와 연결되는 이전 노드, 홀수 번째 노드"}]},{type:a,value:"\n        root"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:at},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:aO},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:H}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:H}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:aP},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:au}]},{type:a,value:al},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:L},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:"# 짝수 번째 노드"}]},{type:a,value:"\n            even_node "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:a,value:al},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:k}]},{type:a,value:L},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:M}]},{type:a,value:am},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:av},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:"# 이전 노드가 있다면 연결"}]},{type:a,value:av},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:M}]},{type:a,value:at},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:"\n                    prev"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:a,value:" even_node\n                odd_node"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:am},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:a,value:am},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:aQ},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:"# 요소가 1개일 때와 2개 이상일 때의 루트 노드 설정"}]},{type:a,value:L},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:M}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:"not"}]},{type:a,value:aR},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:av},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:M}]},{type:a,value:am},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:aS},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:a,value:" even_node\n                "},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:"else"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:aS},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:a,value:aQ},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:"# 이전 노드와 홀수 노드 갱신"}]},{type:a,value:aT},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:aO},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:a,value:al},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:al},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:k}]},{type:a,value:ak},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:N}]},{type:a,value:" root\n"}]}]}]},{type:a,value:f}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:R,props:{id:aE},children:[{type:b,tag:p,props:{href:"#%EB%AC%B8%EC%A0%9C-%ED%92%80%EC%9D%B4",ariaHidden:C,tabIndex:D},children:[{type:b,tag:c,props:{className:[E,F]},children:[]}]},{type:a,value:aF}]},{type:a,value:f},{type:b,tag:aw,props:{id:aG},children:[{type:b,tag:p,props:{href:"#1-%EA%B0%92%EB%A7%8C-%EA%B5%90%ED%99%98",ariaHidden:C,tabIndex:D},children:[{type:b,tag:c,props:{className:[E,F]},children:[]}]},{type:a,value:aH}]},{type:a,value:f},{type:b,tag:an,props:{},children:[{type:a,value:f},{type:b,tag:J,props:{},children:[{type:a,value:"원래 의도와는 맞지 않는 변칙적인 풀이법이므로 추천하지 않는 풀이법이다."}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:S,props:{},children:[{type:a,value:f},{type:b,tag:T,props:{},children:[{type:a,value:U}]},{type:a,value:f},{type:b,tag:v,props:{markdown:V},children:[{type:a,value:f},{type:b,tag:v,props:{className:[W]},children:[{type:b,tag:X,props:{className:[Y,Z]},children:[{type:b,tag:_,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:w}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:$}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:z}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:aa}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:ab},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,ac]},children:[{type:a,value:ad}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:H}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:ae},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:K},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:a,value:af},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:k}]},{type:a,value:ag},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:w}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:ah}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:z}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:"solution1"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:ai}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:aj}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:"\n        cur "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:a,value:aP},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:au}]},{type:a,value:" cur "},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:ax}]},{type:a,value:O},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:L},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:"# 값만 교환"}]},{type:a,value:"\n            cur"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aU},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:O},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:K},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:a,value:O},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aU},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:O},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:"val\n            cur "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:a,value:O},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:k}]},{type:a,value:"\n\n        "},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:N}]},{type:a,value:aV}]}]}]},{type:a,value:f}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:aw,props:{id:aI},children:[{type:b,tag:p,props:{href:"#2-%EB%B0%98%EB%B3%B5-%EA%B5%AC%EC%A1%B0%EB%A1%9C-%EC%8A%A4%EC%99%91",ariaHidden:C,tabIndex:D},children:[{type:b,tag:c,props:{className:[E,F]},children:[]}]},{type:a,value:aJ}]},{type:a,value:f},{type:b,tag:S,props:{},children:[{type:a,value:f},{type:b,tag:T,props:{},children:[{type:a,value:U}]},{type:a,value:f},{type:b,tag:v,props:{markdown:V},children:[{type:a,value:f},{type:b,tag:v,props:{className:[W]},children:[{type:b,tag:X,props:{className:[Y,Z]},children:[{type:b,tag:_,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:w}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:$}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:z}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:aa}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:ab},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,ac]},children:[{type:a,value:ad}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:H}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:ae},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:K},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:a,value:af},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:k}]},{type:a,value:ag},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:w}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:ah}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:z}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:"solution2"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:ai}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:aj}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:"\n        root "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:a,value:" prev "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:H}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"\n        prev"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:a,value:" head\n        "},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:au}]},{type:a,value:aW},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:ax}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:L},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:"# b가 a(head)를 가리키도록 할당"}]},{type:a,value:"\n            b "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:k}]},{type:a,value:aX},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:a,value:" b"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:k}]},{type:a,value:"\n            b"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:a,value:" head\n\n            "},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:"# prev가 b를 가리키도록 할당"}]},{type:a,value:aT},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:a,value:" b\n\n            "},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:"# 다음번 비교를 위해 이동"}]},{type:a,value:"\n            head "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:k}]},{type:a,value:"\n            prev "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:a,value:at},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:k}]},{type:a,value:ak},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:N}]},{type:a,value:aR},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:k}]},{type:a,value:f}]}]}]},{type:a,value:f}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:aw,props:{id:aK},children:[{type:b,tag:p,props:{href:"#3-%EC%9E%AC%EA%B7%80-%EA%B5%AC%EC%A1%B0%EB%A1%9C-%EC%8A%A4%EC%99%91",ariaHidden:C,tabIndex:D},children:[{type:b,tag:c,props:{className:[E,F]},children:[]}]},{type:a,value:aL}]},{type:a,value:f},{type:b,tag:an,props:{},children:[{type:a,value:f},{type:b,tag:J,props:{},children:[{type:a,value:"2번 풀이에 비해 공간 복잡도가 낮은 방법이다."}]},{type:a,value:f},{type:b,tag:J,props:{},children:[{type:a,value:"최종적으로는 백트래킹되면서 연결 리스트가 이어지게 된다."}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:S,props:{},children:[{type:a,value:f},{type:b,tag:T,props:{},children:[{type:a,value:U}]},{type:a,value:f},{type:b,tag:v,props:{markdown:V},children:[{type:a,value:f},{type:b,tag:v,props:{className:[W]},children:[{type:b,tag:X,props:{className:[Y,Z]},children:[{type:b,tag:_,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:w}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:$}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:z}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:aa}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:ab},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,ac]},children:[{type:a,value:ad}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:H}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:ae},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:K},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:a,value:af},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:k}]},{type:a,value:ag},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:w}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:ah}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:z}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:aY}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:ai}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:aj}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:ak},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:M}]},{type:a,value:aW},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:ax}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:"\n            p "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:k}]},{type:a,value:"\n\n            "},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:"# 스왑된 값 리턴"}]},{type:a,value:aX},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:a,value:" self"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aY},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:aM},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"\n            p"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:a,value:" head\n            "},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:N}]},{type:a,value:" p\n        "},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:N}]},{type:a,value:aV}]}]}]},{type:a,value:f}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:R,props:{id:Q},children:[{type:b,tag:p,props:{href:"#%EC%B6%9C%EC%B2%98",ariaHidden:C,tabIndex:D},children:[{type:b,tag:c,props:{className:[E,F]},children:[]}]},{type:a,value:Q}]},{type:a,value:f},{type:b,tag:an,props:{},children:[{type:a,value:f},{type:b,tag:J,props:{},children:[{type:a,value:"박상길, 『파이썬 알고리즘 인터뷰』, 책만(2020), p229-232.\n"},{type:b,tag:an,props:{},children:[{type:a,value:f},{type:b,tag:J,props:{},children:[{type:b,tag:p,props:{href:"https:\u002F\u002Fwww.onlybook.co.kr\u002Fentry\u002Falgorithm-interview",rel:[ap,aq,ar],target:as},children:[{type:a,value:"도서 정보"}]}]},{type:a,value:f},{type:b,tag:J,props:{},children:[{type:b,tag:p,props:{href:"https:\u002F\u002Fgithub.com\u002Fonlybooks\u002Falgorithm-interview",rel:[ap,aq,ar],target:as},children:[{type:a,value:"GitHub"}]}]},{type:a,value:f}]},{type:a,value:f}]},{type:a,value:f}]}]},text:"\n## 문제 링크\n\nhttps:\u002F\u002Fleetcode.com\u002Fproblems\u002Fswap-nodes-in-pairs\u002F\n\n## 나의 풀이\n\n\u003Cdetails\u003E\n\u003Csummary\u003E소스 코드\u003C\u002Fsummary\u003E\n\u003Cdiv markdown=\"1\"\u003E\n\n```python\nclass ListNode:\n    def __init__(self, val=0, next=None):\n        self.val = val\n        self.next = next\n\n\nclass Solution:\n    def my_solution(self, head: ListNode) -\u003E ListNode:\n        # 루트 노드, 현재 페어와 연결되는 이전 노드, 홀수 번째 노드\n        root, prev, odd_node = None, None, head\n\n        while odd_node:\n            # 짝수 번째 노드\n            even_node = odd_node.next\n            if even_node:\n                # 이전 노드가 있다면 연결\n                if prev:\n                    prev.next = even_node\n                odd_node.next, even_node.next = even_node.next, odd_node\n\n            # 요소가 1개일 때와 2개 이상일 때의 루트 노드 설정\n            if not root:\n                if even_node:\n                    root = even_node\n                else:\n                    root = odd_node\n\n            # 이전 노드와 홀수 노드 갱신\n            prev, odd_node = odd_node, odd_node.next\n        return root\n```\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdetails\u003E\n\n## 문제 풀이\n\n### 1. 값만 교환\n\n- 원래 의도와는 맞지 않는 변칙적인 풀이법이므로 추천하지 않는 풀이법이다.\n\n\u003Cdetails\u003E\n\u003Csummary\u003E소스 코드\u003C\u002Fsummary\u003E\n\u003Cdiv markdown=\"1\"\u003E\n\n```python\nclass ListNode:\n    def __init__(self, val=0, next=None):\n        self.val = val\n        self.next = next\n\n\nclass Solution:\n    def solution1(self, head: ListNode) -\u003E ListNode:\n        cur = head\n\n        while cur and cur.next:\n            # 값만 교환\n            cur.val, cur.next.val = cur.next.val, cur.val\n            cur = cur.next.next\n\n        return head\n```\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdetails\u003E\n\n### 2. 반복 구조로 스왑\n\n\u003Cdetails\u003E\n\u003Csummary\u003E소스 코드\u003C\u002Fsummary\u003E\n\u003Cdiv markdown=\"1\"\u003E\n\n```python\nclass ListNode:\n    def __init__(self, val=0, next=None):\n        self.val = val\n        self.next = next\n\n\nclass Solution:\n    def solution2(self, head: ListNode) -\u003E ListNode:\n        root = prev = ListNode(None)\n        prev.next = head\n        while head and head.next:\n            # b가 a(head)를 가리키도록 할당\n            b = head.next\n            head.next = b.next\n            b.next = head\n\n            # prev가 b를 가리키도록 할당\n            prev.next = b\n\n            # 다음번 비교를 위해 이동\n            head = head.next\n            prev = prev.next.next\n        return root.next\n```\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdetails\u003E\n\n### 3. 재귀 구조로 스왑\n\n- 2번 풀이에 비해 공간 복잡도가 낮은 방법이다.\n- 최종적으로는 백트래킹되면서 연결 리스트가 이어지게 된다.\n\n\u003Cdetails\u003E\n\u003Csummary\u003E소스 코드\u003C\u002Fsummary\u003E\n\u003Cdiv markdown=\"1\"\u003E\n\n```python\nclass ListNode:\n    def __init__(self, val=0, next=None):\n        self.val = val\n        self.next = next\n\n\nclass Solution:\n    def solution3(self, head: ListNode) -\u003E ListNode:\n        if head and head.next:\n            p = head.next\n\n            # 스왑된 값 리턴\n            head.next = self.solution3(p.next)\n            p.next = head\n            return p\n        return head\n```\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdetails\u003E\n\n## 출처\n\n- 박상길, 『파이썬 알고리즘 인터뷰』, 책만(2020), p229-232.\n  - [도서 정보](https:\u002F\u002Fwww.onlybook.co.kr\u002Fentry\u002Falgorithm-interview)\n  - [GitHub](https:\u002F\u002Fgithub.com\u002Fonlybooks\u002Falgorithm-interview)\n",dir:"\u002Fposts\u002F2021\u002F05\u002F06",path:"\u002Fposts\u002F2021\u002F05\u002F06\u002Fleetcode-24",extension:".md",createdAt:"2021-05-06T14:35:51.000Z",updatedAt:"2022-06-26T10:01:49.000Z"},isErrorPage:I,isDarkMode:I,isScrolled:I,isMobile:I,isTablet:I,hasHeaderImage:ay,isMobileMenuOpened:I,headerImage:"",perPage:10},serverRendered:ay,routePath:"\u002Fposts\u002Fleetcode-24",config:{_app:{basePath:"\u002F",assetsPath:"\u002F_nuxt\u002F",cdnURL:az},content:{dbHash:"1bce9b0c"}},colorMode:{preference:aZ,value:aZ,unknown:ay,forced:I}}}("text","element","span","token","punctuation","\n","operator"," ",".","builtin","next","=","keyword",":",",","a","(",")","comment"," head"," ListNode","div","class","class-name","\n    ","def","function","self","true",-1,"icon","icon-link","boolean","None",false,"li","val ","\n            ","if","return"," cur",2,"출처","h2","details","summary","소스 코드","1","nuxt-content-highlight","pre","language-python","line-numbers","code","ListNode","__init__"," val","number","0","\n        self"," val\n        self","\n\n\n","Solution","-","\u003E","\n        "," odd_node"," even_node","ul",3,"nofollow","noopener","noreferrer","_blank"," prev","while","\n                ","h3","and",true,null,"문제-링크","문제 링크","나의-풀이","나의 풀이","문제-풀이","문제 풀이","1-값만-교환","1. 값만 교환","2-반복-구조로-스왑","2. 반복 구조로 스왑","3-재귀-구조로-스왑","3. 재귀 구조로 스왑","p","https:\u002F\u002Fleetcode.com\u002Fproblems\u002Fswap-nodes-in-pairs\u002F"," odd_node "," head\n\n        "," odd_node\n\n            "," root","\n                    root ","\n            prev","val"," head\n"," head ","\n            head","solution3","system"));