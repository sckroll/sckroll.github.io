window.__NUXT__=(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au,av,aw,ax,ay,az,aA,aB,aC,aD,aE,aF,aG,aH,aI,aJ,aK,aL,aM,aN,aO,aP,aQ,aR,aS,aT,aU,aV,aW,aX,aY,aZ,a_,a$,ba,bb,bc,bd,be,bf,bg){return {staticAssetsBase:"\u002F_nuxt\u002Fstatic\u002F1659443545",layout:"default",error:af,state:{post:{slug:"leetcode-937",description:"Reorder Data in Log Files",title:"LeetCode 937번 문제",tags:"algorithm, leetcode, python, string",toc:[{id:ag,depth:H,text:ah},{id:ai,depth:H,text:aj},{id:ak,depth:H,text:al},{id:am,depth:X,text:"람다와 + 연산자를 사용하는 방법"},{id:an,depth:H,text:ao},{id:ap,depth:X,text:aq},{id:N,depth:X,text:N},{id:O,depth:H,text:O}],body:{type:"root",children:[{type:b,tag:I,props:{id:ag},children:[{type:b,tag:o,props:{href:"#%EB%AC%B8%EC%A0%9C-%EB%A7%81%ED%81%AC",ariaHidden:t,tabIndex:u},children:[{type:b,tag:c,props:{className:[v,w]},children:[]}]},{type:a,value:ah}]},{type:a,value:f},{type:b,tag:"p",props:{},children:[{type:b,tag:o,props:{href:ar,rel:[B,C,D],target:E},children:[{type:a,value:ar}]}]},{type:a,value:f},{type:b,tag:I,props:{id:ai},children:[{type:b,tag:o,props:{href:"#%EB%82%98%EC%9D%98-%ED%92%80%EC%9D%B4",ariaHidden:t,tabIndex:u},children:[{type:b,tag:c,props:{className:[v,w]},children:[]}]},{type:a,value:aj}]},{type:a,value:f},{type:b,tag:as,props:{},children:[{type:a,value:f},{type:b,tag:at,props:{},children:[{type:a,value:au}]},{type:a,value:f},{type:b,tag:P,props:{markdown:y},children:[{type:a,value:f},{type:b,tag:P,props:{className:[av]},children:[{type:b,tag:aw,props:{className:[ax,ay]},children:[{type:b,tag:j,props:{},children:[{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:az}]},{type:a,value:aA},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:aB}]},{type:a,value:aC},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:aD}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,aE]},children:[{type:a,value:aF}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:aG},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:aH}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,aI]},children:[{type:a,value:"my_solution"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:aJ},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:R},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,F]},children:[{type:a,value:S}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:Y}]},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:aK}]},{type:a,value:R},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,F]},children:[{type:a,value:S}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:"\n        let"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:" dig "},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:z}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:G},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:aL}]},{type:a,value:aM},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:aN}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:J},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:aO}]},{type:a,value:Z},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:Y}]},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:y}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:"isnumeric"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:"\n                dig"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:_},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:J},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:aP}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:"\n                splitted "},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:z}]},{type:a,value:Z},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:U},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:"\n                words "},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:z}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:aQ},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:K}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,aR]},children:[{type:a,value:aS}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:aT},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:aQ},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:y}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aU},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:"words"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aU},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:aV},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:aW},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:$}]},{type:a,value:L},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:aa},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:y}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:L},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:K}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:"\n\n        result "},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:z}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,F]},children:[{type:a,value:"list"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,F]},children:[{type:a,value:"map"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:$}]},{type:a,value:L},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,aR]},children:[{type:a,value:aS}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:aT},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:aa},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:" let"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:G},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:aX}]},{type:a,value:" result "},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:V}]},{type:a,value:" dig\n"}]}]}]},{type:a,value:f}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:I,props:{id:ak},children:[{type:b,tag:o,props:{href:"#%EB%AC%B8%EC%A0%9C-%ED%92%80%EC%9D%B4",ariaHidden:t,tabIndex:u},children:[{type:b,tag:c,props:{className:[v,w]},children:[]}]},{type:a,value:al}]},{type:a,value:f},{type:b,tag:ab,props:{id:am},children:[{type:b,tag:o,props:{href:"#%EB%9E%8C%EB%8B%A4%EC%99%80--%EC%97%B0%EC%82%B0%EC%9E%90%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95",ariaHidden:t,tabIndex:u},children:[{type:b,tag:c,props:{className:[v,w]},children:[]}]},{type:a,value:"람다와 "},{type:b,tag:j,props:{},children:[{type:a,value:V}]},{type:a,value:" 연산자를 사용하는 방법"}]},{type:a,value:f},{type:b,tag:as,props:{},children:[{type:a,value:f},{type:b,tag:at,props:{},children:[{type:a,value:au}]},{type:a,value:f},{type:b,tag:P,props:{markdown:y},children:[{type:a,value:f},{type:b,tag:P,props:{className:[av]},children:[{type:b,tag:aw,props:{className:[ax,ay]},children:[{type:b,tag:j,props:{},children:[{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:az}]},{type:a,value:aA},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:aB}]},{type:a,value:aC},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:aD}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,aE]},children:[{type:a,value:aF}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:aG},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:aH}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,aI]},children:[{type:a,value:"solution1"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:aJ},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:R},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,F]},children:[{type:a,value:S}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:Y}]},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:aK}]},{type:a,value:R},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,F]},children:[{type:a,value:S}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:aY},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:" digits "},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:z}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:G},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:aL}]},{type:a,value:aM},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:aN}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:J},{type:b,tag:c,props:{className:[d,M]},children:[{type:a,value:"# 1. 문자와 숫자 구분"}]},{type:a,value:J},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:aO}]},{type:a,value:Z},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:U},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:y}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:"isdigit"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:"\n                digits"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:_},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:J},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:aP}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:"\n                letters"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:_},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aZ},{type:b,tag:c,props:{className:[d,M]},children:[{type:a,value:"# 2. 2개의 키를 람다 표현식으로 정렬"}]},{type:a,value:G},{type:b,tag:c,props:{className:[d,M]},children:[{type:a,value:"# 튜플의 첫 번째 요소를 기준으로 정렬 수행,"}]},{type:a,value:G},{type:b,tag:c,props:{className:[d,M]},children:[{type:a,value:"# 값이 같을 경우 두 번째 요소를 기준으로 정렬 수행"}]},{type:a,value:aY},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:aV},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:aW},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:$}]},{type:a,value:L},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:aa},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:U},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:y}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:L},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:U},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:K}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aZ},{type:b,tag:c,props:{className:[d,M]},children:[{type:a,value:"# 3. '+' 연산자로 두 개의 리스트를 병합"}]},{type:a,value:G},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:aX}]},{type:a,value:" letters "},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:V}]},{type:a,value:" digits\n"}]}]}]},{type:a,value:f}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:I,props:{id:an},children:[{type:b,tag:o,props:{href:"#%EB%B0%B0%EC%9A%B4-%EC%A0%90",ariaHidden:t,tabIndex:u},children:[{type:b,tag:c,props:{className:[v,w]},children:[]}]},{type:a,value:ao}]},{type:a,value:f},{type:b,tag:ab,props:{id:ap},children:[{type:b,tag:o,props:{href:"#%EB%AC%B8%EC%9E%90%EC%97%B4%EC%9D%B4-%EC%88%AB%EC%9E%90%EB%A1%9C-%EC%9D%B4%EB%A3%A8%EC%96%B4%EC%A0%B8-%EC%9E%88%EB%8A%94%EC%A7%80-%ED%8C%90%EB%B3%84%ED%95%98%EB%8A%94-%ED%95%A8%EC%88%98",ariaHidden:t,tabIndex:u},children:[{type:b,tag:c,props:{className:[v,w]},children:[]}]},{type:a,value:aq}]},{type:a,value:f},{type:b,tag:W,props:{},children:[{type:a,value:f},{type:b,tag:r,props:{},children:[{type:b,tag:j,props:{},children:[{type:a,value:a_}]},{type:a,value:ac},{type:b,tag:j,props:{},children:[{type:a,value:K}]},{type:a,value:a$},{type:b,tag:j,props:{},children:[{type:a,value:ba}]},{type:a,value:"로만 이루어진, "},{type:b,tag:j,props:{},children:[{type:a,value:"int"}]},{type:a,value:"로 변환 가능한 숫자 문자인지 판단하는 함수"}]},{type:a,value:f},{type:b,tag:r,props:{},children:[{type:b,tag:j,props:{},children:[{type:a,value:ad}]},{type:a,value:ac},{type:b,tag:j,props:{},children:[{type:a,value:K}]},{type:a,value:a$},{type:b,tag:j,props:{},children:[{type:a,value:ba}]},{type:a,value:" 뿐만 아니라, "},{type:b,tag:j,props:{},children:[{type:a,value:"²"}]},{type:a,value:"나 "},{type:b,tag:j,props:{},children:[{type:a,value:"₃"}]},{type:a,value:"같이 "},{type:b,tag:"strong",props:{},children:[{type:a,value:"숫자처럼 생긴"}]},{type:a,value:" 글자의 여부를 판단하는 함수"}]},{type:a,value:f},{type:b,tag:r,props:{},children:[{type:b,tag:j,props:{},children:[{type:a,value:bb}]},{type:a,value:ac},{type:b,tag:j,props:{},children:[{type:a,value:ad}]},{type:a,value:"보다 넓은 의미로, "},{type:b,tag:j,props:{},children:[{type:a,value:"½"}]},{type:a,value:"과 같이 숫자값 표현에 해당하는 텍스트인지 판단하는 함수"}]},{type:a,value:f},{type:b,tag:r,props:{},children:[{type:a,value:"즉, "},{type:b,tag:j,props:{},children:[{type:a,value:a_}]},{type:a,value:bc},{type:b,tag:j,props:{},children:[{type:a,value:ad}]},{type:a,value:bc},{type:b,tag:j,props:{},children:[{type:a,value:bb}]},{type:a,value:" 순으로 범위가 넓어진다고 보면 된다."}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:ab,props:{id:N},children:[{type:b,tag:o,props:{href:"#%EA%B8%B0%ED%83%80",ariaHidden:t,tabIndex:u},children:[{type:b,tag:c,props:{className:[v,w]},children:[]}]},{type:a,value:N}]},{type:a,value:f},{type:b,tag:W,props:{},children:[{type:a,value:f},{type:b,tag:r,props:{},children:[{type:a,value:"람다 표현식에 들어가는 튜플은 첫 번째 요소부터 비교, 해당 요소가 같으면 다음 요소를 비교하는 방식으로 동작한다."}]},{type:a,value:f},{type:b,tag:r,props:{},children:[{type:a,value:"리스트 간에도 "},{type:b,tag:j,props:{},children:[{type:a,value:V}]},{type:a,value:" 연산자를 사용하여 두 리스트를 병합할 수 있다."}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:I,props:{id:O},children:[{type:b,tag:o,props:{href:"#%EC%B6%9C%EC%B2%98",ariaHidden:t,tabIndex:u},children:[{type:b,tag:c,props:{className:[v,w]},children:[]}]},{type:a,value:O}]},{type:a,value:f},{type:b,tag:W,props:{},children:[{type:a,value:f},{type:b,tag:r,props:{},children:[{type:a,value:"박상길, 『파이썬 알고리즘 인터뷰』, 책만(2020), p148-150.\n"},{type:b,tag:W,props:{},children:[{type:a,value:f},{type:b,tag:r,props:{},children:[{type:b,tag:o,props:{href:"https:\u002F\u002Fwww.onlybook.co.kr\u002Fentry\u002Falgorithm-interview",rel:[B,C,D],target:E},children:[{type:a,value:"도서 정보"}]}]},{type:a,value:f},{type:b,tag:r,props:{},children:[{type:b,tag:o,props:{href:"https:\u002F\u002Fgithub.com\u002Fonlybooks\u002Falgorithm-interview",rel:[B,C,D],target:E},children:[{type:a,value:"GitHub"}]}]},{type:a,value:f}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:r,props:{},children:[{type:b,tag:o,props:{href:bd,rel:[B,C,D],target:E},children:[{type:a,value:bd}]}]},{type:a,value:f},{type:b,tag:r,props:{},children:[{type:b,tag:o,props:{href:be,rel:[B,C,D],target:E},children:[{type:a,value:be}]}]},{type:a,value:f},{type:b,tag:r,props:{},children:[{type:b,tag:o,props:{href:bf,rel:[B,C,D],target:E},children:[{type:a,value:bf}]}]},{type:a,value:f}]}]},text:"\n## 문제 링크\n\nhttps:\u002F\u002Fleetcode.com\u002Fproblems\u002Freorder-data-in-log-files\u002F\n\n## 나의 풀이\n\n\u003Cdetails\u003E\n\u003Csummary\u003E소스 코드\u003C\u002Fsummary\u003E\n\u003Cdiv markdown=\"1\"\u003E\n\n```python\nfrom typing import List\n\n\nclass Solution:\n    def my_solution(self, logs: List[str]) -\u003E List[str]:\n        let, dig = [], []\n        for log in logs:\n            if log[-1].isnumeric():\n                dig.append(log)\n            else:\n                splitted = log.split()\n                words = (splitted[0], ' '.join(splitted[1:]))\n                let.append(words)\n                let.sort(key=lambda x: (x[1], x[0]))\n\n        result = list(map(lambda x: ' '.join(x), let))\n        return result + dig\n```\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdetails\u003E\n\n## 문제 풀이\n\n### 람다와 `+` 연산자를 사용하는 방법\n\n\u003Cdetails\u003E\n\u003Csummary\u003E소스 코드\u003C\u002Fsummary\u003E\n\u003Cdiv markdown=\"1\"\u003E\n\n```python\nfrom typing import List\n\n\nclass Solution:\n    def solution1(self, logs: List[str]) -\u003E List[str]:\n        letters, digits = [], []\n        for log in logs:\n            # 1. 문자와 숫자 구분\n            if log.split()[1].isdigit():\n                digits.append(log)\n            else:\n                letters.append(log)\n\n        # 2. 2개의 키를 람다 표현식으로 정렬\n        # 튜플의 첫 번째 요소를 기준으로 정렬 수행,\n        # 값이 같을 경우 두 번째 요소를 기준으로 정렬 수행\n        letters.sort(key=lambda x: (x.split()[1:], x.split()[0]))\n\n        # 3. '+' 연산자로 두 개의 리스트를 병합\n        return letters + digits\n```\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdetails\u003E\n\n## 배운 점\n\n### 문자열이 숫자로 이루어져 있는지 판별하는 함수\n\n- `isdecimal()`: `0` ~ `9`로만 이루어진, `int`로 변환 가능한 숫자 문자인지 판단하는 함수\n- `isdigit()`: `0` ~ `9` 뿐만 아니라, `²`나 `₃`같이 **숫자처럼 생긴** 글자의 여부를 판단하는 함수\n- `isnumeric()`: `isdigit()`보다 넓은 의미로, `½`과 같이 숫자값 표현에 해당하는 텍스트인지 판단하는 함수\n- 즉, `isdecimal()` -\u003E `isdigit()` -\u003E `isnumeric()` 순으로 범위가 넓어진다고 보면 된다.\n\n### 기타\n\n- 람다 표현식에 들어가는 튜플은 첫 번째 요소부터 비교, 해당 요소가 같으면 다음 요소를 비교하는 방식으로 동작한다.\n- 리스트 간에도 `+` 연산자를 사용하여 두 리스트를 병합할 수 있다.\n\n## 출처\n\n- 박상길, 『파이썬 알고리즘 인터뷰』, 책만(2020), p148-150.\n  - [도서 정보](https:\u002F\u002Fwww.onlybook.co.kr\u002Fentry\u002Falgorithm-interview)\n  - [GitHub](https:\u002F\u002Fgithub.com\u002Fonlybooks\u002Falgorithm-interview)\n- https:\u002F\u002Fsoooprmx.com\u002F%ed%8c%8c%ec%9d%b4%ec%8d%ac%ec%9d%98-%ec%88%ab%ec%9e%90%ed%8c%90%eb%b3%84%ed%95%a8%ec%88%98\u002F\n- https:\u002F\u002Fwww.learnbyexample.org\u002Fpython-string-isdecimal-method\u002F\n- https:\u002F\u002Fit-neicebee.tistory.com\u002F33\n",dir:"\u002Fposts\u002F2021\u002F04\u002F23",path:"\u002Fposts\u002F2021\u002F04\u002F23\u002Fleetcode-937",extension:".md",createdAt:"2021-04-22T17:36:46.000Z",updatedAt:"2022-06-26T10:01:49.000Z"},isErrorPage:A,isDarkMode:A,isScrolled:A,isMobile:A,isTablet:A,hasHeaderImage:ae,isMobileMenuOpened:A,headerImage:"",perPage:10},serverRendered:ae,routePath:"\u002Fposts\u002Fleetcode-937",config:{_app:{basePath:"\u002F",assetsPath:"\u002F_nuxt\u002F",cdnURL:af},content:{dbHash:"62bf0087"}},colorMode:{preference:bg,value:bg,unknown:ae,forced:A}}}("text","element","span","token","punctuation","\n","keyword","(",")","code",":"," ","[","]","a","operator",".","li",",","true",-1,"icon","icon-link","number","1","=",false,"nofollow","noopener","noreferrer","_blank","builtin","\n        ",2,"h2","\n            ","0"," x","comment","기타","출처","div"," logs"," List","str","append","split","+","ul",3,"-"," log","log","lambda","x","h3",": ","isdigit()",true,null,"문제-링크","문제 링크","나의-풀이","나의 풀이","문제-풀이","문제 풀이","람다와--연산자를-사용하는-방법","배운-점","배운 점","문자열이-숫자로-이루어져-있는지-판별하는-함수","문자열이 숫자로 이루어져 있는지 판별하는 함수","https:\u002F\u002Fleetcode.com\u002Fproblems\u002Freorder-data-in-log-files\u002F","details","summary","소스 코드","nuxt-content-highlight","pre","language-python","line-numbers","from"," typing ","import"," List\n\n\n","class","class-name","Solution","\n    ","def","function","self","\u003E","for"," log ","in","if","else","splitted","string","' '","join","\n                let","sort","key","return","\n        letters","\n\n        ","isdecimal()"," ~ ","9","isnumeric()"," -\u003E ","https:\u002F\u002Fsoooprmx.com\u002F%ed%8c%8c%ec%9d%b4%ec%8d%ac%ec%9d%98-%ec%88%ab%ec%9e%90%ed%8c%90%eb%b3%84%ed%95%a8%ec%88%98\u002F","https:\u002F\u002Fwww.learnbyexample.org\u002Fpython-string-isdecimal-method\u002F","https:\u002F\u002Fit-neicebee.tistory.com\u002F33","system"));