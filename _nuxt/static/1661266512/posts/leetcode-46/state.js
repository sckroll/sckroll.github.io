window.__NUXT__=(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au,av,aw,ax,ay,az,aA,aB,aC,aD,aE,aF,aG,aH,aI,aJ,aK,aL,aM,aN,aO,aP,aQ,aR,aS,aT,aU){return {staticAssetsBase:"\u002F_nuxt\u002Fstatic\u002F1661266512",layout:"default",error:as,state:{post:{slug:"leetcode-46",description:"Permutations",title:"LeetCode 46번 문제",tags:"algorithm, leetcode, python, dfs",toc:[{id:at,depth:E,text:au},{id:av,depth:E,text:aw},{id:ax,depth:E,text:ay},{id:az,depth:Q,text:aA},{id:aB,depth:Q,text:"2. itertools 모듈 사용"},{id:aC,depth:E,text:aD},{id:aE,depth:Q,text:aF},{id:J,depth:E,text:J}],body:{type:"root",children:[{type:b,tag:F,props:{id:at},children:[{type:b,tag:p,props:{href:"#%EB%AC%B8%EC%A0%9C-%EB%A7%81%ED%81%AC",ariaHidden:s,tabIndex:t},children:[{type:b,tag:c,props:{className:[u,v]},children:[]}]},{type:a,value:au}]},{type:a,value:f},{type:b,tag:"p",props:{},children:[{type:b,tag:p,props:{href:aG,rel:[R,S,T],target:U},children:[{type:a,value:aG}]}]},{type:a,value:f},{type:b,tag:F,props:{id:av},children:[{type:b,tag:p,props:{href:"#%EB%82%98%EC%9D%98-%ED%92%80%EC%9D%B4",ariaHidden:s,tabIndex:t},children:[{type:b,tag:c,props:{className:[u,v]},children:[]}]},{type:a,value:aw}]},{type:a,value:f},{type:b,tag:V,props:{},children:[{type:a,value:f},{type:b,tag:W,props:{},children:[{type:a,value:X}]},{type:a,value:f},{type:b,tag:z,props:{markdown:Y},children:[{type:a,value:f},{type:b,tag:z,props:{className:[Z]},children:[{type:b,tag:_,props:{className:[$,aa]},children:[{type:b,tag:q,props:{},children:[{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:ab}]},{type:a,value:ac},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:K}]},{type:a,value:aH},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:ad}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,ae]},children:[{type:a,value:"Solution"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:af},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:G}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,H]},children:[{type:a,value:ag}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:ah},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:L}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:A},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:ai}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:aj}]},{type:a,value:A},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:ak},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:C},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:G}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,H]},children:[{type:a,value:aI}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:al},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:D}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"# 예외 처리"}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:am}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:an}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:al},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:aJ}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:an}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:ao},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:"\n                result"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:N},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:al},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:aK},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:O}]},{type:a,value:aL},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:aM}]},{type:a,value:aN},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:ap}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:aK},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:am}]},{type:a,value:aN},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:"not"}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:ap}]},{type:a,value:aO},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:"\n                    "},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"# 리스트 복사 후 요소를 추가하여 재귀 수행"}]},{type:a,value:"\n                    new_nums "},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:D}]},{type:a,value:aO},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:"\n                    new_nums"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:N},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:"num"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:"\n                    dfs"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:"new_nums"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:"\n\n        result "},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:D}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:"\n        dfs"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:C},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:O}]},{type:a,value:" result\n"}]}]}]},{type:a,value:f}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:F,props:{id:ax},children:[{type:b,tag:p,props:{href:"#%EB%AC%B8%EC%A0%9C-%ED%92%80%EC%9D%B4",ariaHidden:s,tabIndex:t},children:[{type:b,tag:c,props:{className:[u,v]},children:[]}]},{type:a,value:ay}]},{type:a,value:f},{type:b,tag:aq,props:{id:az},children:[{type:b,tag:p,props:{href:"#1-dfs%EB%A5%BC-%ED%99%9C%EC%9A%A9%ED%95%9C-%EC%88%9C%EC%97%B4-%EC%83%9D%EC%84%B1",ariaHidden:s,tabIndex:t},children:[{type:b,tag:c,props:{className:[u,v]},children:[]}]},{type:a,value:aA}]},{type:a,value:f},{type:b,tag:P,props:{},children:[{type:a,value:f},{type:b,tag:r,props:{},children:[{type:a,value:"위의 풀이와 마찬가지로 주의할 점은 리스트에 결과를 추가할 때 리스트를 복사("},{type:b,tag:q,props:{},children:[{type:a,value:aP}]},{type:a,value:")하여 추가해야 한다."}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:V,props:{},children:[{type:a,value:f},{type:b,tag:W,props:{},children:[{type:a,value:X}]},{type:a,value:f},{type:b,tag:z,props:{markdown:Y},children:[{type:a,value:f},{type:b,tag:z,props:{className:[Z]},children:[{type:b,tag:_,props:{className:[$,aa]},children:[{type:b,tag:q,props:{},children:[{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:ab}]},{type:a,value:ac},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:K}]},{type:a,value:aH},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:ad}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,ae]},children:[{type:a,value:"Solution1"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:af},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:G}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,H]},children:[{type:a,value:ag}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:ah},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:L}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:A},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:ai}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:aj}]},{type:a,value:A},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:ak},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:"\n        results "},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:D}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:"\n        prev_elements "},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:D}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:"\n\n        "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:G}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,H]},children:[{type:a,value:aI}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aQ},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"# 리프 노드일 때 결과 추가"}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:am}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:an}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aQ},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:aJ}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,"number"]},children:[{type:a,value:"0"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:"\n                results"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:N},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:"prev_elements"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:aL},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"# 순열 생성 재귀 호출"}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:aM}]},{type:a,value:" e "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:ap}]},{type:a,value:aR},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:"\n                next_elements "},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:D}]},{type:a,value:aR},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:"\n                next_elements"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:"remove"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aS},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:"\n\n                prev_elements"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:N},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aS},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:"\n                dfs"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:"next_elements"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:"\n                prev_elements"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:"pop"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:"\n\n        dfs"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:ao},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:C},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:O}]},{type:a,value:" results\n"}]}]}]},{type:a,value:f}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:aq,props:{id:aB},children:[{type:b,tag:p,props:{href:"#2-itertools-%EB%AA%A8%EB%93%88-%EC%82%AC%EC%9A%A9",ariaHidden:s,tabIndex:t},children:[{type:b,tag:c,props:{className:[u,v]},children:[]}]},{type:a,value:"2. "},{type:b,tag:q,props:{},children:[{type:a,value:"itertools"}]},{type:a,value:" 모듈 사용"}]},{type:a,value:f},{type:b,tag:V,props:{},children:[{type:a,value:f},{type:b,tag:W,props:{},children:[{type:a,value:X}]},{type:a,value:f},{type:b,tag:z,props:{markdown:Y},children:[{type:a,value:f},{type:b,tag:z,props:{className:[Z]},children:[{type:b,tag:_,props:{className:[$,aa]},children:[{type:b,tag:q,props:{},children:[{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:ab}]},{type:a,value:ac},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:K}]},{type:a,value:" List\n"},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:K}]},{type:a,value:" itertools\n\n\n"},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:ad}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,ae]},children:[{type:a,value:"Solution2"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:af},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:G}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,H]},children:[{type:a,value:ag}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:ah},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:L}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:A},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:ai}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:aj}]},{type:a,value:A},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:ak},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:C},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"# 리트코드에서는 리스트 반환 문제도 튜플로 반환하면 정답으로 처리되므로"}]},{type:a,value:C},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"# 아래와 같이 작성해도 문제는 없음"}]},{type:a,value:C},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"# return list(itertools.permutations(nums))"}]},{type:a,value:"\n        \n        "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:O}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:aT}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:"map"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:aT}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:L}]},{type:a,value:" itertools"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:"permutations"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:ao},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f}]}]}]},{type:a,value:f}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:F,props:{id:aC},children:[{type:b,tag:p,props:{href:"#%EB%B0%B0%EC%9A%B4-%EC%A0%90",ariaHidden:s,tabIndex:t},children:[{type:b,tag:c,props:{className:[u,v]},children:[]}]},{type:a,value:aD}]},{type:a,value:f},{type:b,tag:aq,props:{id:aE},children:[{type:b,tag:p,props:{href:"#%EA%B0%9D%EC%B2%B4-%EB%B3%B5%EC%82%AC-%EB%B0%A9%EB%B2%95",ariaHidden:s,tabIndex:t},children:[{type:b,tag:c,props:{className:[u,v]},children:[]}]},{type:a,value:aF}]},{type:a,value:f},{type:b,tag:"ol",props:{},children:[{type:a,value:f},{type:b,tag:r,props:{},children:[{type:b,tag:q,props:{},children:[{type:a,value:aP}]},{type:a,value:" 사용"}]},{type:a,value:f},{type:b,tag:r,props:{},children:[{type:b,tag:q,props:{},children:[{type:a,value:"copy()"}]},{type:a,value:" 메소드 사용"}]},{type:a,value:f},{type:b,tag:r,props:{},children:[{type:b,tag:q,props:{},children:[{type:a,value:"copy.deepcopy()"}]},{type:a,value:" 메소드 사용\n"},{type:b,tag:P,props:{},children:[{type:a,value:f},{type:b,tag:r,props:{},children:[{type:a,value:"중첩된 리스트와 같이 복잡한 리스트도 복사할 수 있다. (깊은 복사)"}]},{type:a,value:f},{type:b,tag:r,props:{},children:[{type:b,tag:q,props:{},children:[{type:a,value:"copy"}]},{type:a,value:" 모듈을 임포트한 후 사용할 수 있다."}]},{type:a,value:f}]},{type:a,value:f}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:F,props:{id:J},children:[{type:b,tag:p,props:{href:"#%EC%B6%9C%EC%B2%98",ariaHidden:s,tabIndex:t},children:[{type:b,tag:c,props:{className:[u,v]},children:[]}]},{type:a,value:J}]},{type:a,value:f},{type:b,tag:P,props:{},children:[{type:a,value:f},{type:b,tag:r,props:{},children:[{type:a,value:"박상길, 『파이썬 알고리즘 인터뷰』, 책만(2020), p341-345.\n"},{type:b,tag:P,props:{},children:[{type:a,value:f},{type:b,tag:r,props:{},children:[{type:b,tag:p,props:{href:"https:\u002F\u002Fwww.onlybook.co.kr\u002Fentry\u002Falgorithm-interview",rel:[R,S,T],target:U},children:[{type:a,value:"도서 정보"}]}]},{type:a,value:f},{type:b,tag:r,props:{},children:[{type:b,tag:p,props:{href:"https:\u002F\u002Fgithub.com\u002Fonlybooks\u002Falgorithm-interview",rel:[R,S,T],target:U},children:[{type:a,value:"GitHub"}]}]},{type:a,value:f}]},{type:a,value:f}]},{type:a,value:f}]}]},text:"\n## 문제 링크\n\nhttps:\u002F\u002Fleetcode.com\u002Fproblems\u002Fpermutations\u002F\n\n## 나의 풀이\n\n\u003Cdetails\u003E\n\u003Csummary\u003E소스 코드\u003C\u002Fsummary\u003E\n\u003Cdiv markdown=\"1\"\u003E\n\n```python\nfrom typing import List\n\n\nclass Solution:\n    def permute(self, nums: List[int]) -\u003E List[List[int]]:\n        def dfs(curr=[]):\n            # 예외 처리\n            if len(curr) == len(nums):\n                result.append(curr)\n                return\n\n            for num in nums:\n                if num not in curr:\n                    # 리스트 복사 후 요소를 추가하여 재귀 수행\n                    new_nums = curr[:]\n                    new_nums.append(num)\n                    dfs(new_nums)\n\n        result = []\n        dfs()\n        return result\n```\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdetails\u003E\n\n## 문제 풀이\n\n### 1. DFS를 활용한 순열 생성\n\n- 위의 풀이와 마찬가지로 주의할 점은 리스트에 결과를 추가할 때 리스트를 복사(`[:]`)하여 추가해야 한다.\n\n\u003Cdetails\u003E\n\u003Csummary\u003E소스 코드\u003C\u002Fsummary\u003E\n\u003Cdiv markdown=\"1\"\u003E\n\n```python\nfrom typing import List\n\n\nclass Solution1:\n    def permute(self, nums: List[int]) -\u003E List[List[int]]:\n        results = []\n        prev_elements = []\n\n        def dfs(elements):\n            # 리프 노드일 때 결과 추가\n            if len(elements) == 0:\n                results.append(prev_elements[:])\n\n            # 순열 생성 재귀 호출\n            for e in elements:\n                next_elements = elements[:]\n                next_elements.remove(e)\n\n                prev_elements.append(e)\n                dfs(next_elements)\n                prev_elements.pop()\n\n        dfs(nums)\n        return results\n```\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdetails\u003E\n\n### 2. `itertools` 모듈 사용\n\n\u003Cdetails\u003E\n\u003Csummary\u003E소스 코드\u003C\u002Fsummary\u003E\n\u003Cdiv markdown=\"1\"\u003E\n\n```python\nfrom typing import List\nimport itertools\n\n\nclass Solution2:\n    def permute(self, nums: List[int]) -\u003E List[List[int]]:\n        # 리트코드에서는 리스트 반환 문제도 튜플로 반환하면 정답으로 처리되므로\n        # 아래와 같이 작성해도 문제는 없음\n        # return list(itertools.permutations(nums))\n        \n        return list(map(list, itertools.permutations(nums)))\n```\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdetails\u003E\n\n## 배운 점\n\n### 객체 복사 방법\n\n1. `[:]` 사용\n2. `copy()` 메소드 사용\n3. `copy.deepcopy()` 메소드 사용\n   - 중첩된 리스트와 같이 복잡한 리스트도 복사할 수 있다. (깊은 복사)\n   - `copy` 모듈을 임포트한 후 사용할 수 있다.\n\n## 출처\n\n- 박상길, 『파이썬 알고리즘 인터뷰』, 책만(2020), p341-345.\n  - [도서 정보](https:\u002F\u002Fwww.onlybook.co.kr\u002Fentry\u002Falgorithm-interview)\n  - [GitHub](https:\u002F\u002Fgithub.com\u002Fonlybooks\u002Falgorithm-interview)\n",dir:"\u002Fposts\u002F2021\u002F05\u002F29",path:"\u002Fposts\u002F2021\u002F05\u002F29\u002Fleetcode-46",extension:".md",createdAt:"2021-05-28T17:13:57.000Z",updatedAt:"2022-06-26T10:01:49.000Z"},isErrorPage:y,isDarkMode:y,isScrolled:y,isMobile:y,isTablet:y,hasHeaderImage:ar,isMobileMenuOpened:y,headerImage:"",perPage:10},serverRendered:ar,routePath:"\u002Fposts\u002Fleetcode-46",config:{_app:{basePath:"\u002F",assetsPath:"\u002F_nuxt\u002F",cdnURL:as},content:{dbHash:"952803c0"}},colorMode:{preference:aU,value:aU,unknown:ar,forced:y}}}("text","element","span","token","punctuation","\n","keyword"," ","(",")",":","[","]","operator","builtin","a","code","li","true",-1,"icon","icon-link","comment",".",false,"div"," List","int","\n        ","=",2,"h2","def","function","\n            ","출처","import",","," nums","append","return","ul",3,"nofollow","noopener","noreferrer","_blank","details","summary","소스 코드","1","nuxt-content-highlight","pre","language-python","line-numbers","from"," typing ","class","class-name","\n    ","permute","self","-","\u003E","List","curr","if","len","nums","in","h3",true,null,"문제-링크","문제 링크","나의-풀이","나의 풀이","문제-풀이","문제 풀이","1-dfs를-활용한-순열-생성","1. DFS를 활용한 순열 생성","2-itertools-모듈-사용","배운-점","배운 점","객체-복사-방법","객체 복사 방법","https:\u002F\u002Fleetcode.com\u002Fproblems\u002Fpermutations\u002F"," List\n\n\n","dfs","==","\n                ","\n\n            ","for"," num "," curr","[:]","elements"," elements","e","list","system"));