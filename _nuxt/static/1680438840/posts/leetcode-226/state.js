window.__NUXT__=(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au,av,aw,ax,ay,az,aA,aB,aC,aD,aE,aF,aG,aH,aI,aJ,aK,aL,aM,aN,aO,aP,aQ,aR,aS,aT,aU,aV,aW,aX,aY,aZ,a_,a$,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by){return {staticAssetsBase:"\u002F_nuxt\u002Fstatic\u002F1680438840",layout:"default",error:aX,state:{post:{slug:"leetcode-226",description:"Invert Binary Tree",title:"LeetCode 226번 문제",tags:"algorithm, leetcode, python, tree, dfs, bfs",toc:[{id:aY,depth:az,text:aZ},{id:a_,depth:az,text:a$},{id:ba,depth:az,text:bb},{id:bc,depth:aA,text:bd},{id:be,depth:aA,text:bf},{id:bg,depth:aA,text:bh},{id:bi,depth:aA,text:bj},{id:aB,depth:az,text:aB}],body:{type:I,children:[{type:b,tag:aC,props:{id:aY},children:[{type:b,tag:w,props:{href:"#%EB%AC%B8%EC%A0%9C-%EB%A7%81%ED%81%AC",ariaHidden:J,tabIndex:K},children:[{type:b,tag:c,props:{className:[L,M]},children:[]}]},{type:a,value:aZ}]},{type:a,value:h},{type:b,tag:"p",props:{},children:[{type:b,tag:w,props:{href:bk,rel:[aN,aO,aP],target:aQ},children:[{type:a,value:bk}]}]},{type:a,value:h},{type:b,tag:aC,props:{id:a_},children:[{type:b,tag:w,props:{href:"#%EB%82%98%EC%9D%98-%ED%92%80%EC%9D%B4-%ED%92%80%EC%9D%B4-%EC%8B%A4%ED%8C%A8",ariaHidden:J,tabIndex:K},children:[{type:b,tag:c,props:{className:[L,M]},children:[]}]},{type:a,value:a$}]},{type:a,value:h},{type:b,tag:V,props:{},children:[{type:a,value:h},{type:b,tag:N,props:{},children:[{type:a,value:"포화 이진 트리일 때 뒤집는 데 성공했지만, 그 외의 트리에는 적용하지 못했다. 너무 오랜만에 풀어서 그런가, 머리가 잘 돌아가지 않는 느낌..."}]},{type:a,value:h}]},{type:a,value:h},{type:b,tag:$,props:{},children:[{type:a,value:h},{type:b,tag:aa,props:{},children:[{type:a,value:ab}]},{type:a,value:h},{type:b,tag:y,props:{markdown:P},children:[{type:a,value:h},{type:b,tag:y,props:{className:[ac]},children:[{type:b,tag:ad,props:{className:[ae,af]},children:[{type:b,tag:ag,props:{},children:[{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:ah}]},{type:a,value:ai},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:W}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:bl},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:" Deque\n"},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:W}]},{type:a,value:" collections\n\n\n"},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:z}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:r}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:C}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:aj}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:E},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:ak},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,O]},children:[{type:a,value:al}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:am},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:an},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:ao},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:j}]},{type:a,value:ap},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:aq},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:j}]},{type:a,value:ar},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:G},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:j}]},{type:a,value:as},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:z}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:"MySolution1"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:C}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:Q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:E},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:R},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:r},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:Y}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:at}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:r},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:"\n        values"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:bm},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,aD]},children:[{type:a,value:aR}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:j}]},{type:a,value:au},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:av},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:"\n        val_queue"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:bl},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,aD]},children:[{type:a,value:aR}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:j}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:"\n        node_queue"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:bm},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:r},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:j}]},{type:a,value:au},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:av},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:"\n        i"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,aD]},children:[{type:a,value:aR}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:j}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,O]},children:[{type:a,value:P}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:aw}]},{type:a,value:aE},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:bn},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:j}]},{type:a,value:aE},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:aF},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:ax},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:T}]},{type:a,value:bo},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:bp}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:bq}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:aG},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:ay},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:F},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:aG},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:ay},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:H},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:br},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:ay},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:"val"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:aH},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:T}]},{type:a,value:" i "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:"=="}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,aD]},children:[{type:a,value:"len"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:bs},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:"\n                values"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:"extend"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:bs},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:Y}]},{type:b,tag:c,props:{className:[d,O]},children:[{type:a,value:P}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:br},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:"clear"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:"\n                i "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:"*="}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,O]},children:[{type:a,value:"2"}]},{type:a,value:"\n\n        node_queue"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:aS},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:aw}]},{type:a,value:aE},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:bn},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:j}]},{type:a,value:aE},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:aF},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:ax},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:T}]},{type:a,value:bo},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:bp}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:bq}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:aG},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:ay},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:F},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:aG},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:ay},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:H},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:"\n                curr_node"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:j}]},{type:a,value:" values"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:aF},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:Z}]},{type:a,value:aI}]}]}]},{type:a,value:h}]},{type:a,value:h}]},{type:a,value:h},{type:b,tag:aC,props:{id:ba},children:[{type:b,tag:w,props:{href:"#%EB%AC%B8%EC%A0%9C-%ED%92%80%EC%9D%B4",ariaHidden:J,tabIndex:K},children:[{type:b,tag:c,props:{className:[L,M]},children:[]}]},{type:a,value:bb}]},{type:a,value:h},{type:b,tag:aJ,props:{id:bc},children:[{type:b,tag:w,props:{href:"#1-%ED%8C%8C%EC%9D%B4%EC%8D%AC%EB%8B%A4%EC%9A%B4-%EB%B0%A9%EC%8B%9D-bottom-up",ariaHidden:J,tabIndex:K},children:[{type:b,tag:c,props:{className:[L,M]},children:[]}]},{type:a,value:bd}]},{type:a,value:h},{type:b,tag:V,props:{},children:[{type:a,value:h},{type:b,tag:N,props:{},children:[{type:a,value:"트리의 우측 하단부터 재귀를 시도하며(실제로는 자식 노드인 None부터 시작), 부모 노드가 스왑될 땐 자식 노드들도 따라오는 점을 기억하자."}]},{type:a,value:h},{type:b,tag:N,props:{},children:[{type:a,value:"즉, 2의 자식 노드가 3과 1이고 7의 자식 노드가 9와 6일 때, 스왑되고 난 뒤에 7의 자식 노드가 3과 1이 되는 일은 없다는 의미다."}]},{type:a,value:h}]},{type:a,value:h},{type:b,tag:$,props:{},children:[{type:a,value:h},{type:b,tag:aa,props:{},children:[{type:a,value:ab}]},{type:a,value:h},{type:b,tag:y,props:{markdown:P},children:[{type:a,value:h},{type:b,tag:y,props:{className:[ac]},children:[{type:b,tag:ad,props:{className:[ae,af]},children:[{type:b,tag:ag,props:{},children:[{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:ah}]},{type:a,value:ai},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:W}]},{type:a,value:aK},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:z}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:r}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:C}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:aj}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:E},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:ak},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,O]},children:[{type:a,value:al}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:am},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:an},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:ao},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:j}]},{type:a,value:ap},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:aq},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:j}]},{type:a,value:ar},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:G},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:j}]},{type:a,value:as},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:z}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:"Solution1"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:C}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:Q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:E},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:R},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:r},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:Y}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:at}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:r},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:aS},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:T}]},{type:a,value:R},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:"\n            root"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:F},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:R},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:G},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:j}]},{type:a,value:bt},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:H},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:bt},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:F},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:ax},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:Z}]},{type:a,value:" root\n        "},{type:b,tag:c,props:{className:[d,aL]},children:[{type:a,value:"# 파이썬에서는 아무 것도 리턴하지 않으면 암묵적으로 None을 리턴하기 때문에 아래 코드는 생략할 수 있다."}]},{type:a,value:aS},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:Z}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:t}]},{type:a,value:h}]}]}]},{type:a,value:h}]},{type:a,value:h}]},{type:a,value:h},{type:b,tag:aJ,props:{id:be},children:[{type:b,tag:w,props:{href:"#2-%EB%B0%98%EB%B3%B5-%EA%B5%AC%EC%A1%B0%EB%A1%9C-bfs-top-down",ariaHidden:J,tabIndex:K},children:[{type:b,tag:c,props:{className:[L,M]},children:[]}]},{type:a,value:bf}]},{type:a,value:h},{type:b,tag:$,props:{},children:[{type:a,value:h},{type:b,tag:aa,props:{},children:[{type:a,value:ab}]},{type:a,value:h},{type:b,tag:y,props:{markdown:P},children:[{type:a,value:h},{type:b,tag:y,props:{className:[ac]},children:[{type:b,tag:ad,props:{className:[ae,af]},children:[{type:b,tag:ag,props:{},children:[{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:ah}]},{type:a,value:ai},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:W}]},{type:a,value:aK},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:z}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:r}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:C}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:aj}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:E},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:ak},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,O]},children:[{type:a,value:al}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:am},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:an},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:ao},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:j}]},{type:a,value:ap},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:aq},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:j}]},{type:a,value:ar},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:G},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:j}]},{type:a,value:as},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:z}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:"Solution2"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:C}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:Q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:E},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:R},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:r},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:Y}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:at}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:r},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:"\n        queue "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:j}]},{type:a,value:au},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:av},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:aw}]},{type:a,value:bu},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:aT},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:j}]},{type:a,value:bu},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:aF},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:aH},{type:b,tag:c,props:{className:[d,aL]},children:[{type:a,value:bv}]},{type:a,value:ax},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:T}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:aU},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:F},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:G},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:j}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:H},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:"left\n\n                queue"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:_},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:F},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:"\n                queue"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:_},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:H},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:Z}]},{type:a,value:aI}]}]}]},{type:a,value:h}]},{type:a,value:h}]},{type:a,value:h},{type:b,tag:aJ,props:{id:bg},children:[{type:b,tag:w,props:{href:"#3-%EB%B0%98%EB%B3%B5-%EA%B5%AC%EC%A1%B0%EB%A1%9C-dfs",ariaHidden:J,tabIndex:K},children:[{type:b,tag:c,props:{className:[L,M]},children:[]}]},{type:a,value:bh}]},{type:a,value:h},{type:b,tag:V,props:{},children:[{type:a,value:h},{type:b,tag:N,props:{},children:[{type:a,value:"풀이 2번에서 큐(Deque) 대신에 스택을 사용하면 된다."}]},{type:a,value:h}]},{type:a,value:h},{type:b,tag:$,props:{},children:[{type:a,value:h},{type:b,tag:aa,props:{},children:[{type:a,value:ab}]},{type:a,value:h},{type:b,tag:y,props:{markdown:P},children:[{type:a,value:h},{type:b,tag:y,props:{className:[ac]},children:[{type:b,tag:ad,props:{className:[ae,af]},children:[{type:b,tag:ag,props:{},children:[{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:ah}]},{type:a,value:ai},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:W}]},{type:a,value:aK},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:z}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:r}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:C}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:aj}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:E},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:ak},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,O]},children:[{type:a,value:al}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:am},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:an},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:ao},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:j}]},{type:a,value:ap},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:aq},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:j}]},{type:a,value:ar},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:G},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:j}]},{type:a,value:as},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:z}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:"Solution3"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:C}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:Q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:E},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:R},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:r},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:Y}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:at}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:r},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:bw},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:j}]},{type:a,value:au},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:av},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:aw}]},{type:a,value:aM},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:aT},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:j}]},{type:a,value:aM},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:bx},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:aH},{type:b,tag:c,props:{className:[d,aL]},children:[{type:a,value:bv}]},{type:a,value:ax},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:T}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:aU},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:F},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:G},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:j}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:H},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:"left\n\n                stack"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:_},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:F},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:aV},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:_},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:H},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:Z}]},{type:a,value:aI}]}]}]},{type:a,value:h}]},{type:a,value:h}]},{type:a,value:h},{type:b,tag:aJ,props:{id:bi},children:[{type:b,tag:w,props:{href:"#4-%EB%B0%98%EB%B3%B5-%EA%B5%AC%EC%A1%B0%EB%A1%9C-dfs-%ED%9B%84%EC%9C%84-%EC%88%9C%ED%9A%8C",ariaHidden:J,tabIndex:K},children:[{type:b,tag:c,props:{className:[L,M]},children:[]}]},{type:a,value:bj}]},{type:a,value:h},{type:b,tag:V,props:{},children:[{type:a,value:h},{type:b,tag:N,props:{},children:[{type:a,value:"풀이 2번 혹은 3번에서 적용한 방식인 전위 순회 대신, 큐\u002F스택에 삽입하는 코드를 스왑하는 코드보다 먼저 실행하는 후위 순회를 사용해도 결과는 같다."}]},{type:a,value:h}]},{type:a,value:h},{type:b,tag:$,props:{},children:[{type:a,value:h},{type:b,tag:aa,props:{},children:[{type:a,value:ab}]},{type:a,value:h},{type:b,tag:y,props:{markdown:P},children:[{type:a,value:h},{type:b,tag:y,props:{className:[ac]},children:[{type:b,tag:ad,props:{className:[ae,af]},children:[{type:b,tag:ag,props:{},children:[{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:ah}]},{type:a,value:ai},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:W}]},{type:a,value:aK},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:z}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:r}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:C}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:aj}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:E},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:ak},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,O]},children:[{type:a,value:al}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:am},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:an},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:ao},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:j}]},{type:a,value:ap},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:aq},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:j}]},{type:a,value:ar},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:G},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:j}]},{type:a,value:as},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:z}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:"Solution4"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:C}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:Q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:E},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:R},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:r},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:Y}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:at}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:r},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:bw},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:j}]},{type:a,value:au},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:av},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:aw}]},{type:a,value:aM},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:aT},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:j}]},{type:a,value:aM},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:bx},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:aH},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:T}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:aV},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:_},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:F},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:aV},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:_},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:H},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:"\n                \n                "},{type:b,tag:c,props:{className:[d,aL]},children:[{type:a,value:"# 후위 순회"}]},{type:a,value:aU},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:F},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:G},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:j}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:H},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:"left\n\n        "},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:Z}]},{type:a,value:aI}]}]}]},{type:a,value:h}]},{type:a,value:h}]},{type:a,value:h},{type:b,tag:aC,props:{id:aB},children:[{type:b,tag:w,props:{href:"#%EC%B6%9C%EC%B2%98",ariaHidden:J,tabIndex:K},children:[{type:b,tag:c,props:{className:[L,M]},children:[]}]},{type:a,value:aB}]},{type:a,value:h},{type:b,tag:V,props:{},children:[{type:a,value:h},{type:b,tag:N,props:{},children:[{type:a,value:"박상길, 『파이썬 알고리즘 인터뷰』, 책만(2020), p397-403.\n"},{type:b,tag:V,props:{},children:[{type:a,value:h},{type:b,tag:N,props:{},children:[{type:b,tag:w,props:{href:"https:\u002F\u002Fwww.onlybook.co.kr\u002Fentry\u002Falgorithm-interview",rel:[aN,aO,aP],target:aQ},children:[{type:a,value:"도서 정보"}]}]},{type:a,value:h},{type:b,tag:N,props:{},children:[{type:b,tag:w,props:{href:"https:\u002F\u002Fgithub.com\u002Fonlybooks\u002Falgorithm-interview",rel:[aN,aO,aP],target:aQ},children:[{type:a,value:"GitHub"}]}]},{type:a,value:h}]},{type:a,value:h}]},{type:a,value:h}]}]},text:"\n## 문제 링크\n\nhttps:\u002F\u002Fleetcode.com\u002Fproblems\u002Finvert-binary-tree\u002F\n\n## 나의 풀이 (풀이 실패)\n\n- 포화 이진 트리일 때 뒤집는 데 성공했지만, 그 외의 트리에는 적용하지 못했다. 너무 오랜만에 풀어서 그런가, 머리가 잘 돌아가지 않는 느낌...\n\n\u003Cdetails\u003E\n\u003Csummary\u003E소스 코드\u003C\u002Fsummary\u003E\n\u003Cdiv markdown=\"1\"\u003E\n\n```python\nfrom typing import Optional, List, Deque\nimport collections\n\n\nclass TreeNode:\n    def __init__(self, val=0, left=None, right=None):\n        self.val = val\n        self.left = left\n        self.right = right\n\n\nclass MySolution1:\n    def invertTree(self, root: Optional[TreeNode]) -\u003E Optional[TreeNode]:\n        values: Deque[int] = collections.deque([])\n        val_queue: List[int] = []\n        node_queue: Deque[TreeNode] = collections.deque([root])\n        i: int = 1\n\n        while node_queue:\n            curr_node = node_queue.popleft()\n            if curr_node is not None:\n                node_queue.append(curr_node.left)\n                node_queue.append(curr_node.right)\n                val_queue.append(curr_node.val)\n\n            if i == len(val_queue):\n                values.extend(val_queue[::-1])\n                val_queue.clear()\n                i *= 2\n\n        node_queue.append(root)\n        while node_queue:\n            curr_node = node_queue.popleft()\n            if curr_node is not None:\n                node_queue.append(curr_node.left)\n                node_queue.append(curr_node.right)\n                curr_node.val = values.popleft()\n\n        return root\n```\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdetails\u003E\n\n## 문제 풀이\n\n### 1. 파이썬다운 방식 (Bottom-Up)\n\n- 트리의 우측 하단부터 재귀를 시도하며(실제로는 자식 노드인 None부터 시작), 부모 노드가 스왑될 땐 자식 노드들도 따라오는 점을 기억하자.\n- 즉, 2의 자식 노드가 3과 1이고 7의 자식 노드가 9와 6일 때, 스왑되고 난 뒤에 7의 자식 노드가 3과 1이 되는 일은 없다는 의미다.\n\n\u003Cdetails\u003E\n\u003Csummary\u003E소스 코드\u003C\u002Fsummary\u003E\n\u003Cdiv markdown=\"1\"\u003E\n\n```python\nfrom typing import Optional\n\n\nclass TreeNode:\n    def __init__(self, val=0, left=None, right=None):\n        self.val = val\n        self.left = left\n        self.right = right\n\n\nclass Solution1:\n    def invertTree(self, root: Optional[TreeNode]) -\u003E Optional[TreeNode]:\n        if root:\n            root.left, root.right = self.invertTree(root.right), self.invertTree(root.left)\n            return root\n        # 파이썬에서는 아무 것도 리턴하지 않으면 암묵적으로 None을 리턴하기 때문에 아래 코드는 생략할 수 있다.\n        return None\n```\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdetails\u003E\n\n### 2. 반복 구조로 BFS (Top-Down)\n\n\u003Cdetails\u003E\n\u003Csummary\u003E소스 코드\u003C\u002Fsummary\u003E\n\u003Cdiv markdown=\"1\"\u003E\n\n```python\nfrom typing import Optional\n\n\nclass TreeNode:\n    def __init__(self, val=0, left=None, right=None):\n        self.val = val\n        self.left = left\n        self.right = right\n\n\nclass Solution2:\n    def invertTree(self, root: Optional[TreeNode]) -\u003E Optional[TreeNode]:\n        queue = collections.deque([root])\n\n        while queue:\n            node = queue.popleft()\n\n            # 부모 노드로부터 하향식 스왑\n            if node:\n                node.left, node.right = node.right, node.left\n\n                queue.append(node.left)\n                queue.append(node.right)\n\n        return root\n```\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdetails\u003E\n\n### 3. 반복 구조로 DFS\n\n- 풀이 2번에서 큐(Deque) 대신에 스택을 사용하면 된다.\n\n\u003Cdetails\u003E\n\u003Csummary\u003E소스 코드\u003C\u002Fsummary\u003E\n\u003Cdiv markdown=\"1\"\u003E\n\n```python\nfrom typing import Optional\n\n\nclass TreeNode:\n    def __init__(self, val=0, left=None, right=None):\n        self.val = val\n        self.left = left\n        self.right = right\n\n\nclass Solution3:\n    def invertTree(self, root: Optional[TreeNode]) -\u003E Optional[TreeNode]:\n        stack = collections.deque([root])\n\n        while stack:\n            node = stack.pop()\n\n            # 부모 노드로부터 하향식 스왑\n            if node:\n                node.left, node.right = node.right, node.left\n\n                stack.append(node.left)\n                stack.append(node.right)\n\n        return root\n```\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdetails\u003E\n\n### 4. 반복 구조로 DFS 후위 순회\n\n- 풀이 2번 혹은 3번에서 적용한 방식인 전위 순회 대신, 큐\u002F스택에 삽입하는 코드를 스왑하는 코드보다 먼저 실행하는 후위 순회를 사용해도 결과는 같다.\n\n\u003Cdetails\u003E\n\u003Csummary\u003E소스 코드\u003C\u002Fsummary\u003E\n\u003Cdiv markdown=\"1\"\u003E\n\n```python\nfrom typing import Optional\n\n\nclass TreeNode:\n    def __init__(self, val=0, left=None, right=None):\n        self.val = val\n        self.left = left\n        self.right = right\n\n\nclass Solution4:\n    def invertTree(self, root: Optional[TreeNode]) -\u003E Optional[TreeNode]:\n        stack = collections.deque([root])\n\n        while stack:\n            node = stack.pop()\n\n            if node:\n                stack.append(node.left)\n                stack.append(node.right)\n                \n                # 후위 순회\n                node.left, node.right = node.right, node.left\n\n        return root\n```\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdetails\u003E\n\n## 출처\n\n- 박상길, 『파이썬 알고리즘 인터뷰』, 책만(2020), p397-403.\n  - [도서 정보](https:\u002F\u002Fwww.onlybook.co.kr\u002Fentry\u002Falgorithm-interview)\n  - [GitHub](https:\u002F\u002Fgithub.com\u002Fonlybooks\u002Falgorithm-interview)\n",dir:"\u002Fposts\u002F2021\u002F08\u002F17",path:"\u002Fposts\u002F2021\u002F08\u002F17\u002Fleetcode-226",extension:".md",createdAt:"2021-08-17T08:47:29.000Z",updatedAt:"2022-06-26T10:01:49.000Z"},isErrorPage:U,isDarkMode:U,isScrolled:U,isMobile:U,isTablet:U,hasHeaderImage:aW,isMobileMenuOpened:U,headerImage:"",perPage:10},serverRendered:aW,routePath:"\u002Fposts\u002Fleetcode-226",config:{_app:{basePath:"\u002F",assetsPath:"\u002F_nuxt\u002F",cdnURL:aX},content:{dbHash:"9f451614"}},colorMode:{preference:by,value:by,unknown:aW,forced:U}}}("text","element","span","token","punctuation",".","operator","\n","keyword","=",":"," ","(",")",",","[","]","TreeNode","boolean","None","append"," node","a"," Optional","div","class","class-name","\n    ","def","function","self","left","right ","right","root","true",-1,"icon","icon-link","li","number","1","invertTree"," root","\n\n        ","if",false,"ul","import","val ","-","return","node","details","summary","소스 코드","nuxt-content-highlight","pre","language-python","line-numbers","code","from"," typing ","__init__"," val","0"," left"," right","\n        self"," val\n        self","left "," left\n        self"," right\n\n\n","\u003E"," collections","deque","while","\n            ","curr_node",2,3,"출처","h2","builtin"," node_queue","popleft","\n                node_queue","\n\n            "," root\n","h3"," Optional\n\n\n","comment"," stack","nofollow","noopener","noreferrer","_blank","int","\n        ","\n            node ","\n                node","\n                stack",true,null,"문제-링크","문제 링크","나의-풀이-풀이-실패","나의 풀이 (풀이 실패)","문제-풀이","문제 풀이","1-파이썬다운-방식-bottom-up","1. 파이썬다운 방식 (Bottom-Up)","2-반복-구조로-bfs-top-down","2. 반복 구조로 BFS (Top-Down)","3-반복-구조로-dfs","3. 반복 구조로 DFS","4-반복-구조로-dfs-후위-순회","4. 반복 구조로 DFS 후위 순회","https:\u002F\u002Fleetcode.com\u002Fproblems\u002Finvert-binary-tree\u002F"," List"," Deque","\n            curr_node "," curr_node ","is","not","\n                val_queue","val_queue"," self"," queue","# 부모 노드로부터 하향식 스왑","\n        stack ","pop","system"));