__NUXT_JSONP__("/posts/leetcode-39", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au,av,aw,ax,ay,az,aA,aB,aC,aD,aE,aF,aG,aH,aI,aJ,aK,aL,aM,aN,aO,aP,aQ,aR,aS,aT,aU,aV,aW,aX,aY,aZ,a_,a$,ba,bb,bc,bd,be,bf,bg,bh){aF.slug="leetcode-39";aF.description="Combination Sum";aF.title="LeetCode 39번 문제";aF.tags="algorithm, leetcode, python, dfs, backtracking";aF.toc=[{id:aG,depth:S,text:aH},{id:aI,depth:S,text:aJ},{id:aK,depth:_,text:aL},{id:aM,depth:_,text:aN},{id:aO,depth:S,text:aP},{id:aQ,depth:_,text:aR},{id:T,depth:S,text:T}];aF.body={type:"root",children:[{type:b,tag:U,props:{id:aG},children:[{type:b,tag:r,props:{href:"#%EB%AC%B8%EC%A0%9C-%EB%A7%81%ED%81%AC",ariaHidden:w,tabIndex:x},children:[{type:b,tag:c,props:{className:[y,z]},children:[]}]},{type:a,value:aH}]},{type:a,value:g},{type:b,tag:"p",props:{},children:[{type:b,tag:r,props:{href:aS,rel:[$,aa,ab],target:ac},children:[{type:a,value:aS}]}]},{type:a,value:g},{type:b,tag:U,props:{id:aI},children:[{type:b,tag:r,props:{href:"#%EB%82%98%EC%9D%98-%ED%92%80%EC%9D%B4",ariaHidden:w,tabIndex:x},children:[{type:b,tag:c,props:{className:[y,z]},children:[]}]},{type:a,value:aJ}]},{type:a,value:g},{type:b,tag:ad,props:{id:aK},children:[{type:b,tag:r,props:{href:"#%EC%B2%AB-%EB%B2%88%EC%A7%B8-%EC%8B%9C%EB%8F%84",ariaHidden:w,tabIndex:x},children:[{type:b,tag:c,props:{className:[y,z]},children:[]}]},{type:a,value:aL}]},{type:a,value:g},{type:b,tag:V,props:{},children:[{type:a,value:g},{type:b,tag:D,props:{},children:[{type:a,value:"상당히 느린 방식의 풀이법이다. 아마 리스트 정렬 과정에서 실행 시간을 잡아먹은 듯하다."}]},{type:a,value:g}]},{type:a,value:g},{type:b,tag:ae,props:{},children:[{type:a,value:g},{type:b,tag:af,props:{},children:[{type:a,value:ag}]},{type:a,value:g},{type:b,tag:E,props:{markdown:W},children:[{type:a,value:g},{type:b,tag:E,props:{className:[ah]},children:[{type:b,tag:ai,props:{className:[aj,ak]},children:[{type:b,tag:X,props:{},children:[{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:al}]},{type:a,value:am},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:an}]},{type:a,value:ao},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:ap}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,aq]},children:[{type:a,value:"MySolution1"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:ar},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:F}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:as}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:at},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:H},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:A},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:M}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:N}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:au},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:J},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:F}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:av}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:aT},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:O},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:t}]},{type:a,value:Y},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:aw}]},{type:a,value:A},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:t}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:"sorted"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:ax},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:aU}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:P}]},{type:a,value:aV},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aW},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:K}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:ax},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:v}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:t}]},{type:a,value:Y},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:N}]},{type:a,value:A},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:v}]},{type:a,value:ay},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:az}]},{type:a,value:aA},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:P}]},{type:a,value:H},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aX},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:B}]},{type:a,value:O},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:aY},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:K}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:aZ},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:aB},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:a_},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:aC}]},{type:a,value:a$},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:ba},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:bb},{type:b,tag:c,props:{className:[d,C]},children:[{type:a,value:"# candidates가 정렬이 되어있지 않으면"}]},{type:a,value:J},{type:b,tag:c,props:{className:[d,C]},children:[{type:a,value:"# result의 순서가 올바르지 않아 오답 처리"}]},{type:a,value:"\n        candidates"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:K}]},{type:a,value:"sort"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:bc},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:B}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:bd},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,L]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:J},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:v}]},{type:a,value:aD}]}]}]},{type:a,value:g}]},{type:a,value:g}]},{type:a,value:g},{type:b,tag:ad,props:{id:aM},children:[{type:b,tag:r,props:{href:"#%EB%91%90-%EB%B2%88%EC%A7%B8-%EC%8B%9C%EB%8F%84",ariaHidden:w,tabIndex:x},children:[{type:b,tag:c,props:{className:[y,z]},children:[]}]},{type:a,value:aN}]},{type:a,value:g},{type:b,tag:V,props:{},children:[{type:a,value:g},{type:b,tag:D,props:{},children:[{type:a,value:"위의 풀이 방법보다 실행 시간이 개선되었다."}]},{type:a,value:g},{type:b,tag:D,props:{},children:[{type:a,value:"매번 정렬을 하는 대신, 재귀를 호출하기 전 "},{type:b,tag:X,props:{},children:[{type:a,value:aE}]},{type:a,value:"의 숫자가 현재 조합의 마지막 요소보다 크거나 같을 경우에만 조합에 추가함으로써 각 조합의 정렬된 상태를 유지한다."}]},{type:a,value:g}]},{type:a,value:g},{type:b,tag:ae,props:{},children:[{type:a,value:g},{type:b,tag:af,props:{},children:[{type:a,value:ag}]},{type:a,value:g},{type:b,tag:E,props:{markdown:W},children:[{type:a,value:g},{type:b,tag:E,props:{className:[ah]},children:[{type:b,tag:ai,props:{className:[aj,ak]},children:[{type:b,tag:X,props:{},children:[{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:al}]},{type:a,value:am},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:an}]},{type:a,value:ao},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:ap}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,aq]},children:[{type:a,value:"MySolution2"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:ar},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:F}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:as}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:at},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:H},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:A},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:M}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:N}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:au},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:J},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:F}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:av}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:aT},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:O},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:t}]},{type:a,value:Y},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:aw}]},{type:a,value:A},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:t}]},{type:a,value:be},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:aU}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:P}]},{type:a,value:aV},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aW},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:K}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:ax},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:v}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:t}]},{type:a,value:Y},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:N}]},{type:a,value:A},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:v}]},{type:a,value:ay},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:az}]},{type:a,value:aA},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:P}]},{type:a,value:H},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:t}]},{type:a,value:be},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:"and"}]},{type:a,value:aA},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:bf}]},{type:a,value:O},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:M}]},{type:b,tag:c,props:{className:[d,L]},children:[{type:a,value:W}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:"\n                    "},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:"continue"}]},{type:a,value:aX},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:B}]},{type:a,value:O},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:aY},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:K}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:aZ},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:aB},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:a_},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:aC}]},{type:a,value:a$},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:ba},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:bc},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:B}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:bd},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,L]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:J},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:v}]},{type:a,value:aD}]}]}]},{type:a,value:g}]},{type:a,value:g}]},{type:a,value:g},{type:b,tag:U,props:{id:aO},children:[{type:b,tag:r,props:{href:"#%EB%AC%B8%EC%A0%9C-%ED%92%80%EC%9D%B4",ariaHidden:w,tabIndex:x},children:[{type:b,tag:c,props:{className:[y,z]},children:[]}]},{type:a,value:aP}]},{type:a,value:g},{type:b,tag:ad,props:{id:aQ},children:[{type:b,tag:r,props:{href:"#1-dfs%EB%A1%9C-%EC%A4%91%EB%B3%B5-%EC%A1%B0%ED%95%A9-%EA%B7%B8%EB%9E%98%ED%94%84-%ED%83%90%EC%83%89",ariaHidden:w,tabIndex:x},children:[{type:b,tag:c,props:{className:[y,z]},children:[]}]},{type:a,value:aR}]},{type:a,value:g},{type:b,tag:ae,props:{},children:[{type:a,value:g},{type:b,tag:af,props:{},children:[{type:a,value:ag}]},{type:a,value:g},{type:b,tag:E,props:{markdown:W},children:[{type:a,value:g},{type:b,tag:E,props:{className:[ah]},children:[{type:b,tag:ai,props:{className:[aj,ak]},children:[{type:b,tag:X,props:{},children:[{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:al}]},{type:a,value:am},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:an}]},{type:a,value:ao},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:ap}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,aq]},children:[{type:a,value:"Solution1"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:ar},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:F}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:as}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:at},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:H},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:A},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:M}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:N}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:au},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:"\n        result "},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:B}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:bb},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:F}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:av}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:"csum"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:" index"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:" path"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,C]},children:[{type:a,value:"# 종료 조건"}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:t}]},{type:a,value:bg},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:bf}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,L]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:v}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:t}]},{type:a,value:bg},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:aw}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,L]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:"\n                result"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:K}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:"path"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:v}]},{type:a,value:ay},{type:b,tag:c,props:{className:[d,C]},children:[{type:a,value:"# 자신부터 하위 원소까지의 나열 재귀 호출"}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,C]},children:[{type:a,value:"# 순열과는 다르게 항상 처음부터 시작할 필요가 없음"}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,C]},children:[{type:a,value:"# 만약 순열이라면 매번 탐색을 처음부터 수행하기 때문에"}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,C]},children:[{type:a,value:"# 두 번째 인자로 i 대신 0을 기입해야 함"}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:az}]},{type:a,value:" i "},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:P}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:"range"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:"index"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:"len"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:aE},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aB},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:"csum "},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:M}]},{type:a,value:H},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:bh},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:" i"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:" path "},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:aC}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:aE},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:bh},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:"\n\n        dfs"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:"target"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,L]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:J},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:v}]},{type:a,value:aD}]}]}]},{type:a,value:g}]},{type:a,value:g}]},{type:a,value:g},{type:b,tag:U,props:{id:T},children:[{type:b,tag:r,props:{href:"#%EC%B6%9C%EC%B2%98",ariaHidden:w,tabIndex:x},children:[{type:b,tag:c,props:{className:[y,z]},children:[]}]},{type:a,value:T}]},{type:a,value:g},{type:b,tag:V,props:{},children:[{type:a,value:g},{type:b,tag:D,props:{},children:[{type:a,value:"박상길, 『파이썬 알고리즘 인터뷰』, 책만(2020), p351-354.\n"},{type:b,tag:V,props:{},children:[{type:a,value:g},{type:b,tag:D,props:{},children:[{type:b,tag:r,props:{href:"https:\u002F\u002Fwww.onlybook.co.kr\u002Fentry\u002Falgorithm-interview",rel:[$,aa,ab],target:ac},children:[{type:a,value:"도서 정보"}]}]},{type:a,value:g},{type:b,tag:D,props:{},children:[{type:b,tag:r,props:{href:"https:\u002F\u002Fgithub.com\u002Fonlybooks\u002Falgorithm-interview",rel:[$,aa,ab],target:ac},children:[{type:a,value:"GitHub"}]}]},{type:a,value:g}]},{type:a,value:g}]},{type:a,value:g}]}]};aF.text="\n## 문제 링크\n\nhttps:\u002F\u002Fleetcode.com\u002Fproblems\u002Fcombination-sum\u002F\n\n## 나의 풀이\n\n### 첫 번째 시도\n\n- 상당히 느린 방식의 풀이법이다. 아마 리스트 정렬 과정에서 실행 시간을 잡아먹은 듯하다.\n\n\u003Cdetails\u003E\n\u003Csummary\u003E소스 코드\u003C\u002Fsummary\u003E\n\u003Cdiv markdown=\"1\"\u003E\n\n```python\nfrom typing import List\n\n\nclass MySolution1:\n    def combinationSum(self, candidates: List[int], target: int) -\u003E List[List[int]]:\n        def dfs(curr, comb=[]):\n            if curr == target:\n                if sorted(comb) not in result:\n                    result.append(comb)\n                return\n            if curr \u003E target:\n                return\n\n            for num in candidates:\n                selected = comb[:]\n                selected.append(num)\n                dfs(curr + num, selected)\n\n        # candidates가 정렬이 되어있지 않으면\n        # result의 순서가 올바르지 않아 오답 처리\n        candidates.sort()\n\n        result = []\n        dfs(0)\n        return result\n```\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdetails\u003E\n\n### 두 번째 시도\n\n- 위의 풀이 방법보다 실행 시간이 개선되었다.\n- 매번 정렬을 하는 대신, 재귀를 호출하기 전 `candidates`의 숫자가 현재 조합의 마지막 요소보다 크거나 같을 경우에만 조합에 추가함으로써 각 조합의 정렬된 상태를 유지한다.\n\n\u003Cdetails\u003E\n\u003Csummary\u003E소스 코드\u003C\u002Fsummary\u003E\n\u003Cdiv markdown=\"1\"\u003E\n\n```python\nfrom typing import List\n\n\nclass MySolution2:\n    def combinationSum(self, candidates: List[int], target: int) -\u003E List[List[int]]:\n        def dfs(curr, comb=[]):\n            if curr == target:\n                if comb not in result:\n                    result.append(comb)\n                return\n            if curr \u003E target:\n                return\n\n            for num in candidates:\n                if comb and num \u003C comb[-1]:\n                    continue\n                selected = comb[:]\n                selected.append(num)\n                dfs(curr + num, selected)\n\n        result = []\n        dfs(0)\n        return result\n```\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdetails\u003E\n\n## 문제 풀이\n\n### 1. DFS로 중복 조합 그래프 탐색\n\n\u003Cdetails\u003E\n\u003Csummary\u003E소스 코드\u003C\u002Fsummary\u003E\n\u003Cdiv markdown=\"1\"\u003E\n\n```python\nfrom typing import List\n\n\nclass Solution1:\n    def combinationSum(self, candidates: List[int], target: int) -\u003E List[List[int]]:\n        result = []\n\n        def dfs(csum, index, path):\n            # 종료 조건\n            if csum \u003C 0:\n                return\n            if csum == 0:\n                result.append(path)\n                return\n\n            # 자신부터 하위 원소까지의 나열 재귀 호출\n            # 순열과는 다르게 항상 처음부터 시작할 필요가 없음\n            # 만약 순열이라면 매번 탐색을 처음부터 수행하기 때문에\n            # 두 번째 인자로 i 대신 0을 기입해야 함\n            for i in range(index, len(candidates)):\n                dfs(csum - candidates[i], i, path + [candidates[i]])\n\n        dfs(target, 0, [])\n        return result\n```\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdetails\u003E\n\n## 출처\n\n- 박상길, 『파이썬 알고리즘 인터뷰』, 책만(2020), p351-354.\n  - [도서 정보](https:\u002F\u002Fwww.onlybook.co.kr\u002Fentry\u002Falgorithm-interview)\n  - [GitHub](https:\u002F\u002Fgithub.com\u002Fonlybooks\u002Falgorithm-interview)\n";aF.dir="\u002Fposts\u002F2021\u002F05\u002F30";aF.path="\u002Fposts\u002F2021\u002F05\u002F30\u002Fleetcode-39";aF.extension=".md";aF.createdAt=Z;aF.updatedAt=Z;return {data:[{post:aF,prev:{slug:"leetcode-78",title:"LeetCode 78번 문제",createdAt:Z},next:{slug:"leetcode-77",title:"LeetCode 77번 문제",createdAt:Z}}],fetch:{},mutations:[["SET_POST",aF],["SET_HEADER_IMAGE_STATE",true],["SET_SCROLL_STATE",false]]}}("text","element","span","token","punctuation","keyword","\n"," ",":","operator","(","[","]",")",",","builtin","\n            ","a","int","if","\n                ","return","true",-1,"icon","icon-link"," target","=","comment","li","div","def","function"," candidates"," List","\n        ",".","number","-","\u003E"," comb","in","append","0",2,"출처","h2","ul","1","code"," curr ","2022-07-09T15:52:22.000Z",3,"nofollow","noopener","noreferrer","_blank","h3","details","summary","소스 코드","nuxt-content-highlight","pre","language-python","line-numbers","from"," typing ","import"," List\n\n\n","class","class-name","\n    ","combinationSum","self","List","dfs","==","comb","\n\n            ","for"," num ","\n                dfs","+"," result\n","candidates",{},"문제-링크","문제 링크","나의-풀이","나의 풀이","첫-번째-시도","첫 번째 시도","두-번째-시도","두 번째 시도","문제-풀이","문제 풀이","1-dfs로-중복-조합-그래프-탐색","1. DFS로 중복 조합 그래프 탐색","https:\u002F\u002Fleetcode.com\u002Fproblems\u002Fcombination-sum\u002F","curr","not"," result","\n                    result","\n                selected ","\n                selected","num","curr "," num"," selected","\n\n        ","\n\n        result ","\n        dfs"," comb ","\u003C"," csum ","i")));