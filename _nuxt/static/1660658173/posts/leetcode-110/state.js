window.__NUXT__=(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au,av,aw,ax,ay,az,aA,aB,aC,aD,aE,aF,aG,aH,aI,aJ,aK,aL,aM,aN,aO,aP,aQ,aR,aS,aT,aU,aV,aW,aX,aY,aZ,a_,a$,ba,bb){return {staticAssetsBase:"\u002F_nuxt\u002Fstatic\u002F1660658173",layout:"default",error:ak,state:{post:{slug:"leetcode-110",description:"Balanced Binary Tree",title:"LeetCode 110번 문제",tags:"algorithm, leetcode, python, tree, dfs",toc:[{id:al,depth:I,text:am},{id:an,depth:I,text:ao},{id:ap,depth:I,text:aq},{id:ar,depth:3,text:as},{id:J,depth:I,text:J}],body:{type:y,children:[{type:b,tag:K,props:{id:al},children:[{type:b,tag:s,props:{href:"#%EB%AC%B8%EC%A0%9C-%EB%A7%81%ED%81%AC",ariaHidden:D,tabIndex:E},children:[{type:b,tag:c,props:{className:[F,G]},children:[]}]},{type:a,value:am}]},{type:a,value:i},{type:b,tag:"p",props:{},children:[{type:b,tag:s,props:{href:at,rel:[Y,Z,_],target:$},children:[{type:a,value:at}]}]},{type:a,value:i},{type:b,tag:K,props:{id:an},children:[{type:b,tag:s,props:{href:"#%EB%82%98%EC%9D%98-%ED%92%80%EC%9D%B4",ariaHidden:D,tabIndex:E},children:[{type:b,tag:c,props:{className:[F,G]},children:[]}]},{type:a,value:ao}]},{type:a,value:i},{type:b,tag:au,props:{},children:[{type:a,value:i},{type:b,tag:av,props:{},children:[{type:a,value:aw}]},{type:a,value:i},{type:b,tag:L,props:{markdown:q},children:[{type:a,value:i},{type:b,tag:L,props:{className:[ax]},children:[{type:b,tag:ay,props:{className:[az,aA]},children:[{type:b,tag:aB,props:{},children:[{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aC}]},{type:a,value:aD},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aE}]},{type:a,value:aF},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:M}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,N]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:P},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:z}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:aG}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:aH},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:aI},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:S}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:S}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:aa},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:aJ},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:j}]},{type:a,value:aK},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:j}]},{type:a,value:aL},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:aM},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:j}]},{type:a,value:aN},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:M}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,N]},children:[{type:a,value:"MySolution1"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:P},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"# 높이 균형 여부 (하나의 테스트 케이스가 끝날 때마다 초기화 필요)"}]},{type:a,value:"\n    balanced "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:ab}]},{type:a,value:"\n\n    "},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:z}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:aO}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:U},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:aP},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:aQ}]},{type:a,value:O},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:aR}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:r}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:V}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,C]},children:[{type:a,value:aS}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:W},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"# 예외 처리"}]},{type:a,value:W},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:H}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ac}]},{type:a,value:U},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:ab}]},{type:a,value:aT},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:z}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:"dfs"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:ad},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:" level"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:H}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ac}]},{type:a,value:" node"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:ae},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:af},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:q}]},{type:a,value:"\n            \n            left "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:j}]},{type:a,value:aU},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:ad},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:af},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:ag}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:aV},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:j}]},{type:a,value:aU},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:ad},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:aW},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:af},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:ag}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:"\n            \n            "},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"# 양쪽 자식 노드의 레벨 차가 1이 넘으면 높이 균형이 맞지 않은 상태"}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:H}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,C]},children:[{type:a,value:aX}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:r}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:V}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:"\n                self"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:aY},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:"False"}]},{type:a,value:"\n                \n            "},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"# 부모 노드에서는 레벨이 더 높은 자식 노드를 사용하여 부모 노드의 형제 노드와 비교"}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,C]},children:[{type:a,value:aZ}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:"\n\n        dfs"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:"\n        result "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:j}]},{type:a,value:" self"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:"balanced\n        "},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"# 다음 테스트 케이스를 위해 초기화"}]},{type:a,value:aa},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:aY},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:ab}]},{type:a,value:W},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:" result\n"}]}]}]},{type:a,value:i}]},{type:a,value:i}]},{type:a,value:i},{type:b,tag:K,props:{id:ap},children:[{type:b,tag:s,props:{href:"#%EB%AC%B8%EC%A0%9C-%ED%92%80%EC%9D%B4",ariaHidden:D,tabIndex:E},children:[{type:b,tag:c,props:{className:[F,G]},children:[]}]},{type:a,value:aq}]},{type:a,value:i},{type:b,tag:"h3",props:{id:ar},children:[{type:b,tag:s,props:{href:"#1-%EC%9E%AC%EA%B7%80-%EA%B5%AC%EC%A1%B0%EB%A1%9C-%EB%86%92%EC%9D%B4-%EC%B0%A8%EC%9D%B4-%EA%B3%84%EC%82%B0",ariaHidden:D,tabIndex:E},children:[{type:b,tag:c,props:{className:[F,G]},children:[]}]},{type:a,value:as}]},{type:a,value:i},{type:b,tag:au,props:{},children:[{type:a,value:i},{type:b,tag:av,props:{},children:[{type:a,value:aw}]},{type:a,value:i},{type:b,tag:L,props:{markdown:q},children:[{type:a,value:i},{type:b,tag:L,props:{className:[ax]},children:[{type:b,tag:ay,props:{className:[az,aA]},children:[{type:b,tag:aB,props:{},children:[{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aC}]},{type:a,value:aD},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aE}]},{type:a,value:aF},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:M}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,N]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:P},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:z}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:aG}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:aH},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:aI},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:S}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:S}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:aa},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:aJ},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:j}]},{type:a,value:aK},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:j}]},{type:a,value:aL},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:aM},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:j}]},{type:a,value:aN},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:M}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,N]},children:[{type:a,value:"Solution1"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:P},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:z}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:aO}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:U},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:aP},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:aQ}]},{type:a,value:O},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:aR}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:r}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:V}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,C]},children:[{type:a,value:aS}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:W},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:z}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:"check"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:H}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ac}]},{type:a,value:U},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:ae},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:R}]},{type:a,value:"\n\n            left "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:j}]},{type:a,value:ah},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:aV},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:j}]},{type:a,value:ah},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:aW},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:"\n\n            "},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"# 높이 차이가 나는 경우 -1, 이외에는 높이에 따라 1 증가"}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"# 한 번 -1을 리턴하면 더 이상 다른 값으로 변경되지 않음"}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:H}]},{type:a,value:" left "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:a_}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:r}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:q}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:a$}]},{type:a,value:" right "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:a_}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:r}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:q}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:a$}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,C]},children:[{type:a,value:aX}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:r}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:V}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:ae},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:r}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:q}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,C]},children:[{type:a,value:aZ}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:ag}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:q}]},{type:a,value:aT},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:ah},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:"!="}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:r}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:q}]},{type:a,value:i}]}]}]},{type:a,value:i}]},{type:a,value:i}]},{type:a,value:i},{type:b,tag:K,props:{id:J},children:[{type:b,tag:s,props:{href:"#%EC%B6%9C%EC%B2%98",ariaHidden:D,tabIndex:E},children:[{type:b,tag:c,props:{className:[F,G]},children:[]}]},{type:a,value:J}]},{type:a,value:i},{type:b,tag:ba,props:{},children:[{type:a,value:i},{type:b,tag:ai,props:{},children:[{type:a,value:"박상길, 『파이썬 알고리즘 인터뷰』, 책만(2020), p413-415.\n"},{type:b,tag:ba,props:{},children:[{type:a,value:i},{type:b,tag:ai,props:{},children:[{type:b,tag:s,props:{href:"https:\u002F\u002Fwww.onlybook.co.kr\u002Fentry\u002Falgorithm-interview",rel:[Y,Z,_],target:$},children:[{type:a,value:"도서 정보"}]}]},{type:a,value:i},{type:b,tag:ai,props:{},children:[{type:b,tag:s,props:{href:"https:\u002F\u002Fgithub.com\u002Fonlybooks\u002Falgorithm-interview",rel:[Y,Z,_],target:$},children:[{type:a,value:"GitHub"}]}]},{type:a,value:i}]},{type:a,value:i}]},{type:a,value:i}]}]},text:"\n## 문제 링크\n\nhttps:\u002F\u002Fleetcode.com\u002Fproblems\u002Fbalanced-binary-tree\u002Fsubmissions\u002F\n\n## 나의 풀이\n\n\u003Cdetails\u003E\n\u003Csummary\u003E소스 코드\u003C\u002Fsummary\u003E\n\u003Cdiv markdown=\"1\"\u003E\n\n```python\nfrom typing import Optional\n\n\nclass TreeNode:\n    def __init__(self, val=0, left=None, right=None):\n        self.val = val\n        self.left = left\n        self.right = right\n\n\nclass MySolution1:\n    # 높이 균형 여부 (하나의 테스트 케이스가 끝날 때마다 초기화 필요)\n    balanced = True\n\n    def isBalanced(self, root: Optional[TreeNode]) -\u003E bool:\n        # 예외 처리\n        if not root:\n            return True\n\n        def dfs(node, level):\n            if not node:\n                return level - 1\n            \n            left = dfs(node.left, level + 1)\n            right = dfs(node.right, level + 1)\n            \n            # 양쪽 자식 노드의 레벨 차가 1이 넘으면 높이 균형이 맞지 않은 상태\n            if abs(left - right) \u003E 1:\n                self.balanced = False\n                \n            # 부모 노드에서는 레벨이 더 높은 자식 노드를 사용하여 부모 노드의 형제 노드와 비교\n            return max(left, right)\n\n        dfs(root, 0)\n        result = self.balanced\n        # 다음 테스트 케이스를 위해 초기화\n        self.balanced = True\n        return result\n```\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdetails\u003E\n\n## 문제 풀이\n\n### 1. 재귀 구조로 높이 차이 계산\n\n\u003Cdetails\u003E\n\u003Csummary\u003E소스 코드\u003C\u002Fsummary\u003E\n\u003Cdiv markdown=\"1\"\u003E\n\n```python\nfrom typing import Optional\n\n\nclass TreeNode:\n    def __init__(self, val=0, left=None, right=None):\n        self.val = val\n        self.left = left\n        self.right = right\n\n\nclass Solution1:\n    def isBalanced(self, root: Optional[TreeNode]) -\u003E bool:\n        def check(root):\n            if not root:\n                return 0\n\n            left = check(root.left)\n            right = check(root.right)\n\n            # 높이 차이가 나는 경우 -1, 이외에는 높이에 따라 1 증가\n            # 한 번 -1을 리턴하면 더 이상 다른 값으로 변경되지 않음\n            if left == -1 or right == -1 or abs(left - right) \u003E 1:\n                return -1\n            return max(left, right) + 1\n\n        return check(root) != -1\n```\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdetails\u003E\n\n## 출처\n\n- 박상길, 『파이썬 알고리즘 인터뷰』, 책만(2020), p413-415.\n  - [도서 정보](https:\u002F\u002Fwww.onlybook.co.kr\u002Fentry\u002Falgorithm-interview)\n  - [GitHub](https:\u002F\u002Fgithub.com\u002Fonlybooks\u002Falgorithm-interview)\n",dir:"\u002Fposts\u002F2021\u002F08\u002F18",path:"\u002Fposts\u002F2021\u002F08\u002F18\u002Fleetcode-110",extension:".md",createdAt:"2021-08-18T11:47:05.000Z",updatedAt:"2022-06-26T10:01:49.000Z"},isErrorPage:x,isDarkMode:x,isScrolled:x,isMobile:x,isTablet:x,hasHeaderImage:aj,isMobileMenuOpened:x,headerImage:"",perPage:10},serverRendered:aj,routePath:"\u002Fposts\u002Fleetcode-110",config:{_app:{basePath:"\u002F",assetsPath:"\u002F_nuxt\u002F",cdnURL:ak},content:{dbHash:"826a1e29"}},colorMode:{preference:bb,value:bb,unknown:aj,forced:x}}}("text","element","span","token","punctuation"," ","operator","keyword","\n","=",":","(",")",",","number",".","1","-","a","boolean","\n            ","return","comment",false,"root","def","function"," right","builtin","true",-1,"icon","icon-link","if",2,"출처","h2","div","class","class-name","TreeNode","\n    ","self","0","None","left "," root","\u003E","\n        ","left","nofollow","noopener","noreferrer","_blank","\n        self","True","not","node","\n                "," level ","+"," check","li",true,null,"문제-링크","문제 링크","나의-풀이","나의 풀이","문제-풀이","문제 풀이","1-재귀-구조로-높이-차이-계산","1. 재귀 구조로 높이 차이 계산","https:\u002F\u002Fleetcode.com\u002Fproblems\u002Fbalanced-binary-tree\u002Fsubmissions\u002F","details","summary","소스 코드","nuxt-content-highlight","pre","language-python","line-numbers","code","from"," typing ","import"," Optional\n\n\n","__init__"," val"," left","val "," val\n        self"," left\n        self","right "," right\n\n\n","isBalanced"," Optional","[","]","bool","\n\n        "," dfs","\n            right ","right","abs","balanced ","max","==","or","ul","system"));