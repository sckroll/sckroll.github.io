window.__NUXT__=(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au,av,aw,ax,ay,az,aA,aB,aC,aD,aE,aF,aG,aH,aI,aJ,aK,aL,aM,aN,aO,aP,aQ,aR,aS,aT,aU,aV,aW,aX,aY,aZ,a_,a$,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,bA,bB){return {staticAssetsBase:"\u002F_nuxt\u002Fstatic\u002F1660898463",layout:"default",error:aP,state:{post:{slug:"leetcode-641",description:"Design Circular Deque",title:"LeetCode 641번 문제",tags:"algorithm, leetcode, python, deque",toc:[{id:aQ,depth:ad,text:aR},{id:aS,depth:ad,text:aT},{id:aU,depth:ad,text:aV},{id:aW,depth:aB,text:aX},{id:aY,depth:ad,text:aZ},{id:a_,depth:aB,text:a$},{id:am,depth:aB,text:am},{id:an,depth:ad,text:an}],body:{type:"root",children:[{type:b,tag:ae,props:{id:aQ},children:[{type:b,tag:J,props:{href:"#%EB%AC%B8%EC%A0%9C-%EB%A7%81%ED%81%AC",ariaHidden:M,tabIndex:N},children:[{type:b,tag:c,props:{className:[O,P]},children:[]}]},{type:a,value:aR}]},{type:a,value:l},{type:b,tag:"p",props:{},children:[{type:b,tag:J,props:{href:ba,rel:[aC,aD,aE],target:aF},children:[{type:a,value:ba}]}]},{type:a,value:l},{type:b,tag:ae,props:{id:aS},children:[{type:b,tag:J,props:{href:"#%EB%82%98%EC%9D%98-%ED%92%80%EC%9D%B4",ariaHidden:M,tabIndex:N},children:[{type:b,tag:c,props:{className:[O,P]},children:[]}]},{type:a,value:aT}]},{type:a,value:l},{type:b,tag:af,props:{},children:[{type:a,value:l},{type:b,tag:L,props:{},children:[{type:a,value:"이중 연결 리스트를 만들어서 해결하였다."}]},{type:a,value:l}]},{type:a,value:l},{type:b,tag:bb,props:{},children:[{type:a,value:l},{type:b,tag:bc,props:{},children:[{type:a,value:bd}]},{type:a,value:l},{type:b,tag:ao,props:{markdown:D},children:[{type:a,value:l},{type:b,tag:ao,props:{className:[be]},children:[{type:b,tag:bf,props:{className:[bg,bh]},children:[{type:b,tag:ap,props:{},children:[{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:bi}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:aq}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,ar]},children:[{type:a,value:"Node"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:W},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:v}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:as}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:_},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:K}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:" prev"},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:E}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:$}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:E}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:"value "},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:bj},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:aG},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:" prev\n        self"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:$}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:$}]},{type:a,value:bk},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:aq}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,ar]},children:[{type:a,value:"MyCircularDeque"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:W},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:v}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:as}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:aH},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:K}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:ag},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:E}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:ah},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:E}]},{type:a,value:"\n        \n        "},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:"# 데크의 최대 크기를 k, 현재 크기를 length로 지정,"}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:"# 아이템을 추가하거나 제거할 때 length의 길이를 조정"}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:bl}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:" k\n        self"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,z]},children:[{type:a,value:aa}]},{type:a,value:F},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:v}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:bm}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:_},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:K}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:y}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:C}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:H}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:A}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:at},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:u}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:Q}]},{type:a,value:"\n\n        front_node "},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:bn},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:au},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:E}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:R},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:av},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:"# 이미 front 위치에 노드가 있다면 이전 노드를 업데이트"}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:A}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:R},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:R},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:aG},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:" front_node\n        self"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:ag},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:" front_node\n\n        "},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:bo}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:"# 마지막(rear) 노드도 front 노드를 가리킬 것"}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:A}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:bp}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:ah},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:"front\n        self"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aw}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,z]},children:[{type:a,value:D}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:u}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:U}]},{type:a,value:F},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:v}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:bq}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:_},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:K}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:y}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:C}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:H}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:A}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:at},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:u}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:Q}]},{type:a,value:"\n\n        last_node "},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:bn},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:au},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:E}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:av},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:"# 이미 rear 위치에 노드가 있다면 다음 노드를 업데이트"}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:A}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:$}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:" last_node\n        self"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:ah},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:" last_node\n\n        "},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:bo}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:"# 첫 번째(front) 노드도 rear 노드를 가리킬 것"}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:A}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:bp}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:R},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:ag},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:"rear\n        self"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aw}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,z]},children:[{type:a,value:D}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:u}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:U}]},{type:a,value:F},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:v}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:br}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:y}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:C}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:H}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:A}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:ab},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:u}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:Q}]},{type:a,value:av},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:"# front 포인터 위치 변경"}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:ag},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:R},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:$}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:A}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:R},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:"# front 노드의 이전 노드 삭제"}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:R},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:aG},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:E}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:ac}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:"# 모든 노드가 삭제된 경우 rear 포인터도 None으로 초기화"}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:ah},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:E}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ax}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,z]},children:[{type:a,value:D}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:u}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:U}]},{type:a,value:F},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:v}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:bs}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:y}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:C}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:H}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:A}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:ab},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:u}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:Q}]},{type:a,value:av},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:"# rear 포인터 위치 변경"}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:ah},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:"prev\n        "},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:A}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:"# rear 노드의 다음 노드 삭제"}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:$}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:E}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:ac}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:"# 모든 노드가 삭제된 경우 front 포인터도 None으로 초기화"}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:ag},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:E}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ax}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,z]},children:[{type:a,value:D}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:u}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:U}]},{type:a,value:F},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:v}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:bt}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:y}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:C}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:K}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:u}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:y}]},{type:b,tag:c,props:{className:[d,z]},children:[{type:a,value:D}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:A}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:ab},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:ac}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:R},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:bu},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:v}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:bv}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:y}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:C}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:K}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:u}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:y}]},{type:b,tag:c,props:{className:[d,z]},children:[{type:a,value:D}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:A}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:ab},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:ac}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:bu},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:v}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:ab}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:y}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:C}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:H}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:u}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:V}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,z]},children:[{type:a,value:aa}]},{type:a,value:F},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:v}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:at}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:y}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:C}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:H}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:u}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:V}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:bl}]},{type:a,value:l}]}]}]},{type:a,value:l}]},{type:a,value:l}]},{type:a,value:l},{type:b,tag:ae,props:{id:aU},children:[{type:b,tag:J,props:{href:"#%EB%AC%B8%EC%A0%9C-%ED%92%80%EC%9D%B4",ariaHidden:M,tabIndex:N},children:[{type:b,tag:c,props:{className:[O,P]},children:[]}]},{type:a,value:aV}]},{type:a,value:l},{type:b,tag:aI,props:{id:aW},children:[{type:b,tag:J,props:{href:"#%EC%9D%B4%EC%A4%91-%EC%97%B0%EA%B2%B0-%EB%A6%AC%EC%8A%A4%ED%8A%B8%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%9C-%EB%8D%B0%ED%81%AC-%EA%B5%AC%ED%98%84",ariaHidden:M,tabIndex:N},children:[{type:b,tag:c,props:{className:[O,P]},children:[]}]},{type:a,value:aX}]},{type:a,value:l},{type:b,tag:bb,props:{},children:[{type:a,value:l},{type:b,tag:bc,props:{},children:[{type:a,value:bd}]},{type:a,value:l},{type:b,tag:ao,props:{markdown:D},children:[{type:a,value:l},{type:b,tag:ao,props:{className:[be]},children:[{type:b,tag:bf,props:{className:[bg,bh]},children:[{type:b,tag:ap,props:{},children:[{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:bi}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:aq}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,ar]},children:[{type:a,value:"ListNode"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:W},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:v}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:as}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:_},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:aJ},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:bj},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:ay},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:E}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:az},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:E}]},{type:a,value:bk},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:aq}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,ar]},children:[{type:a,value:"solution1"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:W},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:v}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:as}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:aH},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:K}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:ai},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:"tail "},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:Y},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:E}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:Y},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:E}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:aK},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:G}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:aH},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,z]},children:[{type:a,value:aa}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:"# head 오른쪽에 tail, tail 왼쪽에 head를 연결"}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:ai},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:aL},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:aj},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:ay},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:aj},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:"head\n\n    "},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:"# 실제 삽입을 수행하는 내부 함수"}]},{type:a,value:W},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:"# 기존에 node와 n의 관계를 \"찢고\" 그 사이에 new를 삽입 후 좌우 노드와 연결"}]},{type:a,value:W},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:v}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:aM}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:ak},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:Y},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:bw},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:Y},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:bx},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:ak},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:by},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:az},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:" new\n        new"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:al},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:bw},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:az},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:ak},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:bz},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:ay},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:" new\n\n    "},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:"# 실제 삭제를 수행하는 내부 함수"}]},{type:a,value:W},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:v}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:aN}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:ak},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:Y},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:bx},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:ak},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:aL},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:by},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:az},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:bz},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:ay},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:" node\n\n    "},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:v}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:bm}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:_},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:K}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:y}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:C}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:H}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:A}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:G}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:V}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:aK},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:u}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:Q}]},{type:a,value:aA},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:G}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aw}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,z]},children:[{type:a,value:D}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:aM},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:ai},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:Y},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:au},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:u}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:U}]},{type:a,value:F},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:v}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:bq}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:_},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:K}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:y}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:C}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:H}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:A}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:G}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:V}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:aK},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:u}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:Q}]},{type:a,value:aA},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:G}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aw}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,z]},children:[{type:a,value:D}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:aM},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:aj},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:al},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:Y},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:au},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:u}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:U}]},{type:a,value:F},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:v}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:br}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:y}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:C}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:H}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:A}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:G}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:V}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,z]},children:[{type:a,value:aa}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:u}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:Q}]},{type:a,value:aA},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:G}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ax}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,z]},children:[{type:a,value:D}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:aN},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:ai},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:u}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:U}]},{type:a,value:F},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:v}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:bs}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:y}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:C}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:H}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:A}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:G}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:V}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,z]},children:[{type:a,value:aa}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:u}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:Q}]},{type:a,value:aA},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:G}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ax}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,z]},children:[{type:a,value:D}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:aN},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:aj},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:al},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:al},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:u}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:U}]},{type:a,value:F},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:v}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:bt}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:y}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:C}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:K}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:u}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:ai},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:aL},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:aJ},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:A}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:G}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:ac}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:y}]},{type:b,tag:c,props:{className:[d,z]},children:[{type:a,value:D}]},{type:a,value:F},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:v}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:bv}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:y}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:C}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:K}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:u}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:aj},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:al},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:aJ},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:A}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:G}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:ac}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:y}]},{type:b,tag:c,props:{className:[d,z]},children:[{type:a,value:D}]},{type:a,value:F},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:v}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:ab}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:y}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:C}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:H}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:u}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:G}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:V}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,z]},children:[{type:a,value:aa}]},{type:a,value:F},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:v}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:at}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:y}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:C}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:H}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:u}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:G}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:V}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:"k\n"}]}]}]},{type:a,value:l}]},{type:a,value:l}]},{type:a,value:l},{type:b,tag:ae,props:{id:aY},children:[{type:b,tag:J,props:{href:"#%EB%B0%B0%EC%9A%B4-%EC%A0%90",ariaHidden:M,tabIndex:N},children:[{type:b,tag:c,props:{className:[O,P]},children:[]}]},{type:a,value:aZ}]},{type:a,value:l},{type:b,tag:aI,props:{id:a_},children:[{type:b,tag:J,props:{href:"#%EB%A9%94%EC%86%8C%EB%93%9C-%EC%9D%B4%EB%A6%84-%EC%95%9E%EC%97%90-%EB%B6%99%EB%8A%94-%EB%B0%91%EC%A4%84",ariaHidden:M,tabIndex:N},children:[{type:b,tag:c,props:{className:[O,P]},children:[]}]},{type:a,value:a$}]},{type:a,value:l},{type:b,tag:af,props:{},children:[{type:a,value:l},{type:b,tag:L,props:{},children:[{type:b,tag:ap,props:{},children:[{type:a,value:"_add()"}]},{type:a,value:"와 같이 메소드 이름 앞에 밑줄("},{type:b,tag:ap,props:{},children:[{type:a,value:"_"}]},{type:a,value:", underscore)이 붙는다면 그 함수는 외부가 아닌 내부에서만 사용된다는 의미이다. (PEP8 명명 규칙 기준)"}]},{type:a,value:l}]},{type:a,value:l},{type:b,tag:aI,props:{id:am},children:[{type:b,tag:J,props:{href:"#%EA%B8%B0%ED%83%80",ariaHidden:M,tabIndex:N},children:[{type:b,tag:c,props:{className:[O,P]},children:[]}]},{type:a,value:am}]},{type:a,value:l},{type:b,tag:af,props:{},children:[{type:a,value:l},{type:b,tag:L,props:{},children:[{type:a,value:"사실 문제에서 요구하는 "},{type:b,tag:bA,props:{},children:[{type:a,value:"원형"}]},{type:a,value:" 데크를 이중 연결 리스트로 구현하는 것은 큰 의미가 없다."}]},{type:a,value:l},{type:b,tag:L,props:{},children:[{type:a,value:"원형 데크를 이중 연결 리스트로 구현하게 되면 원형의 이점을 살릴 수 없다. 원형의 이점을 살리기 위해서는 이중 연결 리스트가 아닌 배열로 풀이해야 한다."}]},{type:a,value:l},{type:b,tag:L,props:{},children:[{type:a,value:"원형으로 구현하는 이유는 뒤쪽으로 요소를 채우다가 공간이 꽉 차면 꼬리(tail)와 머리(head)를 연결해 앞쪽의 빈 공간을 활용하려는 의도지만, 연결 리스트는 애초에 빈 공간이라는 개념이 없기 때문에 원형은 아무런 의미가 없다."}]},{type:a,value:l},{type:b,tag:L,props:{},children:[{type:a,value:"데크의 연산은 "},{type:b,tag:bA,props:{},children:[{type:a,value:"맨 처음과 맨 끝의 값을 추출"}]},{type:a,value:"할 뿐이지 맨 끝의 다음 값을 추출하는 것과 같은 연산은 존재하지 않으므로 서로 연결되어 있을 필요도 없다."}]},{type:a,value:l}]},{type:a,value:l},{type:b,tag:ae,props:{id:an},children:[{type:b,tag:J,props:{href:"#%EC%B6%9C%EC%B2%98",ariaHidden:M,tabIndex:N},children:[{type:b,tag:c,props:{className:[O,P]},children:[]}]},{type:a,value:an}]},{type:a,value:l},{type:b,tag:af,props:{},children:[{type:a,value:l},{type:b,tag:L,props:{},children:[{type:a,value:"박상길, 『파이썬 알고리즘 인터뷰』, 책만(2020), p268-272.\n"},{type:b,tag:af,props:{},children:[{type:a,value:l},{type:b,tag:L,props:{},children:[{type:b,tag:J,props:{href:"https:\u002F\u002Fwww.onlybook.co.kr\u002Fentry\u002Falgorithm-interview",rel:[aC,aD,aE],target:aF},children:[{type:a,value:"도서 정보"}]}]},{type:a,value:l},{type:b,tag:L,props:{},children:[{type:b,tag:J,props:{href:"https:\u002F\u002Fgithub.com\u002Fonlybooks\u002Falgorithm-interview",rel:[aC,aD,aE],target:aF},children:[{type:a,value:"GitHub"}]}]},{type:a,value:l}]},{type:a,value:l}]},{type:a,value:l}]}]},text:"\n## 문제 링크\n\nhttps:\u002F\u002Fleetcode.com\u002Fproblems\u002Fdesign-circular-deque\u002F\n\n## 나의 풀이\n\n- 이중 연결 리스트를 만들어서 해결하였다.\n\n\u003Cdetails\u003E\n\u003Csummary\u003E소스 코드\u003C\u002Fsummary\u003E\n\u003Cdiv markdown=\"1\"\u003E\n\n```python\n# 노드 클래스\nclass Node:\n    def __init__(self, value: int, prev=None, next=None):\n        self.value = value\n        self.prev = prev\n        self.next = next\n\n\nclass MyCircularDeque:\n    def __init__(self, k: int):\n        self.front = None\n        self.rear = None\n        \n        # 데크의 최대 크기를 k, 현재 크기를 length로 지정,\n        # 아이템을 추가하거나 제거할 때 length의 길이를 조정\n        self.max = k\n        self.length = 0\n\n    def insertFront(self, value: int) -\u003E bool:\n        if self.isFull():\n            return False\n\n        front_node = Node(value, None, self.front)\n\n        # 이미 front 위치에 노드가 있다면 이전 노드를 업데이트\n        if self.front:\n            self.front.prev = front_node\n        self.front = front_node\n\n        # 새로 추가된 노드가 유일한 노드일 경우\n        # 마지막(rear) 노드도 front 노드를 가리킬 것\n        if not self.rear:\n            self.rear = self.front\n        self.length += 1\n        return True\n\n    def insertLast(self, value: int) -\u003E bool:\n        if self.isFull():\n            return False\n\n        last_node = Node(value, self.rear, None)\n\n        # 이미 rear 위치에 노드가 있다면 다음 노드를 업데이트\n        if self.rear:\n            self.rear.next = last_node\n        self.rear = last_node\n\n        # 새로 추가된 노드가 유일한 노드일 경우\n        # 첫 번째(front) 노드도 rear 노드를 가리킬 것\n        if not self.front:\n            self.front = self.rear\n        self.length += 1\n        return True\n\n    def deleteFront(self) -\u003E bool:\n        if self.isEmpty():\n            return False\n\n        # front 포인터 위치 변경\n        self.front = self.front.next\n        if self.front:\n            # front 노드의 이전 노드 삭제\n            self.front.prev = None\n        else:\n            # 모든 노드가 삭제된 경우 rear 포인터도 None으로 초기화\n            self.rear = None\n        self.length -= 1\n        return True\n\n    def deleteLast(self) -\u003E bool:\n        if self.isEmpty():\n            return False\n\n        # rear 포인터 위치 변경\n        self.rear = self.rear.prev\n        if self.rear:\n            # rear 노드의 다음 노드 삭제\n            self.rear.next = None\n        else:\n            # 모든 노드가 삭제된 경우 front 포인터도 None으로 초기화\n            self.front = None\n        self.length -= 1\n        return True\n\n    def getFront(self) -\u003E int:\n        return -1 if self.isEmpty() else self.front.value\n\n    def getRear(self) -\u003E int:\n        return -1 if self.isEmpty() else self.rear.value\n\n    def isEmpty(self) -\u003E bool:\n        return self.length == 0\n\n    def isFull(self) -\u003E bool:\n        return self.length == self.max\n```\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdetails\u003E\n\n## 문제 풀이\n\n### 이중 연결 리스트를 이용한 데크 구현\n\n\u003Cdetails\u003E\n\u003Csummary\u003E소스 코드\u003C\u002Fsummary\u003E\n\u003Cdiv markdown=\"1\"\u003E\n\n```python\n# 노드 클래스\nclass ListNode:\n    def __init__(self, value):\n        self.val = value\n        self.left = None\n        self.right = None\n\n\nclass solution1:\n    def __init__(self, k: int):\n        self.head, self.tail = ListNode(None), ListNode(None)\n        self.k, self.len = k, 0\n        # head 오른쪽에 tail, tail 왼쪽에 head를 연결\n        self.head.right, self.tail.left = self.tail, self.head\n\n    # 실제 삽입을 수행하는 내부 함수\n    # 기존에 node와 n의 관계를 \"찢고\" 그 사이에 new를 삽입 후 좌우 노드와 연결\n    def _add(self, node: ListNode, new: ListNode):\n        n = node.right\n        node.right = new\n        new.left, new.right = node, n\n        n.left = new\n\n    # 실제 삭제를 수행하는 내부 함수\n    def _del(self, node: ListNode):\n        n = node.right.right\n        node.right = n\n        n.left = node\n\n    def insertFront(self, value: int) -\u003E bool:\n        if self.len == self.k:\n            return False\n\n        self.len += 1\n        self._add(self.head, ListNode(value))\n        return True\n\n    def insertLast(self, value: int) -\u003E bool:\n        if self.len == self.k:\n            return False\n\n        self.len += 1\n        self._add(self.tail.left, ListNode(value))\n        return True\n\n    def deleteFront(self) -\u003E bool:\n        if self.len == 0:\n            return False\n\n        self.len -= 1\n        self._del(self.head)\n        return True\n\n    def deleteLast(self) -\u003E bool:\n        if self.len == 0:\n            return False\n\n        self.len -= 1\n        self._del(self.tail.left.left)\n        return True\n\n    def getFront(self) -\u003E int:\n        return self.head.right.val if self.len else -1\n\n    def getRear(self) -\u003E int:\n        return self.tail.left.val if self.len else -1\n\n    def isEmpty(self) -\u003E bool:\n        return self.len == 0\n\n    def isFull(self) -\u003E bool:\n        return self.len == self.k\n```\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdetails\u003E\n\n## 배운 점\n\n### 메소드 이름 앞에 붙는 밑줄\n\n- `_add()`와 같이 메소드 이름 앞에 밑줄(`_`, underscore)이 붙는다면 그 함수는 외부가 아닌 내부에서만 사용된다는 의미이다. (PEP8 명명 규칙 기준)\n\n### 기타\n\n- 사실 문제에서 요구하는 **원형** 데크를 이중 연결 리스트로 구현하는 것은 큰 의미가 없다.\n- 원형 데크를 이중 연결 리스트로 구현하게 되면 원형의 이점을 살릴 수 없다. 원형의 이점을 살리기 위해서는 이중 연결 리스트가 아닌 배열로 풀이해야 한다.\n- 원형으로 구현하는 이유는 뒤쪽으로 요소를 채우다가 공간이 꽉 차면 꼬리(tail)와 머리(head)를 연결해 앞쪽의 빈 공간을 활용하려는 의도지만, 연결 리스트는 애초에 빈 공간이라는 개념이 없기 때문에 원형은 아무런 의미가 없다.\n- 데크의 연산은 **맨 처음과 맨 끝의 값을 추출**할 뿐이지 맨 끝의 다음 값을 추출하는 것과 같은 연산은 존재하지 않으므로 서로 연결되어 있을 필요도 없다.\n\n## 출처\n\n- 박상길, 『파이썬 알고리즘 인터뷰』, 책만(2020), p268-272.\n  - [도서 정보](https:\u002F\u002Fwww.onlybook.co.kr\u002Fentry\u002Falgorithm-interview)\n  - [GitHub](https:\u002F\u002Fgithub.com\u002Fonlybooks\u002Falgorithm-interview)\n",dir:"\u002Fposts\u002F2021\u002F05\u002F17",path:"\u002Fposts\u002F2021\u002F05\u002F17\u002Fleetcode-641",extension:".md",createdAt:"2021-05-17T12:12:31.000Z",updatedAt:"2022-06-26T10:01:49.000Z"},isErrorPage:Z,isDarkMode:Z,isScrolled:Z,isMobile:Z,isTablet:Z,hasHeaderImage:aO,isMobileMenuOpened:Z,headerImage:"",perPage:10},serverRendered:aO,routePath:"\u002Fposts\u002Fleetcode-641",config:{_app:{basePath:"\u002F",assetsPath:"\u002F_nuxt\u002F",cdnURL:aP},content:{dbHash:"2eae1d88"}},colorMode:{preference:bB,value:bB,unknown:aO,forced:Z}}}("text","element","span","token","punctuation"," ",".","operator","keyword",":","builtin","\n"," self","(",")","=","\n        ","boolean",",","self","return","def","function","comment","-","number","if","\n        self","\u003E","1","None","\n\n    ","len","bool","\n            ","a","int","li","true",-1,"icon","icon-link","False","front","\n            self","rear","True","==","\n    ","length "," ListNode",false," value","next","0","isEmpty","else",2,"h2","ul","front ","rear ","head","tail"," node","left","기타","출처","div","code","class","class-name","__init__","isFull","value","\n\n        ","+=","-=","left ","right ","\n\n        self",3,"nofollow","noopener","noreferrer","_blank","prev "," k","h3","val ","k","right","_add","_del",true,null,"문제-링크","문제 링크","나의-풀이","나의 풀이","문제-풀이","문제 풀이","이중-연결-리스트를-이용한-데크-구현","이중 연결 리스트를 이용한 데크 구현","배운-점","배운 점","메소드-이름-앞에-붙는-밑줄","메소드 이름 앞에 붙는 밑줄","https:\u002F\u002Fleetcode.com\u002Fproblems\u002Fdesign-circular-deque\u002F","details","summary","소스 코드","nuxt-content-highlight","pre","language-python","line-numbers","# 노드 클래스"," value\n        self","\n\n\n","max","insertFront"," Node","# 새로 추가된 노드가 유일한 노드일 경우","not","insertLast","deleteFront","deleteLast","getFront","value\n\n    ","getRear"," new","\n        n ","right\n        node"," n\n        n","strong","system"));