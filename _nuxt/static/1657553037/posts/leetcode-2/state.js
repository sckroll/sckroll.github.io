window.__NUXT__=(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au,av,aw,ax,ay,az,aA,aB,aC,aD,aE,aF,aG,aH,aI,aJ,aK,aL,aM,aN,aO,aP,aQ,aR,aS,aT,aU,aV,aW,aX,aY,aZ,a_,a$,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,bA,bB,bC,bD,bE,bF,bG,bH){return {staticAssetsBase:"\u002F_nuxt\u002Fstatic\u002F1657553037",layout:"default",error:aY,state:{post:{slug:"leetcode-2",description:"Add Two Numbers",title:"LeetCode 2번 문제",tags:"algorithm, leetcode, python, linked_list",toc:[{id:aZ,depth:ac,text:a_},{id:a$,depth:ac,text:ba},{id:bb,depth:ac,text:bc},{id:bd,depth:aj,text:be},{id:bf,depth:aj,text:bg},{id:bh,depth:ac,text:bi},{id:bj,depth:aj,text:av},{id:aw,depth:aj,text:bk},{id:ak,depth:ac,text:ak}],body:{type:"root",children:[{type:b,tag:ad,props:{id:aZ},children:[{type:b,tag:v,props:{href:"#%EB%AC%B8%EC%A0%9C-%EB%A7%81%ED%81%AC",ariaHidden:A,tabIndex:B},children:[{type:b,tag:c,props:{className:[C,D]},children:[]}]},{type:a,value:a_}]},{type:a,value:i},{type:b,tag:"p",props:{},children:[{type:b,tag:v,props:{href:bl,rel:[ax,ay,az],target:aA},children:[{type:a,value:bl}]}]},{type:a,value:i},{type:b,tag:ad,props:{id:a$},children:[{type:b,tag:v,props:{href:"#%EB%82%98%EC%9D%98-%ED%92%80%EC%9D%B4",ariaHidden:A,tabIndex:B},children:[{type:b,tag:c,props:{className:[C,D]},children:[]}]},{type:a,value:ba}]},{type:a,value:i},{type:b,tag:aB,props:{},children:[{type:a,value:i},{type:b,tag:aC,props:{},children:[{type:a,value:aD}]},{type:a,value:i},{type:b,tag:E,props:{markdown:P},children:[{type:a,value:i},{type:b,tag:E,props:{className:[Q]},children:[{type:b,tag:R,props:{className:[S,T]},children:[{type:b,tag:t,props:{},children:[{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:U}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,V]},children:[{type:a,value:aE}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:W},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:F}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,z]},children:[{type:a,value:aF}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:aG},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:r}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,I]},children:[{type:a,value:J}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:aH},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:ae},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:k}]},{type:a,value:aI},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:k}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:r}]},{type:a,value:aJ},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:U}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,V]},children:[{type:a,value:aK}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:W},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:F}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,z]},children:[{type:a,value:"my_solution"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:K},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:s},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:G},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:s},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:Y}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:N}]},{type:a,value:s},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:"\n        result "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:k}]},{type:a,value:bm},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:k}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,I]},children:[{type:a,value:J}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"# 자릿수가 올라갈 때 추가할 수"}]},{type:a,value:"\n        c "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:k}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:w}]},{type:a,value:af},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"# l1, l2 모두 None이 될 때까지 반복"}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:al}]},{type:a,value:am},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aL}]},{type:a,value:G},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:"\n            a"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:an},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:k}]},{type:a,value:K},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:ae},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:H}]},{type:a,value:am},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:Z}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:G},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:ae},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:H}]},{type:a,value:aM},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:Z}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:w}]},{type:a,value:ao},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"# 더했을 때 10이 넘어가면 다음 자리에 1 추가"}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:H}]},{type:a,value:" a "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:L}]},{type:a,value:an},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:L}]},{type:a,value:bn},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:"\u003E="}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:ap}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:bo},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:k}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:"a "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:L}]},{type:a,value:an},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:L}]},{type:a,value:" c"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:"%"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:ap}]},{type:a,value:"\n                c "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:k}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:P}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:Z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:bo},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:aN}]},{type:a,value:an},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:L}]},{type:a,value:" c\n                c "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:k}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:w}]},{type:a,value:ao},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:H}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:"not"}]},{type:a,value:bp},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:"\n                result "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:k}]},{type:a,value:bm},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:k}]},{type:a,value:s},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:Z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:"\n                curr_node"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:k}]},{type:a,value:s},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:"\n                curr_node "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:k}]},{type:a,value:" curr_node"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:r}]},{type:a,value:"\n\n            l1 "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:k}]},{type:a,value:K},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:H}]},{type:a,value:am},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:Z}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,I]},children:[{type:a,value:J}]},{type:a,value:"\n            l2 "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:k}]},{type:a,value:G},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:H}]},{type:a,value:aM},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:Z}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,I]},children:[{type:a,value:J}]},{type:a,value:af},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"# c가 남아있다면 마지막에 추가"}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:H}]},{type:a,value:bn},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:N}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:"\n            curr_node"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:k}]},{type:a,value:s},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:"c"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:_}]},{type:a,value:" result\n"}]}]}]},{type:a,value:i}]},{type:a,value:i}]},{type:a,value:i},{type:b,tag:ad,props:{id:bb},children:[{type:b,tag:v,props:{href:"#%EB%AC%B8%EC%A0%9C-%ED%92%80%EC%9D%B4",ariaHidden:A,tabIndex:B},children:[{type:b,tag:c,props:{className:[C,D]},children:[]}]},{type:a,value:bc}]},{type:a,value:i},{type:b,tag:aq,props:{id:bd},children:[{type:b,tag:v,props:{href:"#1-%EC%9E%90%EB%A3%8C%ED%98%95-%EB%B3%80%ED%99%98",ariaHidden:A,tabIndex:B},children:[{type:b,tag:c,props:{className:[C,D]},children:[]}]},{type:a,value:be}]},{type:a,value:i},{type:b,tag:$,props:{},children:[{type:a,value:i},{type:b,tag:M,props:{},children:[{type:a,value:"연결 리스트를 문자열로 이어 붙인 다음 숫자로 변환하고 이를 모두 계산한 다음 다시 연결 리스트로 변환한다면?"}]},{type:a,value:i},{type:b,tag:M,props:{},children:[{type:a,value:"풀이는 가능하나 여러모로 부족한 느낌이 든다..."}]},{type:a,value:i}]},{type:a,value:i},{type:b,tag:aB,props:{},children:[{type:a,value:i},{type:b,tag:aC,props:{},children:[{type:a,value:aD}]},{type:a,value:i},{type:b,tag:E,props:{markdown:P},children:[{type:a,value:i},{type:b,tag:E,props:{className:[Q]},children:[{type:b,tag:R,props:{className:[S,T]},children:[{type:b,tag:t,props:{},children:[{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ar}]},{type:a,value:" typing "},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:as}]},{type:a,value:" List\n\n\n"},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:U}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,V]},children:[{type:a,value:aE}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:W},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:F}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,z]},children:[{type:a,value:aF}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:aG},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:r}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,I]},children:[{type:a,value:J}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:aH},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:ae},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:k}]},{type:a,value:aI},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:k}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:r}]},{type:a,value:aJ},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:U}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,V]},children:[{type:a,value:aK}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:W},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:F}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,z]},children:[{type:a,value:"solution1"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:K},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:s},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:G},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:s},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:Y}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:N}]},{type:a,value:s},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"# 연결 리스트를 역순으로 뒤집는 함수 (206번 문제 참고)"}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:F}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,z]},children:[{type:a,value:aO}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:"head"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:s},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:Y}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:N}]},{type:a,value:s},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:"\n            node"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:" prev "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:k}]},{type:a,value:bq},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,I]},children:[{type:a,value:J}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:al}]},{type:a,value:aa},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:at},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:r}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:aa},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:k}]},{type:a,value:aa},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:r}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:" prev\n                prev"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:" node "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:k}]},{type:a,value:aa},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:r}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:_}]},{type:a,value:" prev\n\n        "},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"# 연결 리스트를 파이썬의 리스트로 변환하는 함수"}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:F}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,z]},children:[{type:a,value:"to_list"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:br},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:s},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:Y}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:N}]},{type:a,value:" List"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:aP}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:" List "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:k}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:aQ}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:aR}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:al}]},{type:a,value:aa},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:at},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:aP}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:"append"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:br},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:bs},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:bt},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:k}]},{type:a,value:aa},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:r}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:_}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:aP}]},{type:a,value:af},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"# 리스트를 연결 리스트로 변환하는 함수"}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:F}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,z]},children:[{type:a,value:"to_reversed_linked_list"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:"result"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:ag}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:Y}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:N}]},{type:a,value:s},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:"\n            prev"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:" ListNode "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:k}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,I]},children:[{type:a,value:J}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:bu}]},{type:a,value:" r "},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:bv}]},{type:a,value:bp},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:bt},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:k}]},{type:a,value:s},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:"r"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:"\n                node"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:k}]},{type:a,value:" prev\n                prev "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:k}]},{type:a,value:" node\n            "},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:_}]},{type:a,value:" node\n\n        "},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"# 실제로 덧셈을 수행하는 부분"}]},{type:a,value:"\n        a "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:k}]},{type:a,value:bw},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:aO},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:"l1"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:"\n        b "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:k}]},{type:a,value:bw},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:aO},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:"l2"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"# result_str = int(''.join(str(e) for e in a)) + int(''.join(str(e) for e in b))"}]},{type:a,value:"\n        result_str "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:k}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:aS}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,aT]},children:[{type:a,value:aU}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:aV},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:bx}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:ag}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:aW},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:L}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:aS}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,aT]},children:[{type:a,value:aU}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:aV},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:bx}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:ag}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:" b"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:_}]},{type:a,value:" to_reversed_linked_list"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:ag}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:"result_str"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:i}]}]}]},{type:a,value:i}]},{type:a,value:i}]},{type:a,value:i},{type:b,tag:aq,props:{id:bf},children:[{type:b,tag:v,props:{href:"#2-%EC%A0%84%EA%B0%80%EC%82%B0%EA%B8%B0-%EA%B5%AC%ED%98%84",ariaHidden:A,tabIndex:B},children:[{type:b,tag:c,props:{className:[C,D]},children:[]}]},{type:a,value:bg}]},{type:a,value:i},{type:b,tag:aB,props:{},children:[{type:a,value:i},{type:b,tag:aC,props:{},children:[{type:a,value:aD}]},{type:a,value:i},{type:b,tag:E,props:{markdown:P},children:[{type:a,value:i},{type:b,tag:E,props:{className:[Q]},children:[{type:b,tag:R,props:{className:[S,T]},children:[{type:b,tag:t,props:{},children:[{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:U}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,V]},children:[{type:a,value:aE}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:W},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:F}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,z]},children:[{type:a,value:aF}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:aG},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:r}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,I]},children:[{type:a,value:J}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:aH},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:ae},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:k}]},{type:a,value:aI},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:k}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:r}]},{type:a,value:aJ},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:U}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,V]},children:[{type:a,value:aK}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:W},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:F}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,z]},children:[{type:a,value:"solution2"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:K},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:s},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:G},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:s},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:Y}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:N}]},{type:a,value:s},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:"\n        root "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:k}]},{type:a,value:" head "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:k}]},{type:a,value:s},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:"\n        carry "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:k}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:w}]},{type:a,value:af},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"# l1과 l2는 전가산기의 A, B의 역할과 동일"}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:al}]},{type:a,value:am},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aL}]},{type:a,value:aM},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aL}]},{type:a,value:by},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:au}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:k}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:w}]},{type:a,value:ao},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"# 두 입력값의 합 계산"}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:H}]},{type:a,value:K},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:at},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:au}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:aN}]},{type:a,value:K},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:"val\n                l1 "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:k}]},{type:a,value:K},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:r}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:H}]},{type:a,value:G},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:at},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:au}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:aN}]},{type:a,value:G},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:"val\n                l2 "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:k}]},{type:a,value:G},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:r}]},{type:a,value:ao},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"# 몫(자리올림수)과 나머지(값) 계산"}]},{type:a,value:"\n            carry"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:" val "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:k}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:aw}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:au}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:L}]},{type:a,value:by},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:ap}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:"\n            head"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:k}]},{type:a,value:s},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:bs},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:"\n            head "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:k}]},{type:a,value:bq},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:r}]},{type:a,value:af},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:_}]},{type:a,value:" root"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:r}]},{type:a,value:i}]}]}]},{type:a,value:i}]},{type:a,value:i}]},{type:a,value:i},{type:b,tag:ad,props:{id:bh},children:[{type:b,tag:v,props:{href:"#%EB%B0%B0%EC%9A%B4-%EC%A0%90",ariaHidden:A,tabIndex:B},children:[{type:b,tag:c,props:{className:[C,D]},children:[]}]},{type:a,value:bi}]},{type:a,value:i},{type:b,tag:aq,props:{id:bj},children:[{type:b,tag:v,props:{href:"#functoolsreduce",ariaHidden:A,tabIndex:B},children:[{type:b,tag:c,props:{className:[C,D]},children:[]}]},{type:b,tag:t,props:{},children:[{type:a,value:av}]}]},{type:a,value:i},{type:b,tag:$,props:{},children:[{type:a,value:i},{type:b,tag:M,props:{},children:[{type:a,value:"풀이 1번에서 숫자형 리스트를 문자형으로 바꿨다가 다시 숫자형으로 바꾸는 코드를 "},{type:b,tag:t,props:{},children:[{type:a,value:av}]},{type:a,value:"를 통해 숫자형 리스트에서 바로 숫자형으로 바꿀 수 있다. "},{type:b,tag:t,props:{},children:[{type:a,value:z}]},{type:a,value:" 모듈은 '함수를 다루는 함수'를 뜻하는 고계 함수(Higher-Order Function)를 지원하며, 리트코드에 기본적으로 임포트되어 있다."}]},{type:a,value:i}]},{type:a,value:i},{type:b,tag:E,props:{className:[Q]},children:[{type:b,tag:R,props:{className:[S,T]},children:[{type:b,tag:t,props:{},children:[{type:a,value:ah},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"# before"}]},{type:a,value:ai},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:aS}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,aT]},children:[{type:a,value:aU}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:aV},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:ag}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:"e"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:bu}]},{type:a,value:" e "},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:bv}]},{type:a,value:aW},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:i}]}]}]},{type:a,value:i},{type:b,tag:E,props:{className:[Q]},children:[{type:b,tag:R,props:{className:[S,T]},children:[{type:b,tag:t,props:{},children:[{type:a,value:ah},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"# after"}]},{type:a,value:ai},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ar}]},{type:a,value:bz},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:as}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:ab}]},{type:a,value:ai},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:ab}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:"lambda"}]},{type:a,value:" x"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:bA},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:ap}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:"*"}]},{type:a,value:" x "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:L}]},{type:a,value:bA},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:aW},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:i}]}]}]},{type:a,value:i},{type:b,tag:$,props:{},children:[{type:a,value:i},{type:b,tag:M,props:{},children:[{type:b,tag:t,props:{},children:[{type:a,value:ab}]},{type:a,value:" 함수를 사용할 때 "},{type:b,tag:t,props:{},children:[{type:a,value:g}]},{type:a,value:" 모듈의 "},{type:b,tag:t,props:{},children:[{type:a,value:bB}]},{type:a,value:"와 "},{type:b,tag:t,props:{},children:[{type:a,value:bC}]},{type:a,value:" 함수를 함께 사용하면 좀 더 가독성을 높일 수 있다."}]},{type:a,value:i}]},{type:a,value:i},{type:b,tag:E,props:{className:[Q]},children:[{type:b,tag:R,props:{className:[S,T]},children:[{type:b,tag:t,props:{},children:[{type:a,value:ah},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ar}]},{type:a,value:bz},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:as}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:ab}]},{type:a,value:ai},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ar}]},{type:a,value:" operator "},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:as}]},{type:a,value:" add"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:" mul\n\n  "},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:ab}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:bB},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:aQ}]},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:P}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:bD}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:bE}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:bF}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:bG}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:aR}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:ah},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"# 15"}]},{type:a,value:ai},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:ab}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:bC},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:aQ}]},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:P}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:bD}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:bE}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:bF}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:bG}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:aR}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:ah},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"# 120"}]},{type:a,value:i}]}]}]},{type:a,value:i},{type:b,tag:aq,props:{id:aw},children:[{type:b,tag:v,props:{href:"#divmod",ariaHidden:A,tabIndex:B},children:[{type:b,tag:c,props:{className:[C,D]},children:[]}]},{type:b,tag:t,props:{},children:[{type:a,value:bk}]}]},{type:a,value:i},{type:b,tag:$,props:{},children:[{type:a,value:i},{type:b,tag:M,props:{},children:[{type:a,value:"풀이 2번의 내장 함수 "},{type:b,tag:t,props:{},children:[{type:a,value:"divmod(x, y)"}]},{type:a,value:"는 "},{type:b,tag:t,props:{},children:[{type:a,value:"x"}]},{type:a,value:"를 "},{type:b,tag:t,props:{},children:[{type:a,value:"y"}]},{type:a,value:"로 나누었을 때 몫과 나머지로 구성된 튜플을 리턴한다. 즉, "},{type:b,tag:t,props:{},children:[{type:a,value:"(x \u002F\u002F y, x % y)"}]},{type:a,value:"와 같다."}]},{type:a,value:i}]},{type:a,value:i},{type:b,tag:ad,props:{id:ak},children:[{type:b,tag:v,props:{href:"#%EC%B6%9C%EC%B2%98",ariaHidden:A,tabIndex:B},children:[{type:b,tag:c,props:{className:[C,D]},children:[]}]},{type:a,value:ak}]},{type:a,value:i},{type:b,tag:$,props:{},children:[{type:a,value:i},{type:b,tag:M,props:{},children:[{type:a,value:"박상길, 『파이썬 알고리즘 인터뷰』, 책만(2020), p221-228.\n"},{type:b,tag:$,props:{},children:[{type:a,value:i},{type:b,tag:M,props:{},children:[{type:b,tag:v,props:{href:"https:\u002F\u002Fwww.onlybook.co.kr\u002Fentry\u002Falgorithm-interview",rel:[ax,ay,az],target:aA},children:[{type:a,value:"도서 정보"}]}]},{type:a,value:i},{type:b,tag:M,props:{},children:[{type:b,tag:v,props:{href:"https:\u002F\u002Fgithub.com\u002Fonlybooks\u002Falgorithm-interview",rel:[ax,ay,az],target:aA},children:[{type:a,value:"GitHub"}]}]},{type:a,value:i}]},{type:a,value:i}]},{type:a,value:i}]}]},text:"\n## 문제 링크\n\nhttps:\u002F\u002Fleetcode.com\u002Fproblems\u002Fadd-two-numbers\u002F\n\n## 나의 풀이\n\n\u003Cdetails\u003E\n\u003Csummary\u003E소스 코드\u003C\u002Fsummary\u003E\n\u003Cdiv markdown=\"1\"\u003E\n\n```python\nclass ListNode:\n    def __init__(self, val=0, next=None):\n        self.val = val\n        self.next = next\n\n\nclass Solution:\n    def my_solution(self, l1: ListNode, l2: ListNode) -\u003E ListNode:\n        result = curr_node = None\n        # 자릿수가 올라갈 때 추가할 수\n        c = 0\n\n        # l1, l2 모두 None이 될 때까지 반복\n        while l1 or l2:\n            a, b = l1.val if l1 else 0, l2.val if l2 else 0\n\n            # 더했을 때 10이 넘어가면 다음 자리에 1 추가\n            if a + b + c \u003E= 10:\n                a = (a + b + c) % 10\n                c = 1\n            else:\n                a += b + c\n                c = 0\n\n            if not result:\n                result = curr_node = ListNode(a)\n            else:\n                curr_node.next = ListNode(a)\n                curr_node = curr_node.next\n\n            l1 = l1.next if l1 else None\n            l2 = l2.next if l2 else None\n\n        # c가 남아있다면 마지막에 추가\n        if c \u003E 0:\n            curr_node.next = ListNode(c)\n        return result\n```\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdetails\u003E\n\n## 문제 풀이\n\n### 1. 자료형 변환\n\n- 연결 리스트를 문자열로 이어 붙인 다음 숫자로 변환하고 이를 모두 계산한 다음 다시 연결 리스트로 변환한다면?\n- 풀이는 가능하나 여러모로 부족한 느낌이 든다...\n\n\u003Cdetails\u003E\n\u003Csummary\u003E소스 코드\u003C\u002Fsummary\u003E\n\u003Cdiv markdown=\"1\"\u003E\n\n```python\nfrom typing import List\n\n\nclass ListNode:\n    def __init__(self, val=0, next=None):\n        self.val = val\n        self.next = next\n\n\nclass Solution:\n    def solution1(self, l1: ListNode, l2: ListNode) -\u003E ListNode:\n        # 연결 리스트를 역순으로 뒤집는 함수 (206번 문제 참고)\n        def reverse_list(head: ListNode) -\u003E ListNode:\n            node, prev = head, None\n            while node:\n                next, node.next = node.next, prev\n                prev, node = node, next\n            return prev\n\n        # 연결 리스트를 파이썬의 리스트로 변환하는 함수\n        def to_list(node: ListNode) -\u003E List:\n            list: List = []\n            while node:\n                list.append(node.val)\n                node = node.next\n            return list\n\n        # 리스트를 연결 리스트로 변환하는 함수\n        def to_reversed_linked_list(result: str) -\u003E ListNode:\n            prev: ListNode = None\n            for r in result:\n                node = ListNode(r)\n                node.next = prev\n                prev = node\n            return node\n\n        # 실제로 덧셈을 수행하는 부분\n        a = to_list(reverse_list(l1))\n        b = to_list(reverse_list(l2))\n        # result_str = int(''.join(str(e) for e in a)) + int(''.join(str(e) for e in b))\n        result_str = int(''.join(map(str, a))) + int(''.join(map(str, b)))\n        return to_reversed_linked_list(str(result_str))\n```\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdetails\u003E\n\n### 2. 전가산기 구현\n\n\u003Cdetails\u003E\n\u003Csummary\u003E소스 코드\u003C\u002Fsummary\u003E\n\u003Cdiv markdown=\"1\"\u003E\n\n```python\nclass ListNode:\n    def __init__(self, val=0, next=None):\n        self.val = val\n        self.next = next\n\n\nclass Solution:\n    def solution2(self, l1: ListNode, l2: ListNode) -\u003E ListNode:\n        root = head = ListNode(0)\n        carry = 0\n\n        # l1과 l2는 전가산기의 A, B의 역할과 동일\n        while l1 or l2 or carry:\n            sum = 0\n\n            # 두 입력값의 합 계산\n            if l1:\n                sum += l1.val\n                l1 = l1.next\n            if l2:\n                sum += l2.val\n                l2 = l2.next\n\n            # 몫(자리올림수)과 나머지(값) 계산\n            carry, val = divmod(sum + carry, 10)\n            head.next = ListNode(val)\n            head = head.next\n\n        return root.next\n```\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdetails\u003E\n\n## 배운 점\n\n### `functools.reduce()`\n\n- 풀이 1번에서 숫자형 리스트를 문자형으로 바꿨다가 다시 숫자형으로 바꾸는 코드를 `functools.reduce()`를 통해 숫자형 리스트에서 바로 숫자형으로 바꿀 수 있다. `function` 모듈은 '함수를 다루는 함수'를 뜻하는 고계 함수(Higher-Order Function)를 지원하며, 리트코드에 기본적으로 임포트되어 있다.\n\n```python\n  # before\n  int(''.join(str(e) for e in a))\n```\n```python\n  # after\n  from functools import reduce\n  reduce(lambda x, y: 10 * x + y, a, 0)\n  ```\n- `reduce` 함수를 사용할 때 `operator` 모듈의 `add`와 `mul` 함수를 함께 사용하면 좀 더 가독성을 높일 수 있다.\n```python\n  from functools import reduce\n  from operator import add, mul\n\n  reduce(add, [1, 2, 3, 4, 5])  # 15\n  reduce(mul, [1, 2, 3, 4, 5])  # 120\n```\n\n### `divmod()`\n\n- 풀이 2번의 내장 함수 `divmod(x, y)`는 `x`를 `y`로 나누었을 때 몫과 나머지로 구성된 튜플을 리턴한다. 즉, `(x \u002F\u002F y, x % y)`와 같다.\n\n## 출처\n\n- 박상길, 『파이썬 알고리즘 인터뷰』, 책만(2020), p221-228.\n  - [도서 정보](https:\u002F\u002Fwww.onlybook.co.kr\u002Fentry\u002Falgorithm-interview)\n  - [GitHub](https:\u002F\u002Fgithub.com\u002Fonlybooks\u002Falgorithm-interview)\n",dir:"\u002Fposts\u002F2021\u002F05\u002F05",path:"\u002Fposts\u002F2021\u002F05\u002F05\u002Fleetcode-2",extension:".md",createdAt:"2021-05-05T13:55:14.000Z",updatedAt:"2022-06-26T10:01:49.000Z"},isErrorPage:O,isDarkMode:O,isScrolled:O,isMobile:O,isTablet:O,hasHeaderImage:aX,isMobileMenuOpened:O,headerImage:"",perPage:10},serverRendered:aX,routePath:"\u002Fposts\u002Fleetcode-2",config:{_app:{basePath:"\u002F",assetsPath:"\u002F_nuxt\u002F",cdnURL:aY},content:{dbHash:"922083d8"}},colorMode:{preference:bH,value:bH,unknown:aX,forced:O}}}("text","element","span","token","punctuation"," ","operator","keyword","\n","builtin","=",":",",","(",")",".","number","next"," ListNode","code","comment","a","0","\n            ","\n        ","function","true",-1,"icon","icon-link","div","def"," l2","if","boolean","None"," l1","+","li","\u003E",false,"1","nuxt-content-highlight","pre","language-python","line-numbers","class","class-name","\n    ","self","-","else","return","ul"," node","reduce",2,"h2","val ","\n\n        ","str","  ","\n  ",3,"출처","while"," l1 "," b ","\n\n            ","10","h3","from","import","\n                ","sum","functools.reduce()","divmod","nofollow","noopener","noreferrer","_blank","details","summary","소스 코드","ListNode","__init__"," val","\n        self"," val\n        self","\n\n\n","Solution","or"," l2 ","+=","reverse_list","list","[","]","int","string","''","join"," a",true,null,"문제-링크","문제 링크","나의-풀이","나의 풀이","문제-풀이","문제 풀이","1-자료형-변환","1. 자료형 변환","2-전가산기-구현","2. 전가산기 구현","배운-점","배운 점","functoolsreduce","divmod()","https:\u002F\u002Fleetcode.com\u002Fproblems\u002Fadd-two-numbers\u002F"," curr_node "," c ","\n                a "," result"," head","node","val","\n                node ","for","in"," to_list","map"," carry"," functools "," y","add","mul","2","3","4","5","system"));