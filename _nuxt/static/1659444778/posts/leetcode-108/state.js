window.__NUXT__=(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au,av,aw,ax,ay,az,aA,aB,aC,aD,aE,aF,aG,aH,aI,aJ,aK,aL,aM,aN,aO,aP,aQ,aR,aS,aT,aU,aV,aW,aX,aY){return {staticAssetsBase:"\u002F_nuxt\u002Fstatic\u002F1659444778",layout:"default",error:ah,state:{post:{slug:"leetcode-108",description:"Convert Sorted Array to Binary Search Tree",title:"LeetCode 108번 문제",tags:"algorithm, leetcode, python, tree, bst",toc:[{id:ai,depth:H,text:aj},{id:ak,depth:H,text:al},{id:am,depth:H,text:an},{id:ao,depth:3,text:ap},{id:I,depth:H,text:I}],body:{type:"root",children:[{type:b,tag:J,props:{id:ai},children:[{type:b,tag:s,props:{href:"#%EB%AC%B8%EC%A0%9C-%EB%A7%81%ED%81%AC",ariaHidden:A,tabIndex:B},children:[{type:b,tag:c,props:{className:[C,D]},children:[]}]},{type:a,value:aj}]},{type:a,value:g},{type:b,tag:"p",props:{},children:[{type:b,tag:s,props:{href:aq,rel:[$,aa,ab],target:ac},children:[{type:a,value:aq}]}]},{type:a,value:g},{type:b,tag:J,props:{id:ak},children:[{type:b,tag:s,props:{href:"#%EB%82%98%EC%9D%98-%ED%92%80%EC%9D%B4",ariaHidden:A,tabIndex:B},children:[{type:b,tag:c,props:{className:[C,D]},children:[]}]},{type:a,value:al}]},{type:a,value:g},{type:b,tag:K,props:{},children:[{type:a,value:g},{type:b,tag:E,props:{},children:[{type:a,value:"이진 탐색 트리(BST)를 응용하여 재귀 호출하면서 해결하였다."}]},{type:a,value:g}]},{type:a,value:g},{type:b,tag:ar,props:{},children:[{type:a,value:g},{type:b,tag:as,props:{},children:[{type:a,value:at}]},{type:a,value:g},{type:b,tag:L,props:{markdown:F},children:[{type:a,value:g},{type:b,tag:L,props:{className:[au]},children:[{type:b,tag:av,props:{className:[aw,ax]},children:[{type:b,tag:G,props:{},children:[{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:ay}]},{type:a,value:az},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:aA}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:aB},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:N}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,O]},children:[{type:a,value:P}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:R}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,S]},children:[{type:a,value:aC}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:aD},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:U}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:aE},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:y}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:aF},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:y}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:aG},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:aH},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:aI},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:V},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:aJ},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:W},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:aK},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:N}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,O]},children:[{type:a,value:"MySolution1"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:R}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,S]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,Y]},children:[{type:a,value:aL}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:ad}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:aM}]},{type:a,value:aN},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:P},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:aO}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:aP}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:aQ},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:Z}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:y}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,ae]},children:[{type:a,value:"# 인덱스 설정"}]},{type:a,value:"\n        start"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:" end "},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:U}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,Y]},children:[{type:a,value:aR}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:ad}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:F}]},{type:a,value:aS},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:"start "},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:af}]},{type:a,value:" end"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:aT}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:aU}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,ae]},children:[{type:a,value:"# 현재 노드와 양쪽 자식 노드 구성"}]},{type:a,value:"\n        root "},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:aV},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:aW},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:V},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:_},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:z},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:U}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:aW},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:W},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:_},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:z},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:af}]},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:F}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:Z}]},{type:a,value:" root\n"}]}]}]},{type:a,value:g}]},{type:a,value:g}]},{type:a,value:g},{type:b,tag:J,props:{id:am},children:[{type:b,tag:s,props:{href:"#%EB%AC%B8%EC%A0%9C-%ED%92%80%EC%9D%B4",ariaHidden:A,tabIndex:B},children:[{type:b,tag:c,props:{className:[C,D]},children:[]}]},{type:a,value:an}]},{type:a,value:g},{type:b,tag:"h3",props:{id:ao},children:[{type:b,tag:s,props:{href:"#1-%EC%9D%B4%EC%A7%84-%EA%B2%80%EC%83%89-%EA%B2%B0%EA%B3%BC%EB%A1%9C-%ED%8A%B8%EB%A6%AC-%EA%B5%AC%EC%84%B1",ariaHidden:A,tabIndex:B},children:[{type:b,tag:c,props:{className:[C,D]},children:[]}]},{type:a,value:ap}]},{type:a,value:g},{type:b,tag:K,props:{},children:[{type:a,value:g},{type:b,tag:E,props:{},children:[{type:a,value:"로직은 같지만, 위의 방법처럼 굳이 "},{type:b,tag:G,props:{},children:[{type:a,value:"start"}]},{type:a,value:"와 "},{type:b,tag:G,props:{},children:[{type:a,value:"end"}]},{type:a,value:" 변수를 생성할 필요 없이 "},{type:b,tag:G,props:{},children:[{type:a,value:v}]},{type:a,value:" 하나로 슬라이싱을 수행하는 방법이다."}]},{type:a,value:g}]},{type:a,value:g},{type:b,tag:ar,props:{},children:[{type:a,value:g},{type:b,tag:as,props:{},children:[{type:a,value:at}]},{type:a,value:g},{type:b,tag:L,props:{markdown:F},children:[{type:a,value:g},{type:b,tag:L,props:{className:[au]},children:[{type:b,tag:av,props:{className:[aw,ax]},children:[{type:b,tag:G,props:{},children:[{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:ay}]},{type:a,value:az},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:aA}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:aB},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:N}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,O]},children:[{type:a,value:P}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:R}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,S]},children:[{type:a,value:aC}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:aD},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:U}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:aE},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:y}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:aF},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:y}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:aG},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:aH},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:aI},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:V},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:aJ},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:W},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:aK},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:N}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,O]},children:[{type:a,value:"Solution1"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:R}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,S]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,Y]},children:[{type:a,value:aL}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:ad}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:aM}]},{type:a,value:aN},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:P},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:aO}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:aP}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:aQ},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:Z}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:y}]},{type:a,value:aS},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,Y]},children:[{type:a,value:aR}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:aT}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:aU}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,ae]},children:[{type:a,value:"# 분할 정복으로 이진 검색 결과 트리 구성"}]},{type:a,value:"\n        node "},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:aV},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:aX},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:V},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:_},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:z},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:aX},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:W},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:i}]},{type:a,value:_},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:z},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:af}]},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:F}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:Z}]},{type:a,value:" node\n"}]}]}]},{type:a,value:g}]},{type:a,value:g}]},{type:a,value:g},{type:b,tag:J,props:{id:I},children:[{type:b,tag:s,props:{href:"#%EC%B6%9C%EC%B2%98",ariaHidden:A,tabIndex:B},children:[{type:b,tag:c,props:{className:[C,D]},children:[]}]},{type:a,value:I}]},{type:a,value:g},{type:b,tag:K,props:{},children:[{type:a,value:g},{type:b,tag:E,props:{},children:[{type:a,value:"박상길, 『파이썬 알고리즘 인터뷰』, 책만(2020), p425-427.\n"},{type:b,tag:K,props:{},children:[{type:a,value:g},{type:b,tag:E,props:{},children:[{type:b,tag:s,props:{href:"https:\u002F\u002Fwww.onlybook.co.kr\u002Fentry\u002Falgorithm-interview",rel:[$,aa,ab],target:ac},children:[{type:a,value:"도서 정보"}]}]},{type:a,value:g},{type:b,tag:E,props:{},children:[{type:b,tag:s,props:{href:"https:\u002F\u002Fgithub.com\u002Fonlybooks\u002Falgorithm-interview",rel:[$,aa,ab],target:ac},children:[{type:a,value:"GitHub"}]}]},{type:a,value:g}]},{type:a,value:g}]},{type:a,value:g}]}]},text:"\n## 문제 링크\n\nhttps:\u002F\u002Fleetcode.com\u002Fproblems\u002Fconvert-sorted-array-to-binary-search-tree\u002F\n\n## 나의 풀이\n\n- 이진 탐색 트리(BST)를 응용하여 재귀 호출하면서 해결하였다.\n\n\u003Cdetails\u003E\n\u003Csummary\u003E소스 코드\u003C\u002Fsummary\u003E\n\u003Cdiv markdown=\"1\"\u003E\n\n```python\nfrom typing import List, Optional\nclass TreeNode:\n    def __init__(self, val=0, left=None, right=None):\n        self.val = val\n        self.left = left\n        self.right = right\nclass MySolution1:\n    def sortedArrayToBST(self, nums: List[int]) -\u003E Optional[TreeNode]:\n        if not nums:\n            return None\n        # 인덱스 설정\n        start, end = 0, len(nums) - 1\n        mid = (start + end) \u002F\u002F 2\n        # 현재 노드와 양쪽 자식 노드 구성\n        root = TreeNode(nums[mid])\n        root.left = self.sortedArrayToBST(nums[0:mid])\n        root.right = self.sortedArrayToBST(nums[mid+1:])\n        return root\n```\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdetails\u003E\n\n## 문제 풀이\n\n### 1. 이진 검색 결과로 트리 구성\n\n- 로직은 같지만, 위의 방법처럼 굳이 `start`와 `end` 변수를 생성할 필요 없이 `mid` 하나로 슬라이싱을 수행하는 방법이다.\n\n\u003Cdetails\u003E\n\u003Csummary\u003E소스 코드\u003C\u002Fsummary\u003E\n\u003Cdiv markdown=\"1\"\u003E\n\n```python\nfrom typing import List, Optional\nclass TreeNode:\n    def __init__(self, val=0, left=None, right=None):\n        self.val = val\n        self.left = left\n        self.right = right\nclass Solution1:\n    def sortedArrayToBST(self, nums: List[int]) -\u003E Optional[TreeNode]:\n        if not nums:\n            return None\n        mid = len(nums) \u002F\u002F 2\n        # 분할 정복으로 이진 검색 결과 트리 구성\n        node = TreeNode(nums[mid])\n        node.left = self.sortedArrayToBST(nums[:mid])\n        node.right = self.sortedArrayToBST(nums[mid+1:])\n        return node\n```\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdetails\u003E\n\n## 출처\n\n- 박상길, 『파이썬 알고리즘 인터뷰』, 책만(2020), p425-427.\n  - [도서 정보](https:\u002F\u002Fwww.onlybook.co.kr\u002Fentry\u002Falgorithm-interview)\n  - [GitHub](https:\u002F\u002Fgithub.com\u002Fonlybooks\u002Falgorithm-interview)\n",dir:"\u002Fposts\u002F2021\u002F08\u002F23",path:"\u002Fposts\u002F2021\u002F08\u002F23\u002Fleetcode-108",extension:".md",createdAt:"2021-08-23T12:50:49.000Z",updatedAt:"2022-06-26T10:01:49.000Z"},isErrorPage:w,isDarkMode:w,isScrolled:w,isMobile:w,isTablet:w,hasHeaderImage:ag,isMobileMenuOpened:w,headerImage:"",perPage:10},serverRendered:ag,routePath:"\u002Fposts\u002Fleetcode-108",config:{_app:{basePath:"\u002F",assetsPath:"\u002F_nuxt\u002F",cdnURL:ah},content:{dbHash:"06562440"}},colorMode:{preference:aY,value:aY,unknown:ag,forced:w}}}("text","element","span","token","punctuation","operator","\n"," ","=","keyword",":",".","(",")",",","[","]","number","a","nums","\n        ","mid",false,"boolean","None","sortedArrayToBST","true",-1,"icon","icon-link","li","1","code",2,"출처","h2","ul","div"," List","class","class-name","TreeNode","\n    ","def","function","self","0","left ","right "," nums","builtin","return"," self","nofollow","noopener","noreferrer","_blank","-","comment","+",true,null,"문제-링크","문제 링크","나의-풀이","나의 풀이","문제-풀이","문제 풀이","1-이진-검색-결과로-트리-구성","1. 이진 검색 결과로 트리 구성","https:\u002F\u002Fleetcode.com\u002Fproblems\u002Fconvert-sorted-array-to-binary-search-tree\u002F","details","summary","소스 코드","nuxt-content-highlight","pre","language-python","line-numbers","from"," typing ","import"," Optional\n","__init__"," val"," left"," right","\n        self","val "," val\n        self"," left\n        self"," right\n","int","\u003E"," Optional","if","not","\n            ","len","\n        mid ","\u002F\u002F","2"," TreeNode","\n        root","\n        node","system"));