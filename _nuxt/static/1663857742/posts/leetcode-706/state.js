window.__NUXT__=(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au,av,aw,ax,ay,az,aA,aB,aC,aD,aE,aF,aG,aH,aI,aJ,aK,aL,aM,aN,aO,aP,aQ,aR,aS,aT,aU,aV,aW,aX,aY,aZ,a_,a$,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt){return {staticAssetsBase:"\u002F_nuxt\u002Fstatic\u002F1663857742",layout:"default",error:aQ,state:{post:{slug:"leetcode-706",description:"Design HashMap",title:"LeetCode 706번 문제",tags:"algorithm, leetcode, python, hash_table",toc:[{id:aR,depth:ae,text:aS},{id:aT,depth:ae,text:aU},{id:aV,depth:af,text:aW},{id:aX,depth:af,text:aY},{id:aZ,depth:ae,text:a_},{id:a$,depth:af,text:ba},{id:bb,depth:ae,text:bc},{id:bd,depth:af,text:be},{id:bf,depth:af,text:bg},{id:ar,depth:ae,text:ar}],body:{type:"root",children:[{type:b,tag:ag,props:{id:aR},children:[{type:b,tag:E,props:{href:"#%EB%AC%B8%EC%A0%9C-%EB%A7%81%ED%81%AC",ariaHidden:P,tabIndex:Q},children:[{type:b,tag:c,props:{className:[R,S]},children:[]}]},{type:a,value:aS}]},{type:a,value:h},{type:b,tag:"p",props:{},children:[{type:b,tag:E,props:{href:bh,rel:[as,at,au],target:av},children:[{type:a,value:bh}]}]},{type:a,value:h},{type:b,tag:ag,props:{id:aT},children:[{type:b,tag:E,props:{href:"#%EB%82%98%EC%9D%98-%ED%92%80%EC%9D%B4",ariaHidden:P,tabIndex:Q},children:[{type:b,tag:c,props:{className:[R,S]},children:[]}]},{type:a,value:aU}]},{type:a,value:h},{type:b,tag:ah,props:{id:aV},children:[{type:b,tag:E,props:{href:"#%EC%B2%AB-%EB%B2%88%EC%A7%B8-%EC%8B%9C%EB%8F%84",ariaHidden:P,tabIndex:Q},children:[{type:b,tag:c,props:{className:[R,S]},children:[]}]},{type:a,value:aW}]},{type:a,value:h},{type:b,tag:U,props:{},children:[{type:a,value:h},{type:b,tag:q,props:{},children:[{type:a,value:"테이블(리스트)을 키의 최대 개수만큼 미리 할당하여 사용하였다."}]},{type:a,value:h},{type:b,tag:q,props:{},children:[{type:a,value:"실행 시간은 빠르지만, 메모리 공간의 낭비가 심하며, 해시 테이블의 로직을 사용하지 않은 일종의 편법이므로 올바른 풀이법은 아니다."}]},{type:a,value:h}]},{type:a,value:h},{type:b,tag:aA,props:{},children:[{type:a,value:h},{type:b,tag:aB,props:{},children:[{type:a,value:aC}]},{type:a,value:h},{type:b,tag:$,props:{markdown:L},children:[{type:a,value:h},{type:b,tag:$,props:{className:[aD]},children:[{type:b,tag:aE,props:{className:[aF,aG]},children:[{type:b,tag:ai,props:{},children:[{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:aj}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,ak]},children:[{type:a,value:"MyHashMap1"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:al},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:F}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:am}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:H},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:V},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aH},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,K]},children:[{type:a,value:L}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:bi}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,K]},children:[{type:a,value:"10"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:"**"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,K]},children:[{type:a,value:"6"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:"+"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,K]},children:[{type:a,value:L}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:Z},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:F}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:aI}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:H},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:W}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,v]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:r},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:bj}]},{type:a,value:r},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:J}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:an},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:bk}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,K]},children:[{type:a,value:L}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:aw},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:ao},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:V},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:a,value:" value\n\n    "},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:F}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:an}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:H},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:W}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:r},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:M}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:a,value:Z},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:F}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:ao}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:H},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:W}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,v]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:V},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,K]},children:[{type:a,value:L}]},{type:a,value:h}]}]}]},{type:a,value:h}]},{type:a,value:h}]},{type:a,value:h},{type:b,tag:ah,props:{id:aX},children:[{type:b,tag:E,props:{href:"#%EB%91%90-%EB%B2%88%EC%A7%B8-%EC%8B%9C%EB%8F%84",ariaHidden:P,tabIndex:Q},children:[{type:b,tag:c,props:{className:[R,S]},children:[]}]},{type:a,value:aY}]},{type:a,value:h},{type:b,tag:U,props:{},children:[{type:a,value:h},{type:b,tag:q,props:{},children:[{type:a,value:"해시 테이블(리스트)의 공간을 적게 할당하는 대신 해시 충돌을 개별 체이닝 방식(연결 리스트)으로 처리하였다."}]},{type:a,value:h},{type:b,tag:q,props:{},children:[{type:a,value:"실행 시간은 첫 번째 시도에 비해 압도적으로 느리지만, 메모리 공간을 절약할 수 있다."}]},{type:a,value:h}]},{type:a,value:h},{type:b,tag:aA,props:{},children:[{type:a,value:h},{type:b,tag:aB,props:{},children:[{type:a,value:aC}]},{type:a,value:h},{type:b,tag:$,props:{markdown:L},children:[{type:a,value:h},{type:b,tag:$,props:{className:[aD]},children:[{type:b,tag:aE,props:{className:[aF,aG]},children:[{type:b,tag:ai,props:{},children:[{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:aj}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,ak]},children:[{type:a,value:ax}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:al},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:F}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:am}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:H},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,v]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,v]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,v]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:V},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:N},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:a,value:bl},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aa},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:a,value:bm},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:t}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:t}]},{type:a,value:bn},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:aj}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,ak]},children:[{type:a,value:"MyHashMap2"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:al},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:F}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:am}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:H},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:V},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:"hash_size "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,K]},children:[{type:a,value:"101"}]},{type:a,value:r},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:"# 테이블의 각 공간에 키와 값이 비어있는 노드를 미리 생성"}]},{type:a,value:V},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aH},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:a,value:ax},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:bi}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:"hash_size\n\n    "},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:F}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:aI}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:H},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:W}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,v]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:r},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:bj}]},{type:a,value:r},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:J}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:an},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:bk}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,K]},children:[{type:a,value:L}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:aw},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:ao},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:ap},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:"# 해당 해시 값의 연결 리스트 중 가장 마지막 위치에 노드 삽입"}]},{type:a,value:aJ},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:a,value:N},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:ab}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aK},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:a,value:r},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:ac}]},{type:a,value:O},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:"\n            curr "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:a,value:O},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:t}]},{type:a,value:"\n        curr"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:t}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:a,value:ay},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:Z},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:F}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:an}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:H},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:W}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:aJ},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:a,value:N},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:ab}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aK},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:a,value:r},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:"# 같은 해시 값을 가지는 연결 리스트를 순회"}]},{type:a,value:r},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:ac}]},{type:a,value:O},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:D},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:J}]},{type:a,value:O},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:N},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:ad}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:az},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:M}]},{type:a,value:O},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:"value\n            curr "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:a,value:O},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:t}]},{type:a,value:r},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:M}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,K]},children:[{type:a,value:L}]},{type:a,value:Z},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:F}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:ao}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:H},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:W}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,v]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:aJ},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:a,value:N},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:ab}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aK},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:a,value:bo},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,v]},children:[{type:a,value:w}]},{type:a,value:r},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:ac}]},{type:a,value:O},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:D},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:"# 삭제할 키를 찾으면 이전 노드와 다음 노드를 연결"}]},{type:a,value:D},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:J}]},{type:a,value:O},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:N},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:ad}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:bp},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:t}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:a,value:O},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:t}]},{type:a,value:bq},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:" curr "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:a,value:O},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:O},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:t}]},{type:a,value:h}]}]}]},{type:a,value:h}]},{type:a,value:h}]},{type:a,value:h},{type:b,tag:ag,props:{id:aZ},children:[{type:b,tag:E,props:{href:"#%EB%AC%B8%EC%A0%9C-%ED%92%80%EC%9D%B4",ariaHidden:P,tabIndex:Q},children:[{type:b,tag:c,props:{className:[R,S]},children:[]}]},{type:a,value:a_}]},{type:a,value:h},{type:b,tag:ah,props:{id:a$},children:[{type:b,tag:E,props:{href:"#%EA%B0%9C%EB%B3%84-%EC%B2%B4%EC%9D%B4%EB%8B%9D-%EB%B0%A9%EC%8B%9D%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%9C-%ED%95%B4%EC%8B%9C-%ED%85%8C%EC%9D%B4%EB%B8%94-%EA%B5%AC%ED%98%84",ariaHidden:P,tabIndex:Q},children:[{type:b,tag:c,props:{className:[R,S]},children:[]}]},{type:a,value:ba}]},{type:a,value:h},{type:b,tag:aA,props:{},children:[{type:a,value:h},{type:b,tag:aB,props:{},children:[{type:a,value:aC}]},{type:a,value:h},{type:b,tag:$,props:{markdown:L},children:[{type:a,value:h},{type:b,tag:$,props:{className:[aD]},children:[{type:b,tag:aE,props:{className:[aF,aG]},children:[{type:b,tag:ai,props:{},children:[{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:"from"}]},{type:a,value:" collections "},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:"import"}]},{type:a,value:" defaultdict\n\n\n"},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:aj}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,ak]},children:[{type:a,value:ax}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:al},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:F}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:am}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:H},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,v]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,v]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:V},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:N},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:a,value:bl},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aa},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:a,value:bm},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:t}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,v]},children:[{type:a,value:w}]},{type:a,value:bn},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:aj}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,ak]},children:[{type:a,value:"solution1"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:al},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:F}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:am}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:H},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:V},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:"size "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,K]},children:[{type:a,value:"1000"}]},{type:a,value:r},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:"# 존재하지 않는 키를 조회할 경우 디폴트로 연결 리스트의 노드 생성"}]},{type:a,value:V},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aH},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:a,value:" defaultdict"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:ax},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:Z},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:F}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:aI}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:H},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:W}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,v]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:aL},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:a,value:aM},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:ab}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aN},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:"# self.table[index]가 아닌 굳이 value의 존재 유무를 비교한 이유"}]},{type:a,value:r},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:"# self.table이 collections.defaultdict()로 선언되었기 때문에"}]},{type:a,value:r},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:"# 존재하지 않는 인덱스를 조회할 경우 바로 빈 ListNode를 생성"}]},{type:a,value:r},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:"# 자동으로 처리하는 부분은 편리하지만 자칫 잘못하면 버그를 유발할 수 있음"}]},{type:a,value:r},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:J}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:a,value:Y},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aa},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:aq}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,v]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:aw},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:a,value:Y},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:a,value:ay},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:D},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:M}]},{type:a,value:ap},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:"# 해당 인덱스에 노드가 존재하는 경우 (해시 충돌)"}]},{type:a,value:aO},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:a,value:Y},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:a,value:r},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:ac}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:D},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:"# 키가 이미 존재하는 경우 값을 업데이트하고 종료"}]},{type:a,value:D},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:J}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:N},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:ad}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:"\n                p"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aa},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:a,value:" value\n                "},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:M}]},{type:a,value:D},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:"# 연결 리스트가 끝났다면 루프 종료"}]},{type:a,value:D},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:J}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:t}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:aq}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,v]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:az},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:"break"}]},{type:a,value:"\n            p "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:t}]},{type:a,value:"\n            \n        "},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:"# 연결 리스트의 마지막에 새 노드 연결"}]},{type:a,value:"\n        p"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:t}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:a,value:ay},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:Z},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:F}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:an}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:H},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:W}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:aL},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:a,value:aM},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:ab}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aN},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:br}]},{type:a,value:r},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:J}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:a,value:Y},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aa},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:aq}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,v]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:D},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:M}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,K]},children:[{type:a,value:L}]},{type:a,value:ap},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:"# 해싱 결과가 존재하는 경우 연결 리스트를 탐색"}]},{type:a,value:aO},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:a,value:Y},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:a,value:r},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:ac}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:D},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:J}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:N},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:ad}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:az},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:M}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:"value\n            p "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:t}]},{type:a,value:r},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:M}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,K]},children:[{type:a,value:L}]},{type:a,value:Z},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:F}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:ao}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:H},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:W}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,v]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:aL},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:a,value:aM},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:ab}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aN},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:br}]},{type:a,value:r},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:J}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:a,value:Y},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aa},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:aq}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,v]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:D},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:M}]},{type:a,value:ap},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:"# 인덱스의 첫 번째 노드일 때 삭제 처리"}]},{type:a,value:aO},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:a,value:Y},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:a,value:r},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:J}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:N},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:ad}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:D},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:"# self.table이 collections.defaultdict()로 선언되었으므로"}]},{type:a,value:D},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:"# None으로 삭제하는 대신 빈 ListNode 객체를 디폴트로 설정"}]},{type:a,value:aw},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:a,value:Y},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:a,value:ay},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:J}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:t}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:aq}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,v]},children:[{type:a,value:w}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:"else"}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:t}]},{type:a,value:D},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:M}]},{type:a,value:ap},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:"# 연결 리스트 노드 삭제"}]},{type:a,value:bo},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:a,value:" p\n        "},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:ac}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:D},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:J}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:N},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:ad}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:bp},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:t}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:t}]},{type:a,value:az},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:M}]},{type:a,value:bq},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:" p "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:l}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:t}]},{type:a,value:h}]}]}]},{type:a,value:h}]},{type:a,value:h}]},{type:a,value:h},{type:b,tag:ag,props:{id:bb},children:[{type:b,tag:E,props:{href:"#%EB%B0%B0%EC%9A%B4-%EC%A0%90",ariaHidden:P,tabIndex:Q},children:[{type:b,tag:c,props:{className:[R,S]},children:[]}]},{type:a,value:bc}]},{type:a,value:h},{type:b,tag:ah,props:{id:bd},children:[{type:b,tag:E,props:{href:"#%EB%A1%9C%EB%93%9C-%ED%8C%A9%ED%84%B0-load-factor",ariaHidden:P,tabIndex:Q},children:[{type:b,tag:c,props:{className:[R,S]},children:[]}]},{type:a,value:be}]},{type:a,value:h},{type:b,tag:U,props:{},children:[{type:a,value:h},{type:b,tag:q,props:{},children:[{type:a,value:"해시 테이블에 저장된 데이터 개수 "},{type:b,tag:ai,props:{},children:[{type:a,value:"n"}]},{type:a,value:"을 버킷의 개수 "},{type:b,tag:ai,props:{},children:[{type:a,value:"k"}]},{type:a,value:"로 나눈 것"}]},{type:a,value:h},{type:b,tag:q,props:{},children:[{type:a,value:"버킷(Bucket): 해시 테이블에서 데이터가 저장되는 곳 (= 슬롯(Slot))"}]},{type:a,value:h},{type:b,tag:q,props:{},children:[{type:a,value:"로드 팩터 비율에 따라 해시 함수를 재작성하거나 해시 테이블의 크기를 조정할지를 결정한다."}]},{type:a,value:h},{type:b,tag:q,props:{},children:[{type:a,value:"로드 팩터가 증가할 수록 해시 테이블의 성능은 점점 감소한다."}]},{type:a,value:h}]},{type:a,value:h},{type:b,tag:ah,props:{id:bf},children:[{type:b,tag:E,props:{href:"#%ED%95%B4%EC%8B%9C%EC%9D%98-%EC%B6%A9%EB%8F%8Ccollision%EC%9D%84-%EC%B2%98%EB%A6%AC%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95",ariaHidden:P,tabIndex:Q},children:[{type:b,tag:c,props:{className:[R,S]},children:[]}]},{type:a,value:bg}]},{type:a,value:h},{type:b,tag:"ol",props:{},children:[{type:a,value:h},{type:b,tag:q,props:{},children:[{type:a,value:"개별 체이닝 (Separate Chaining)\n"},{type:b,tag:U,props:{},children:[{type:a,value:h},{type:b,tag:q,props:{},children:[{type:a,value:"충돌 발생 시 연결 리스트로 연결하는 방식"}]},{type:a,value:h},{type:b,tag:q,props:{},children:[{type:a,value:"대부분 시간 복잡도는 O(1)이지만, 최악의 경우 O(n)이다."}]},{type:a,value:h}]},{type:a,value:h}]},{type:a,value:h},{type:b,tag:q,props:{},children:[{type:a,value:"오픈 어드레싱 (Open Addressing)\n"},{type:b,tag:U,props:{},children:[{type:a,value:h},{type:b,tag:q,props:{},children:[{type:a,value:"충돌 발생 시 해시 테이블의 빈 공간을 탐사(Probing)하여 저장하는 방식\n"},{type:b,tag:U,props:{},children:[{type:a,value:h},{type:b,tag:q,props:{},children:[{type:a,value:"충돌 위치부터 시작하여 순차적으로 탐사하는 선형 탐사(Linear Probing) 방식이 가장 간단하지만, 해시 테이블에 저장되는 데이터들이 고르게 분포되지 않는 현상(Clustering)이 발생한다는 단점이 있다."}]},{type:a,value:h}]},{type:a,value:h}]},{type:a,value:h},{type:b,tag:q,props:{},children:[{type:a,value:"개별 체이닝 방법과는 달리 전체 슬롯의 개수 이상은 저장할 수 없다.\n"},{type:b,tag:U,props:{},children:[{type:a,value:h},{type:b,tag:q,props:{},children:[{type:a,value:"기준이 되는 로드 팩터 비율을 넘어서면 더 큰 크기의 또 다른 버킷을 만들어 복사하는 리해싱(Rehashing) 작업이 일어난다."}]},{type:a,value:h}]},{type:a,value:h}]},{type:a,value:h},{type:b,tag:q,props:{},children:[{type:a,value:"모든 원소가 반드시 자신의 해시값과 일치하는 주소에 저장된다는 보장이 없다."}]},{type:a,value:h},{type:b,tag:q,props:{},children:[{type:a,value:"파이썬은 이 방법을 사용한다고 한다. 개별 체이닝 방법으로 접근하면 연결 리스트를 만들 때마다 추가 메모리를 할당하는 작업에서 오버헤드가 높아지기 때문이다."}]},{type:a,value:h},{type:b,tag:q,props:{},children:[{type:a,value:"선형 탐사 방식은 일반적으로 개별 체이닝 방식에 비해 성능이 더 좋지만, 슬롯의 대부분이 차면 급격한 성능 저하가 일어나기 때문에 파이썬같은 모던(Modern) 언어들은 로드 팩터를 낮게 잡아 성능 저하 문제를 해결한다고 한다."}]},{type:a,value:h}]},{type:a,value:h}]},{type:a,value:h}]},{type:a,value:h},{type:b,tag:ag,props:{id:ar},children:[{type:b,tag:E,props:{href:"#%EC%B6%9C%EC%B2%98",ariaHidden:P,tabIndex:Q},children:[{type:b,tag:c,props:{className:[R,S]},children:[]}]},{type:a,value:ar}]},{type:a,value:h},{type:b,tag:U,props:{},children:[{type:a,value:h},{type:b,tag:q,props:{},children:[{type:a,value:"박상길, 『파이썬 알고리즘 인터뷰』, 책만(2020), p279-297.\n"},{type:b,tag:U,props:{},children:[{type:a,value:h},{type:b,tag:q,props:{},children:[{type:b,tag:E,props:{href:"https:\u002F\u002Fwww.onlybook.co.kr\u002Fentry\u002Falgorithm-interview",rel:[as,at,au],target:av},children:[{type:a,value:"도서 정보"}]}]},{type:a,value:h},{type:b,tag:q,props:{},children:[{type:b,tag:E,props:{href:"https:\u002F\u002Fgithub.com\u002Fonlybooks\u002Falgorithm-interview",rel:[as,at,au],target:av},children:[{type:a,value:"GitHub"}]}]},{type:a,value:h}]},{type:a,value:h}]},{type:a,value:h},{type:b,tag:q,props:{},children:[{type:b,tag:E,props:{href:bs,rel:[as,at,au],target:av},children:[{type:a,value:bs}]}]},{type:a,value:h}]}]},text:"\n## 문제 링크\n\nhttps:\u002F\u002Fleetcode.com\u002Fproblems\u002Fdesign-hashmap\u002F\n\n## 나의 풀이\n\n### 첫 번째 시도\n\n- 테이블(리스트)을 키의 최대 개수만큼 미리 할당하여 사용하였다.\n- 실행 시간은 빠르지만, 메모리 공간의 낭비가 심하며, 해시 테이블의 로직을 사용하지 않은 일종의 편법이므로 올바른 풀이법은 아니다.\n\n\u003Cdetails\u003E\n\u003Csummary\u003E소스 코드\u003C\u002Fsummary\u003E\n\u003Cdiv markdown=\"1\"\u003E\n\n```python\nclass MyHashMap1:\n    def __init__(self):\n        self.table = [-1] * (10 ** 6 + 1)\n\n    def put(self, key: int, value: int) -\u003E None:\n        # 키가 존재하면 해당 키를 먼저 삭제한 후 삽입\n        if self.get(key) != -1:\n            self.remove(key)\n        self.table[key] = value\n\n    def get(self, key: int) -\u003E int:\n        return self.table[key]\n\n    def remove(self, key: int) -\u003E None:\n        self.table[key] = -1\n```\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdetails\u003E\n\n### 두 번째 시도\n\n- 해시 테이블(리스트)의 공간을 적게 할당하는 대신 해시 충돌을 개별 체이닝 방식(연결 리스트)으로 처리하였다.\n- 실행 시간은 첫 번째 시도에 비해 압도적으로 느리지만, 메모리 공간을 절약할 수 있다.\n\n\u003Cdetails\u003E\n\u003Csummary\u003E소스 코드\u003C\u002Fsummary\u003E\n\u003Cdiv markdown=\"1\"\u003E\n\n```python\nclass ListNode:\n    def __init__(self, key=None, value=None, next=None):\n        self.key = key\n        self.value = value\n        self.next = next\n\n\nclass MyHashMap2:\n    def __init__(self):\n        self.hash_size = 101\n        # 테이블의 각 공간에 키와 값이 비어있는 노드를 미리 생성\n        self.table = [ListNode()] * self.hash_size\n\n    def put(self, key: int, value: int) -\u003E None:\n        # 키가 존재하면 해당 키를 먼저 삭제한 후 삽입\n        if self.get(key) != -1:\n            self.remove(key)\n\n        # 해당 해시 값의 연결 리스트 중 가장 마지막 위치에 노드 삽입\n        curr = self.table[key % self.hash_size]\n        while curr.next:\n            curr = curr.next\n        curr.next = ListNode(key, value)\n\n    def get(self, key: int) -\u003E int:\n        curr = self.table[key % self.hash_size]\n        # 같은 해시 값을 가지는 연결 리스트를 순회\n        while curr:\n            if curr.key == key:\n                return curr.value\n            curr = curr.next\n        return -1\n\n    def remove(self, key: int) -\u003E None:\n        curr = self.table[key % self.hash_size]\n        prev = None\n        while curr:\n            # 삭제할 키를 찾으면 이전 노드와 다음 노드를 연결\n            if curr.key == key:\n                prev.next = curr.next\n            prev, curr = curr, curr.next\n```\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdetails\u003E\n\n## 문제 풀이\n\n### 개별 체이닝 방식을 이용한 해시 테이블 구현\n\n\u003Cdetails\u003E\n\u003Csummary\u003E소스 코드\u003C\u002Fsummary\u003E\n\u003Cdiv markdown=\"1\"\u003E\n\n```python\nfrom collections import defaultdict\n\n\nclass ListNode:\n    def __init__(self, key=None, value=None):\n        self.key = key\n        self.value = value\n        self.next = None\n\n\nclass solution1:\n    def __init__(self):\n        self.size = 1000\n        # 존재하지 않는 키를 조회할 경우 디폴트로 연결 리스트의 노드 생성\n        self.table = defaultdict(ListNode)\n\n    def put(self, key: int, value: int) -\u003E None:\n        index = key % self.size\n\n        # self.table[index]가 아닌 굳이 value의 존재 유무를 비교한 이유\n        # self.table이 collections.defaultdict()로 선언되었기 때문에\n        # 존재하지 않는 인덱스를 조회할 경우 바로 빈 ListNode를 생성\n        # 자동으로 처리하는 부분은 편리하지만 자칫 잘못하면 버그를 유발할 수 있음\n        if self.table[index].value is None:\n            self.table[index] = ListNode(key, value)\n            return\n\n        # 해당 인덱스에 노드가 존재하는 경우 (해시 충돌)\n        p = self.table[index]\n        while p:\n            # 키가 이미 존재하는 경우 값을 업데이트하고 종료\n            if p.key == key:\n                p.value = value\n                return\n            # 연결 리스트가 끝났다면 루프 종료\n            if p.next is None:\n                break\n            p = p.next\n            \n        # 연결 리스트의 마지막에 새 노드 연결\n        p.next = ListNode(key, value)\n\n    def get(self, key: int) -\u003E int:\n        index = key % self.size\n\n        # 아직 어떠한 키도 이 값으로 해싱되지 않은 경우\n        if self.table[index].value is None:\n            return -1\n\n        # 해싱 결과가 존재하는 경우 연결 리스트를 탐색\n        p = self.table[index]\n        while p:\n            if p.key == key:\n                return p.value\n            p = p.next\n        return -1\n\n    def remove(self, key: int) -\u003E None:\n        index = key % self.size\n\n        # 아직 어떠한 키도 이 값으로 해싱되지 않은 경우\n        if self.table[index].value is None:\n            return\n\n        # 인덱스의 첫 번째 노드일 때 삭제 처리\n        p = self.table[index]\n        if p.key == key:\n            # self.table이 collections.defaultdict()로 선언되었으므로\n            # None으로 삭제하는 대신 빈 ListNode 객체를 디폴트로 설정\n            self.table[index] = ListNode() if p.next is None else p.next\n            return\n\n        # 연결 리스트 노드 삭제\n        prev = p\n        while p:\n            if p.key == key:\n                prev.next = p.next\n                return\n            prev, p = p, p.next\n```\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdetails\u003E\n\n## 배운 점\n\n### 로드 팩터 (Load Factor)\n\n- 해시 테이블에 저장된 데이터 개수 `n`을 버킷의 개수 `k`로 나눈 것\n- 버킷(Bucket): 해시 테이블에서 데이터가 저장되는 곳 (= 슬롯(Slot))\n- 로드 팩터 비율에 따라 해시 함수를 재작성하거나 해시 테이블의 크기를 조정할지를 결정한다.\n- 로드 팩터가 증가할 수록 해시 테이블의 성능은 점점 감소한다.\n\n### 해시의 충돌(Collision)을 처리하는 방법\n\n1. 개별 체이닝 (Separate Chaining)\n   - 충돌 발생 시 연결 리스트로 연결하는 방식\n   - 대부분 시간 복잡도는 O(1)이지만, 최악의 경우 O(n)이다.\n2. 오픈 어드레싱 (Open Addressing)\n   - 충돌 발생 시 해시 테이블의 빈 공간을 탐사(Probing)하여 저장하는 방식\n     - 충돌 위치부터 시작하여 순차적으로 탐사하는 선형 탐사(Linear Probing) 방식이 가장 간단하지만, 해시 테이블에 저장되는 데이터들이 고르게 분포되지 않는 현상(Clustering)이 발생한다는 단점이 있다.\n   - 개별 체이닝 방법과는 달리 전체 슬롯의 개수 이상은 저장할 수 없다.\n     - 기준이 되는 로드 팩터 비율을 넘어서면 더 큰 크기의 또 다른 버킷을 만들어 복사하는 리해싱(Rehashing) 작업이 일어난다.\n   - 모든 원소가 반드시 자신의 해시값과 일치하는 주소에 저장된다는 보장이 없다.\n   - 파이썬은 이 방법을 사용한다고 한다. 개별 체이닝 방법으로 접근하면 연결 리스트를 만들 때마다 추가 메모리를 할당하는 작업에서 오버헤드가 높아지기 때문이다.\n   - 선형 탐사 방식은 일반적으로 개별 체이닝 방식에 비해 성능이 더 좋지만, 슬롯의 대부분이 차면 급격한 성능 저하가 일어나기 때문에 파이썬같은 모던(Modern) 언어들은 로드 팩터를 낮게 잡아 성능 저하 문제를 해결한다고 한다.\n\n## 출처\n\n- 박상길, 『파이썬 알고리즘 인터뷰』, 책만(2020), p279-297.\n  - [도서 정보](https:\u002F\u002Fwww.onlybook.co.kr\u002Fentry\u002Falgorithm-interview)\n  - [GitHub](https:\u002F\u002Fgithub.com\u002Fonlybooks\u002Falgorithm-interview)\n- https:\u002F\u002Fratsgo.github.io\u002Fdata%20structure&algorithm\u002F2017\u002F10\u002F25\u002Fhash\u002F\n",dir:"\u002Fposts\u002F2021\u002F05\u002F23",path:"\u002Fposts\u002F2021\u002F05\u002F23\u002Fleetcode-706",extension:".md",createdAt:"2021-05-23T13:04:05.000Z",updatedAt:"2022-06-26T10:01:49.000Z"},isErrorPage:_,isDarkMode:_,isScrolled:_,isMobile:_,isTablet:_,hasHeaderImage:aP,isMobileMenuOpened:_,headerImage:"",perPage:10},serverRendered:aP,routePath:"\u002Fposts\u002Fleetcode-706",config:{_app:{basePath:"\u002F",assetsPath:"\u002F_nuxt\u002F",cdnURL:aQ},content:{dbHash:"7b550b9c"}},colorMode:{preference:bt,value:bt,unknown:aP,forced:_}}}("text","element","span","token","punctuation"," ","operator","\n",".","keyword",":","=","builtin","(",")",",","li","\n        ","comment","next"," self","boolean","None"," key","[","-","]"," p","int","\n            ","a","def","function","self","table","if","number","1","return","key "," curr","true",-1,"icon","icon-link","key","ul","\n        self","\u003E"," value","index","\n\n    ",false,"div","value ","%","while","==",2,3,"h2","h3","code","class","class-name","\n    ","__init__","get","remove","\n\n        ","is","출처","nofollow","noopener","noreferrer","_blank","\n            self","ListNode"," ListNode","\n                ","details","summary","소스 코드","nuxt-content-highlight","pre","language-python","line-numbers","table ","put","\n        curr ","hash_size","\n        index "," key ","size\n\n        ","\n        p ",true,null,"문제-링크","문제 링크","나의-풀이","나의 풀이","첫-번째-시도","첫 번째 시도","두-번째-시도","두 번째 시도","문제-풀이","문제 풀이","개별-체이닝-방식을-이용한-해시-테이블-구현","개별 체이닝 방식을 이용한 해시 테이블 구현","배운-점","배운 점","로드-팩터-load-factor","로드 팩터 (Load Factor)","해시의-충돌collision을-처리하는-방법","해시의 충돌(Collision)을 처리하는 방법","https:\u002F\u002Fleetcode.com\u002Fproblems\u002Fdesign-hashmap\u002F","*","# 키가 존재하면 해당 키를 먼저 삭제한 후 삽입","!="," key\n        self"," value\n        self","\n\n\n","\n        prev ","\n                prev","\n            prev","# 아직 어떠한 키도 이 값으로 해싱되지 않은 경우","https:\u002F\u002Fratsgo.github.io\u002Fdata%20structure&algorithm\u002F2017\u002F10\u002F25\u002Fhash\u002F","system"));